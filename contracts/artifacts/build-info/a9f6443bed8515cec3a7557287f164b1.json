{
	"id": "a9f6443bed8515cec3a7557287f164b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/TokenAllocationKernel.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title TokenAllocationKernel\n * @dev Kernel contract that recommends token allocation percentages based on user engagement\n */\ncontract TokenAllocationKernel {\n    address public owner;\n    address public studyDAOAuthority;\n    \n    // User metrics\n    mapping(address => UserMetrics) private userMetrics;\n    \n    // Authorized updaters (StudyDAO contracts that can update metrics)\n    mapping(address => bool) public authorizedUpdaters;\n    \n    struct UserMetrics {\n        // Engagement metrics (0-100 each)\n        uint8 participationScore;    // How actively user participates\n        uint8 contributionScore;     // Quality of user's contributions\n        uint8 consistencyScore;      // How consistently user engages\n        uint8 tokenUtilizationScore; // How effectively user utilizes tokens\n        \n        // Last update timestamp\n        uint32 lastUpdateTimestamp;\n    }\n    \n    // Events\n    event MetricsUpdated(address indexed user);\n    event UpdaterAuthorized(address indexed updater);\n    event UpdaterRemoved(address indexed updater);\n    event AuthorityUpdated(address indexed newAuthority);\n    \n    // Modifiers\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAuthorized() {\n        require(\n            msg.sender == owner || \n            msg.sender == studyDAOAuthority || \n            authorizedUpdaters[msg.sender], \n            \"Not authorized\"\n        );\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        authorizedUpdaters[msg.sender] = true;\n    }\n    \n    /**\n     * @dev Set the StudyDAO Authority address\n     * @param _authority The address of the StudyDAO Authority contract\n     */\n    function setStudyDAOAuthority(address _authority) external onlyOwner {\n        require(_authority != address(0), \"Invalid authority address\");\n        studyDAOAuthority = _authority;\n        emit AuthorityUpdated(_authority);\n    }\n    \n    /**\n     * @dev Add an authorized updater\n     * @param updater Address to authorize for metric updates\n     */\n    function addAuthorizedUpdater(address updater) external onlyOwner {\n        require(updater != address(0), \"Invalid updater address\");\n        authorizedUpdaters[updater] = true;\n        emit UpdaterAuthorized(updater);\n    }\n    \n    /**\n     * @dev Remove an authorized updater\n     * @param updater Address to remove authorization from\n     */\n    function removeAuthorizedUpdater(address updater) external onlyOwner {\n        authorizedUpdaters[updater] = false;\n        emit UpdaterRemoved(updater);\n    }\n    \n    /**\n     * @dev Update a user's metrics\n     * @param user Address of the user\n     * @param participation Participation score (0-100)\n     * @param contribution Contribution score (0-100)\n     * @param consistency Consistency score (0-100)\n     * @param tokenUtilization Token utilization score (0-100)\n     */\n    function updateUserMetrics(\n        address user,\n        uint8 participation,\n        uint8 contribution,\n        uint8 consistency,\n        uint8 tokenUtilization\n    ) external onlyAuthorized {\n        require(user != address(0), \"Invalid user address\");\n        require(\n            participation <= 100 &&\n            contribution <= 100 &&\n            consistency <= 100 &&\n            tokenUtilization <= 100,\n            \"Scores must be between 0-100\"\n        );\n        \n        UserMetrics storage metrics = userMetrics[user];\n        \n        metrics.participationScore = participation;\n        metrics.contributionScore = contribution;\n        metrics.consistencyScore = consistency;\n        metrics.tokenUtilizationScore = tokenUtilization;\n        metrics.lastUpdateTimestamp = uint32(block.timestamp);\n        \n        emit MetricsUpdated(user);\n    }\n    \n    /**\n     * @dev Update individual metric\n     * @param user Address of the user\n     * @param metricType Type of metric to update (1=participation, 2=contribution, 3=consistency, 4=tokenUtilization)\n     * @param value New value for the metric (0-100)\n     */\n    function updateSingleMetric(\n        address user,\n        uint8 metricType,\n        uint8 value\n    ) external onlyAuthorized {\n        require(user != address(0), \"Invalid user address\");\n        require(value <= 100, \"Score must be between 0-100\");\n        require(metricType >= 1 && metricType <= 4, \"Invalid metric type\");\n        \n        UserMetrics storage metrics = userMetrics[user];\n        \n        if (metricType == 1) {\n            metrics.participationScore = value;\n        } else if (metricType == 2) {\n            metrics.contributionScore = value;\n        } else if (metricType == 3) {\n            metrics.consistencyScore = value;\n        } else {\n            metrics.tokenUtilizationScore = value;\n        }\n        \n        metrics.lastUpdateTimestamp = uint32(block.timestamp);\n        emit MetricsUpdated(user);\n    }\n    \n    /**\n     * @dev KERNEL FUNCTION: Get recommended token allocation for a user\n     * @param user Address of the user\n     * @return allocation Recommended allocation percentage (0-100)\n     */\n    function getRecommendedTokenAllocation(address user) external view returns (uint8) {\n        UserMetrics memory metrics = userMetrics[user];\n        \n        // If no metrics exist yet, return a default recommendation\n        if (metrics.lastUpdateTimestamp == 0) {\n            return 30; // Default 30% allocation for new users\n        }\n        \n        // Calculate freshness factor - reduce allocation if metrics are stale\n        uint256 daysSinceUpdate = (block.timestamp - metrics.lastUpdateTimestamp) / 1 days;\n        uint256 freshnessFactor = daysSinceUpdate > 30 ? 70 : 100 - daysSinceUpdate;\n        \n        // Calculate base allocation from metrics with specific weights\n        uint256 baseAllocation = \n            (uint256(metrics.participationScore) * 30 +     // 30% weight for participation\n             uint256(metrics.contributionScore) * 25 +      // 25% weight for contribution quality\n             uint256(metrics.consistencyScore) * 25 +       // 25% weight for consistency\n             uint256(metrics.tokenUtilizationScore) * 20)   // 20% weight for token utilization\n            / 100;\n        \n        // Apply freshness factor (if metrics are old, reduce allocation)\n        uint256 finalAllocation = (baseAllocation * freshnessFactor) / 100;\n        \n        // Ensure result is 0-100\n        return finalAllocation > 100 ? 100 : uint8(finalAllocation);\n    }\n    \n    /**\n     * @dev Get detailed user metrics (for admin/UI use)\n     * @param user Address of the user\n     * @return participation Participation score\n     * @return contribution Contribution score\n     * @return consistency Consistency score\n     * @return tokenUtilization Token utilization score\n     * @return lastUpdateTime Last update timestamp\n     */\n    function getUserDetailedMetrics(address user) external view returns (\n        uint8 participation,\n        uint8 contribution,\n        uint8 consistency,\n        uint8 tokenUtilization,\n        uint32 lastUpdateTime\n    ) {\n        UserMetrics memory metrics = userMetrics[user];\n        return (\n            metrics.participationScore,\n            metrics.contributionScore,\n            metrics.consistencyScore,\n            metrics.tokenUtilizationScore,\n            metrics.lastUpdateTimestamp\n        );\n    }\n    \n    /**\n     * @dev KERNEL FUNCTION: Check if a user's metrics are fresh enough to be reliable\n     * @param user Address of the user\n     * @return isFresh Whether the metrics are fresh (updated within 14 days)\n     */\n    function areMetricsFresh(address user) external view returns (bool) {\n        UserMetrics memory metrics = userMetrics[user];\n        \n        if (metrics.lastUpdateTimestamp == 0) {\n            return false; // No metrics exist\n        }\n        \n        // Consider metrics fresh if updated within 14 days\n        return (block.timestamp - metrics.lastUpdateTimestamp) <= 14 days;\n    }\n    \n    /**\n     * @dev Transfer ownership of the contract\n     * @param newOwner New owner address\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"Invalid owner address\");\n        owner = newOwner;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TokenAllocationKernel.sol": {
				"TokenAllocationKernel": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAuthority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MetricsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "updater",
									"type": "address"
								}
							],
							"name": "UpdaterAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "updater",
									"type": "address"
								}
							],
							"name": "UpdaterRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "updater",
									"type": "address"
								}
							],
							"name": "addAuthorizedUpdater",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "areMetricsFresh",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedUpdaters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRecommendedTokenAllocation",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserDetailedMetrics",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "participation",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "contribution",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "consistency",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "tokenUtilization",
									"type": "uint8"
								},
								{
									"internalType": "uint32",
									"name": "lastUpdateTime",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "updater",
									"type": "address"
								}
							],
							"name": "removeAuthorizedUpdater",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authority",
									"type": "address"
								}
							],
							"name": "setStudyDAOAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "studyDAOAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "metricType",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "value",
									"type": "uint8"
								}
							],
							"name": "updateSingleMetric",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "participation",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "contribution",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "consistency",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "tokenUtilization",
									"type": "uint8"
								}
							],
							"name": "updateUserMetrics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Kernel contract that recommends token allocation percentages based on user engagement",
						"kind": "dev",
						"methods": {
							"addAuthorizedUpdater(address)": {
								"details": "Add an authorized updater",
								"params": {
									"updater": "Address to authorize for metric updates"
								}
							},
							"areMetricsFresh(address)": {
								"details": "KERNEL FUNCTION: Check if a user's metrics are fresh enough to be reliable",
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "isFresh Whether the metrics are fresh (updated within 14 days)"
								}
							},
							"getRecommendedTokenAllocation(address)": {
								"details": "KERNEL FUNCTION: Get recommended token allocation for a user",
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "allocation Recommended allocation percentage (0-100)"
								}
							},
							"getUserDetailedMetrics(address)": {
								"details": "Get detailed user metrics (for admin/UI use)",
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"consistency": "Consistency score",
									"contribution": "Contribution score",
									"lastUpdateTime": "Last update timestamp",
									"participation": "Participation score",
									"tokenUtilization": "Token utilization score"
								}
							},
							"removeAuthorizedUpdater(address)": {
								"details": "Remove an authorized updater",
								"params": {
									"updater": "Address to remove authorization from"
								}
							},
							"setStudyDAOAuthority(address)": {
								"details": "Set the StudyDAO Authority address",
								"params": {
									"_authority": "The address of the StudyDAO Authority contract"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfer ownership of the contract",
								"params": {
									"newOwner": "New owner address"
								}
							},
							"updateSingleMetric(address,uint8,uint8)": {
								"details": "Update individual metric",
								"params": {
									"metricType": "Type of metric to update (1=participation, 2=contribution, 3=consistency, 4=tokenUtilization)",
									"user": "Address of the user",
									"value": "New value for the metric (0-100)"
								}
							},
							"updateUserMetrics(address,uint8,uint8,uint8,uint8)": {
								"details": "Update a user's metrics",
								"params": {
									"consistency": "Consistency score (0-100)",
									"contribution": "Contribution score (0-100)",
									"participation": "Participation score (0-100)",
									"tokenUtilization": "Token utilization score (0-100)",
									"user": "Address of the user"
								}
							}
						},
						"title": "TokenAllocationKernel",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"contracts/TokenAllocationKernel.sol\":1595:1613  owner = msg.sender */\n  0x00\n    /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/TokenAllocationKernel.sol\":1603:1613  msg.sender */\n  caller\n    /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n  dup2\n  mstore\n    /* \"contracts/TokenAllocationKernel.sol\":1623:1641  authorizedUpdaters */\n  0x03\n    /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f1076bb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x603cda09\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6ad16934\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x87bc50a5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8c9b9fdc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8ff29cfe\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa5993a4e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xad9b8b4e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc459ad3a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      0xf6ac8558\n      eq\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_45\n      tag_1\n      jump\t// in\n    tag_45:\n      and\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":7215:7226  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      dup1\n      0x00\n      keccak256\n      dup2\n      mload\n      swap3\n      0xa0\n      dup5\n      add\n      swap1\n      dup5\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_46\n      jumpi\n      pop\n      swap3\n      0x80\n      swap2\n      0xa0\n      swap5\n      dup5\n      mstore\n      sload\n      swap1\n      0xff\n      dup3\n      and\n      swap4\n      dup5\n      dup3\n      mstore\n      0xff\n      dup4\n      0x08\n      shr\n      and\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      0xff\n      dup5\n      0x10\n      shr\n      and\n      swap3\n      dup4\n      dup4\n      dup3\n      add\n      mstore\n      0xffffffff\n      0xff\n      dup7\n      0x18\n      shr\n      and\n      swap6\n      dup7\n      0x60\n      dup5\n      add\n      mstore\n      0x20\n      shr\n      and\n      swap6\n      dup7\n      swap2\n      add\n      mstore\n      dup2\n      mload\n      swap6\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      mstore\n      dup5\n      add\n      mstore\n      0x60\n      dup4\n      add\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n      return\n    tag_46:\n      0x41\n      swap1\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_43:\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      swap1\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      tag_52\n      tag_1\n      jump\t// in\n    tag_52:\n      sload(0x00)\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_53\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1256  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup4\n      dup7\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1265  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_4\n      jump\t// in\n    tag_53:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":8281:8303  newOwner != address(0) */\n      swap3\n      dup4\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      tag_54\n      jumpi\n      pop\n      pop\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      or\n      0x00\n      sstore\n      stop\n    tag_54:\n      swap1\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x496e76616c6964206f776e65722061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_35:\n      pop\n      swap1\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_60\n      tag_1\n      jump\t// in\n    tag_60:\n      swap1\n      tag_61\n      tag_2\n      jump\t// in\n    tag_61:\n      swap3\n      tag_62\n      tag_3\n      jump\t// in\n    tag_62:\n      0x64\n      swap2\n      dup3\n      calldataload\n      swap3\n      0xff\n      dup5\n      and\n      swap5\n      dup6\n      dup6\n      sub\n      tag_43\n      jumpi\n      calldataload(0x84)\n      swap6\n      0xff\n      dup8\n      and\n      swap8\n      dup9\n      dup9\n      sub\n      tag_43\n      jumpi\n      sload(0x00)\n      dup5\n      swap2\n      0xff\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n      dup3\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1407  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n      dup1\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_68:\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n      dup1\n      iszero\n      tag_69\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_70:\n        /* \"contracts/TokenAllocationKernel.sol\":1367:1543  require(... */\n      tag_71\n      swap1\n      tag_9\n      jump\t// in\n    tag_71:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":3218:3236  user != address(0) */\n      swap11\n        /* \"contracts/TokenAllocationKernel.sol\":3210:3261  require(user != address(0), \"Invalid user address\") */\n      tag_72\n        /* \"contracts/TokenAllocationKernel.sol\":3218:3236  user != address(0) */\n      dup13\n      iszero\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":3210:3261  require(user != address(0), \"Invalid user address\") */\n      tag_10\n      jump\t// in\n    tag_72:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3312  participation <= 100 */\n      swap9\n      dup2\n      dup11\n      gt\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3347  participation <= 100 &&... */\n      swap3\n      dup4\n      tag_73\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_74:\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3381  participation <= 100 &&... */\n      dup4\n      tag_75\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_76:\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3420  participation <= 100 &&... */\n      pop\n      dup3\n      tag_77\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_78:\n      pop\n      pop\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup9\n      dup2\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":3523:3534  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      dup4\n      swap1\n      keccak256\n      dup1\n      sload\n      0xff000000\n      0x18\n      dup10\n      swap1\n      shl\n      and\n      not(0xffffff00)\n      dup11\n      and\n      not(0xffffffff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      0xff00\n      0x08\n      dup9\n      swap1\n      shl\n      and\n      or\n      0xff0000\n      0x10\n      dup10\n      swap1\n      shl\n      and\n      or\n      or\n      dup2\n      sstore\n      dup9\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":3767:3820  metrics.lastUpdateTimestamp = uint32(block.timestamp) */\n      tag_81\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":3709:3757  metrics.tokenUtilizationScore = tokenUtilization */\n    tag_82:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup1\n      sload\n      not(0xffffffff00000000)\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":3804:3819  block.timestamp */\n      timestamp\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      shl\n      0xffffffff00000000\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/TokenAllocationKernel.sol\":3767:3820  metrics.lastUpdateTimestamp = uint32(block.timestamp) */\n    tag_81:\n        /* \"contracts/TokenAllocationKernel.sol\":3844:3864  MetricsUpdated(user) */\n      0x4f1349ff271a07da3530b42c2c3c00406af7b44e35f9fdf1f66fc450d18ef4e0\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x00\n        /* \"contracts/TokenAllocationKernel.sol\":3844:3864  MetricsUpdated(user) */\n      dup1\n      log2\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      stop\n    tag_79:\n      0x20\n      dup4\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x53636f726573206d757374206265206265747765656e20302d31303000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3420  participation <= 100 &&... */\n    tag_77:\n        /* \"contracts/TokenAllocationKernel.sol\":3397:3420  tokenUtilization <= 100 */\n      gt\n      iszero\n      swap1\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3420  participation <= 100 &&... */\n      dup3\n      0x00\n      jump(tag_78)\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3381  participation <= 100 &&... */\n    tag_75:\n        /* \"contracts/TokenAllocationKernel.sol\":3363:3381  consistency <= 100 */\n      dup3\n      lt\n      iszero\n      swap3\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3381  participation <= 100 &&... */\n      0x00\n      jump(tag_76)\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3347  participation <= 100 &&... */\n    tag_73:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap3\n      pop\n      dup2\n      0xff\n      dup9\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":3328:3347  contribution <= 100 */\n      gt\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":3292:3347  participation <= 100 &&... */\n      swap3\n      jump(tag_74)\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n    tag_69:\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":1472:1490  authorizedUpdaters */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      dup9\n      swap1\n      keccak256\n      sload\n      dup4\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n      jump(tag_70)\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n    tag_67:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      pop\n      dup2\n        /* \"contracts/TokenAllocationKernel.sol\":1438:1455  studyDAOAuthority */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      sload\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1424:1455  msg.sender == studyDAOAuthority */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n      jump(tag_68)\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_33:\n      pop\n      swap1\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x60))\n      tag_89\n      tag_1\n      jump\t// in\n    tag_89:\n      swap1\n      tag_90\n      tag_2\n      jump\t// in\n    tag_90:\n      tag_91\n      tag_3\n      jump\t// in\n    tag_91:\n      sload(0x00)\n      swap1\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1407  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n      dup1\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_93:\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n      dup1\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_95:\n        /* \"contracts/TokenAllocationKernel.sol\":1367:1543  require(... */\n      tag_96\n      swap1\n      tag_9\n      jump\t// in\n    tag_96:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":4290:4308  user != address(0) */\n      swap3\n        /* \"contracts/TokenAllocationKernel.sol\":4282:4333  require(user != address(0), \"Invalid user address\") */\n      tag_97\n        /* \"contracts/TokenAllocationKernel.sol\":4290:4308  user != address(0) */\n      dup5\n      iszero\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":4282:4333  require(user != address(0), \"Invalid user address\") */\n      tag_10\n      jump\t// in\n    tag_97:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0xff\n      dup2\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":4351:4363  value <= 100 */\n      swap2\n        /* \"contracts/TokenAllocationKernel.sol\":4360:4363  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":4351:4363  value <= 100 */\n      dup4\n      gt\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      tag_98\n      jumpi\n      0xff\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":4413:4428  metricType >= 1 */\n      swap3\n        /* \"contracts/TokenAllocationKernel.sol\":4427:4428  1 */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":4413:4428  metricType >= 1 */\n      dup5\n      lt\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":4413:4447  metricType >= 1 && metricType <= 4 */\n      dup1\n      tag_100\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_101:\n      iszero\n      tag_102\n      jumpi\n      pop\n      dup4\n      swap5\n        /* \"contracts/TokenAllocationKernel.sol\":4891:4944  metrics.lastUpdateTimestamp = uint32(block.timestamp) */\n      tag_81\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap5\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":4520:4531  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      0x00\n      keccak256\n        /* \"contracts/TokenAllocationKernel.sol\":4560:4575  metricType == 1 */\n      swap3\n        /* \"contracts/TokenAllocationKernel.sol\":4427:4428  1 */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":4560:4575  metricType == 1 */\n      dup2\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":4556:4873  if (metricType == 1) {... */\n      0x00\n        /* \"contracts/TokenAllocationKernel.sol\":4427:4428  1 */\n      eq\n      tag_105\n      jumpi\n      pop\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup2\n      sload\n      not(0xff)\n      and\n      or\n      dup2\n      sstore\n      dup1\n      sload\n      not(0xffffffff00000000)\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":4928:4943  block.timestamp */\n      timestamp\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      shl\n      0xffffffff00000000\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/TokenAllocationKernel.sol\":4556:4873  if (metricType == 1) {... */\n    tag_105:\n        /* \"contracts/TokenAllocationKernel.sol\":4646:4661  metricType == 2 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":4520:4531  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":4646:4661  metricType == 2 */\n      dup2\n      sub\n        /* \"contracts/TokenAllocationKernel.sol\":4520:4531  userMetrics */\n      tag_108\n      jumpi\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup2\n      sload\n      not(0xff00)\n      and\n      0x08\n      swap2\n      swap1\n      swap2\n      shl\n      0xff00\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/TokenAllocationKernel.sol\":4556:4873  if (metricType == 1) {... */\n      jump(tag_82)\n        /* \"contracts/TokenAllocationKernel.sol\":4642:4873  if (metricType == 2) {... */\n    tag_108:\n        /* \"contracts/TokenAllocationKernel.sol\":4745:4746  3 */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":4731:4746  metricType == 3 */\n      sub\n        /* \"contracts/TokenAllocationKernel.sol\":4745:4746  3 */\n      tag_112\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup2\n      sload\n      not(0xff0000)\n      and\n      0x10\n      swap2\n      swap1\n      swap2\n      shl\n      0xff0000\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/TokenAllocationKernel.sol\":4556:4873  if (metricType == 1) {... */\n      jump(tag_82)\n        /* \"contracts/TokenAllocationKernel.sol\":4727:4873  if (metricType == 3) {... */\n    tag_112:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup2\n      sload\n      not(0xff000000)\n      and\n      0x18\n      swap2\n      swap1\n      swap2\n      shl\n      0xff000000\n      and\n      or\n      dup2\n      sstore\n        /* \"contracts/TokenAllocationKernel.sol\":4556:4873  if (metricType == 1) {... */\n      jump(tag_82)\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_102:\n        /* \"contracts/TokenAllocationKernel.sol\":4360:4363  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x496e76616c6964206d65747269632074797065)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/TokenAllocationKernel.sol\":4413:4447  metricType >= 1 && metricType <= 4 */\n    tag_100:\n        /* \"contracts/TokenAllocationKernel.sol\":4432:4447  metricType <= 4 */\n      pop\n      dup1\n      dup5\n      gt\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":4413:4447  metricType >= 1 && metricType <= 4 */\n      jump(tag_101)\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_98:\n      dup6\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup7\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x53636f7265206d757374206265206265747765656e20302d3130300000000000\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":4360:4363  100 */\n      0x64\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      revert\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n    tag_94:\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":1472:1490  authorizedUpdaters */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      dup7\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1502  msg.sender == owner || ... */\n      jump(tag_95)\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n    tag_92:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      pop\n      dup2\n        /* \"contracts/TokenAllocationKernel.sol\":1438:1455  studyDAOAuthority */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      sload\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1398  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1424:1455  msg.sender == studyDAOAuthority */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1388:1455  msg.sender == owner || ... */\n      jump(tag_93)\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_31:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      0xff\n      tag_121\n      tag_122\n      tag_1\n      jump\t// in\n    tag_122:\n      tag_8\n      jump\t// in\n    tag_121:\n      swap2\n      mload\n      swap2\n      and\n      dup2\n      mstore\n      return\n    tag_29:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_127\n      tag_1\n      jump\t// in\n    tag_127:\n      and\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":452:502  mapping(address => bool) public authorizedUpdaters */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup3\n      mstore\n      0xff\n      dup2\n      0x00\n      keccak256\n      sload\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_27:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_25:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      tag_136\n      tag_1\n      jump\t// in\n    tag_136:\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_137\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup4\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1256  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1265  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_4\n      jump\t// in\n    tag_137:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":2253:2274  updater != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      tag_138\n      jumpi\n      pop\n      dup2\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":2312:2330  authorizedUpdaters */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      0x00\n      keccak256\n        /* \"contracts/TokenAllocationKernel.sol\":2342:2346  true */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/TokenAllocationKernel.sol\":2361:2387  UpdaterAuthorized(updater) */\n      0xfbc99308a04b9b530a8dbc7eb620a7597c4b92ff15390ab23ffdd979b9c592e4\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x00\n        /* \"contracts/TokenAllocationKernel.sol\":2361:2387  UpdaterAuthorized(updater) */\n      dup1\n      log2\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      stop\n    tag_138:\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420757064617465722061646472657373000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_23:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      tag_144\n      tag_145\n      tag_1\n      jump\t// in\n    tag_145:\n      tag_6\n      jump\t// in\n    tag_144:\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_21:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_19:\n      pop\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      tag_154\n      tag_1\n      jump\t// in\n    tag_154:\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_155\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup4\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1256  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1265  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_4\n      jump\t// in\n    tag_155:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":2599:2617  authorizedUpdaters */\n      0x03\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      0x00\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"contracts/TokenAllocationKernel.sol\":2649:2672  UpdaterRemoved(updater) */\n      0x209d819a9ec655e89f2b2b9d65c8a78879b45a8f20d1941d69c5fe6dc21bcb62\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x00\n        /* \"contracts/TokenAllocationKernel.sol\":2649:2672  UpdaterRemoved(updater) */\n      dup1\n      log2\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      stop\n    tag_17:\n      pop\n      swap1\n      jumpi(tag_43, callvalue)\n      jumpi(tag_43, slt(add(not(0x03), calldatasize), 0x20))\n      tag_160\n      tag_1\n      jump\t// in\n    tag_160:\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_161\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup4\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1256  msg.sender */\n      caller\n        /* \"contracts/TokenAllocationKernel.sol\":1246:1265  msg.sender == owner */\n      eq\n        /* \"contracts/TokenAllocationKernel.sol\":1238:1303  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_4\n      jump\t// in\n    tag_161:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":1899:1923  _authority != address(0) */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      tag_162\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":1963:1993  studyDAOAuthority = _authority */\n      0x01\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n      dup3\n        /* \"contracts/TokenAllocationKernel.sol\":2008:2036  AuthorityUpdated(_authority) */\n      0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n      0x00\n      dup1\n      log2\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      stop\n    tag_162:\n      swap1\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420617574686f72697479206164647265737300000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_43\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      0xff\n      dup3\n      and\n      dup3\n      sub\n      tag_43\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x44)\n      swap1\n      0xff\n      dup3\n      and\n      dup3\n      sub\n      tag_43\n      jumpi\n      jump\t// out\n    tag_4:\n      iszero\n      tag_170\n      jumpi\n      jump\t// out\n    tag_170:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xf9, 0x37)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_5:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_172\n      jumpi\n      jump\t// out\n    tag_172:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/TokenAllocationKernel.sol\":7697:8085  function areMetricsFresh(address user) external view returns (bool) {... */\n    tag_6:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":7804:7815  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      0xa0\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_174\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":7844:7871  metrics.lastUpdateTimestamp */\n      0x80\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap3\n      0xffffffff\n      swap2\n      0x40\n      mstore\n      sload\n      0xff\n      dup2\n      and\n      dup4\n      mstore\n      0xff\n      dup2\n      0x08\n      shr\n      and\n      0x20\n      dup5\n      add\n      mstore\n      0xff\n      dup2\n      0x10\n      shr\n      and\n      0x40\n      dup5\n      add\n      mstore\n      0xff\n      dup2\n      0x18\n      shr\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x20\n      shr\n      and\n      swap2\n      dup3\n      swap2\n      add\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":7844:7876  metrics.lastUpdateTimestamp == 0 */\n      dup1\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":7840:7935  if (metrics.lastUpdateTimestamp == 0) {... */\n      tag_176\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":8021:8066  block.timestamp - metrics.lastUpdateTimestamp */\n      tag_178\n        /* \"contracts/TokenAllocationKernel.sol\":8071:8078  14 days */\n      0x127500\n        /* \"contracts/TokenAllocationKernel.sol\":8021:8036  block.timestamp */\n      swap2\n      timestamp\n        /* \"contracts/TokenAllocationKernel.sol\":8021:8066  block.timestamp - metrics.lastUpdateTimestamp */\n      tag_5\n      jump\t// in\n    tag_178:\n        /* \"contracts/TokenAllocationKernel.sol\":8020:8078  (block.timestamp - metrics.lastUpdateTimestamp) <= 14 days */\n      gt\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":7697:8085  function areMetricsFresh(address user) external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":7840:7935  if (metrics.lastUpdateTimestamp == 0) {... */\n    tag_176:\n        /* \"contracts/TokenAllocationKernel.sol\":7892:7904  return false */\n      pop\n      0x00\n      swap1\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_174:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_7:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_172\n      jumpi\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":5192:6583  function getRecommendedTokenAllocation(address user) external view returns (uint8) {... */\n    tag_8:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":5314:5325  userMetrics */\n      0x02\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0xa0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_174\n      jumpi\n      0x40\n      mstore\n      sload\n      swap1\n      0xff\n      swap2\n      dup3\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup4\n      dup3\n      0x08\n      shr\n      and\n      dup2\n      mstore\n      0x40\n      dup4\n      add\n      swap1\n      dup5\n      dup4\n      0x10\n      shr\n      and\n      dup3\n      mstore\n      0xffffffff\n      0x60\n      dup6\n      add\n      swap4\n      dup7\n      dup2\n      0x18\n      shr\n      and\n      dup6\n      mstore\n      0x20\n      shr\n      and\n      dup1\n      0x80\n      dup7\n      add\n      mstore\n        /* \"contracts/TokenAllocationKernel.sol\":5422:5454  metrics.lastUpdateTimestamp == 0 */\n      dup1\n      iszero\n        /* \"contracts/TokenAllocationKernel.sol\":5418:5530  if (metrics.lastUpdateTimestamp == 0) {... */\n      tag_183\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":5654:5699  block.timestamp - metrics.lastUpdateTimestamp */\n      tag_185\n        /* \"contracts/TokenAllocationKernel.sol\":5703:5709  1 days */\n      0x015180\n        /* \"contracts/TokenAllocationKernel.sol\":5654:5669  block.timestamp */\n      swap2\n      timestamp\n        /* \"contracts/TokenAllocationKernel.sol\":5654:5699  block.timestamp - metrics.lastUpdateTimestamp */\n      tag_5\n      jump\t// in\n    tag_185:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":5763:5765  30 */\n      0x1e\n        /* \"contracts/TokenAllocationKernel.sol\":5745:5765  daysSinceUpdate > 30 */\n      dup2\n      gt\n        /* \"contracts/TokenAllocationKernel.sol\":5763:5765  30 */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":5745:5794  daysSinceUpdate > 30 ? 70 : 100 - daysSinceUpdate */\n      pop\n      dup5\n        /* \"contracts/TokenAllocationKernel.sol\":5768:5770  70 */\n      0x46\n        /* \"contracts/TokenAllocationKernel.sol\":5745:5794  daysSinceUpdate > 30 ? 70 : 100 - daysSinceUpdate */\n      swap5\n    tag_188:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      mload\n      and\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":5763:5765  30 */\n      0x1e\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":5763:5765  30 */\n      0x1e\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_172\n      jumpi\n      dup6\n      swap1\n      mload\n      and\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":6053:6055  25 */\n      0x19\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":6053:6055  25 */\n      0x19\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":5924:6055  uint256(metrics.participationScore) * 30 +     // 30% weight for participation... */\n      dup6\n      swap2\n      tag_193\n      swap2\n      tag_7\n      jump\t// in\n    tag_193:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap2\n      mload\n      and\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":6053:6055  25 */\n      0x19\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":6053:6055  25 */\n      0x19\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":5924:6153  uint256(metrics.participationScore) * 30 +     // 30% weight for participation... */\n      dup5\n      swap2\n      tag_196\n      swap2\n      tag_7\n      jump\t// in\n    tag_196:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap2\n      mload\n      and\n      swap1\n        /* \"contracts/TokenAllocationKernel.sol\":6246:6248  20 */\n      0x14\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":6246:6248  20 */\n      0x14\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":6302:6305  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":5924:6248  uint256(metrics.participationScore) * 30 +     // 30% weight for participation... */\n      swap2\n      tag_199\n      swap2\n      tag_7\n      jump\t// in\n    tag_199:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      div\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":6302:6305  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      swap1\n      div\n        /* \"contracts/TokenAllocationKernel.sol\":6302:6305  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":6524:6545  finalAllocation > 100 */\n      dup2\n      gt\n        /* \"contracts/TokenAllocationKernel.sol\":6524:6576  finalAllocation > 100 ? 100 : uint8(finalAllocation) */\n      0x00\n        /* \"contracts/TokenAllocationKernel.sol\":6302:6305  100 */\n      eq\n      tag_202\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":6524:6576  finalAllocation > 100 ? 100 : uint8(finalAllocation) */\n      pop\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":6302:6305  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":5192:6583  function getRecommendedTokenAllocation(address user) external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":6524:6576  finalAllocation > 100 ? 100 : uint8(finalAllocation) */\n    tag_202:\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      and\n        /* \"contracts/TokenAllocationKernel.sol\":5192:6583  function getRecommendedTokenAllocation(address user) external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":5745:5794  daysSinceUpdate > 30 ? 70 : 100 - daysSinceUpdate */\n    tag_186:\n        /* \"contracts/TokenAllocationKernel.sol\":5773:5776  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      sub\n        /* \"contracts/TokenAllocationKernel.sol\":5773:5776  100 */\n      0x64\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n      dup2\n      gt\n      tag_172\n      jumpi\n        /* \"contracts/TokenAllocationKernel.sol\":5745:5794  daysSinceUpdate > 30 ? 70 : 100 - daysSinceUpdate */\n      dup6\n      swap1\n      swap5\n      jump(tag_188)\n        /* \"contracts/TokenAllocationKernel.sol\":5418:5530  if (metrics.lastUpdateTimestamp == 0) {... */\n    tag_183:\n        /* \"contracts/TokenAllocationKernel.sol\":5470:5479  return 30 */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TokenAllocationKernel.sol\":5477:5479  30 */\n      0x1e\n        /* \"contracts/TokenAllocationKernel.sol\":5470:5479  return 30 */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenAllocationKernel.sol\":192:8364  contract TokenAllocationKernel {... */\n    tag_9:\n      iszero\n      tag_207\n      jumpi\n      jump\t// out\n    tag_207:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      iszero\n      tag_209\n      jumpi\n      jump\t// out\n    tag_209:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x496e76616c696420757365722061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n\n    auxdata: 0xa26469706673582212203429b4dd85a270b5031aa18ae230a87dc655da07a9e15f95735e535e7def371764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461003f575f80546001600160a01b0319163390811782558152600360205260409020805460ff19166001179055610bb390816100448239f35b5f80fdfe60406080815260049081361015610014575f80fd5b5f3560e01c80635f1076bb14610792578063603cda09146107255780636ad16934146106fd57806387bc50a5146106cf5780638c9b9fdc146106165780638da5cb5b146105ef5780638ff29cfe146105b3578063a5993a4e14610584578063ad9b8b4e146103ae578063c459ad3a146101ea578063f2fde38b146101615763f6ac8558146100a0575f80fd5b3461015d57602036600319011261015d576001600160a01b036100c161084a565b165f526002602052805f2081519260a084019084821067ffffffffffffffff83111761014a57509260809160a0948452549060ff82169384825260ff8360081c1680602084015260ff8460101c1692838382015263ffffffff60ff8660181c169586606084015260201c1695869101528151958652602086015284015260608301526080820152f35b604190634e487b7160e01b5f525260245ffd5b5f80fd5b50903461015d57602036600319011261015d5761017c61084a565b5f5491906001600160a01b03906101963383861614610880565b169283156101af5750506001600160a01b031916175f55005b906020606492519162461bcd60e51b83528201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152fd5b50903461015d5760a036600319011261015d5761020561084a565b9061020e610860565b92610217610870565b60649182359260ff84169485850361015d576084359560ff87169788880361015d575f54849160ff916001600160a01b0391908216331480156103a1575b801561038b575b61026590610afd565b169a6102728c1515610b3a565b1698818a1115928361037c575b83610371575b5082610366575b505015610326575f8881526002602052839020805463ff000000601889901b1663ffffff00198a1663ffffffff199092169190911761ff00600888901b161762ff0000601089901b16171781558890610300905b805467ffffffff0000000019164260201b67ffffffff0000000016179055565b7f4f1349ff271a07da3530b42c2c3c00406af7b44e35f9fdf1f66fc450d18ef4e05f80a2005b602083519162461bcd60e51b8352820152601c60248201527f53636f726573206d757374206265206265747765656e20302d313030000000006044820152fd5b11159050825f61028c565b82101592505f610285565b92508160ff881611159261027f565b50335f908152600360205288902054831661025c565b5081600154163314610255565b50903461015d57606036600319011261015d576103c961084a565b906103d2610860565b6103da610870565b5f5490936001600160a01b0391821633148015610577575b8015610560575b61040290610afd565b169261040f841515610b3a565b60ff8116916064831161051d5760ff1692600184101580610513575b156104da57508394610300945f5260026020525f2092600181145f14610476575050815460ff1916178155805467ffffffff0000000019164260201b67ffffffff0000000016179055565b9091506002810361049b5750815461ff00191660089190911b61ff00161781556102e0565b6003036104bd57815462ff0000191660109190911b62ff0000161781556102e0565b815463ff000000191660189190911b63ff000000161781556102e0565b606490602087519162461bcd60e51b83528201526013602482015272496e76616c6964206d6574726963207479706560681b6044820152fd5b508084111561042b565b855162461bcd60e51b8152602081860152601b60248201527f53636f7265206d757374206265206265747765656e20302d31303000000000006044820152606490fd5b50335f90815260036020528690205460ff166103f9565b50816001541633146103f2565b503461015d57602036600319011261015d5760209060ff6105ab6105a661084a565b6109a3565b915191168152f35b503461015d57602036600319011261015d576020906001600160a01b036105d861084a565b165f526003825260ff815f20541690519015158152f35b503461015d575f36600319011261015d575f5490516001600160a01b039091168152602090f35b503461015d57602036600319011261015d5761063061084a565b5f546001600160a01b0391906106499083163314610880565b1691821561068d5750815f5260036020525f20600160ff198254161790557ffbc99308a04b9b530a8dbc7eb620a7597c4b92ff15390ab23ffdd979b9c592e45f80a2005b6020606492519162461bcd60e51b8352820152601760248201527f496e76616c6964207570646174657220616464726573730000000000000000006044820152fd5b503461015d57602036600319011261015d576020906106f46106ef61084a565b6108f7565b90519015158152f35b503461015d575f36600319011261015d5760015490516001600160a01b039091168152602090f35b503461015d57602036600319011261015d5761073f61084a565b5f546001600160a01b0391906107589083163314610880565b1690815f5260036020525f2060ff1981541690557f209d819a9ec655e89f2b2b9d65c8a78879b45a8f20d1941d69c5fe6dc21bcb625f80a2005b50903461015d57602036600319011261015d576107ad61084a565b5f546001600160a01b0391906107c69083163314610880565b1691821561080757600180546001600160a01b03191684179055827f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad5f80a2005b906020606492519162461bcd60e51b8352820152601960248201527f496e76616c696420617574686f726974792061646472657373000000000000006044820152fd5b600435906001600160a01b038216820361015d57565b6024359060ff8216820361015d57565b6044359060ff8216820361015d57565b1561088757565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b919082039182116108e357565b634e487b7160e01b5f52601160045260245ffd5b60018060a01b03165f52600260205260405f2060405160a0810181811067ffffffffffffffff8211176109825760809263ffffffff916040525460ff8116835260ff8160081c16602084015260ff8160101c16604084015260ff8160181c16606084015260201c169182910152801561097d576109786212750091426108d6565b111590565b505f90565b634e487b7160e01b5f52604160045260245ffd5b919082018092116108e357565b60018060a01b03165f52600260205260405f206040519060a0820182811067ffffffffffffffff82111761098257604052549060ff91828116825260208201838260081c1681526040830190848360101c16825263ffffffff6060850193868160181c16855260201c168060808601528015610af257610a276201518091426108d6565b04601e811115610adf5750846046945b511690601e820291808304601e14901517156108e35785905116906019820291808304601914901517156108e3578591610a7091610996565b915116906019820291808304601914901517156108e3578491610a9291610996565b915116906014820291808304601414901517156108e357606491610ab591610996565b048181029181830414901517156108e35760649004606481115f14610adb575050606490565b1690565b606403606481116108e357859094610a37565b505050505050601e90565b15610b0457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15610b4157565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b6044820152606490fdfea26469706673582212203429b4dd85a270b5031aa18ae230a87dc655da07a9e15f95735e535e7def371764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3F JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xBB3 SWAP1 DUP2 PUSH2 0x44 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F1076BB EQ PUSH2 0x792 JUMPI DUP1 PUSH4 0x603CDA09 EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0x6AD16934 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0x87BC50A5 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8C9B9FDC EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x8FF29CFE EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xA5993A4E EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xAD9B8B4E EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC459AD3A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x161 JUMPI PUSH4 0xF6AC8558 EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC1 PUSH2 0x84A JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 DUP2 MLOAD SWAP3 PUSH1 0xA0 DUP5 ADD SWAP1 DUP5 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x14A JUMPI POP SWAP3 PUSH1 0x80 SWAP2 PUSH1 0xA0 SWAP5 DUP5 MSTORE SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP4 DUP5 DUP3 MSTORE PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF DUP5 PUSH1 0x10 SHR AND SWAP3 DUP4 DUP4 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xFF DUP7 PUSH1 0x18 SHR AND SWAP6 DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 SHR AND SWAP6 DUP7 SWAP2 ADD MSTORE DUP2 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x17C PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x196 CALLER DUP4 DUP7 AND EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP3 DUP4 ISZERO PUSH2 0x1AF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x205 PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH2 0x20E PUSH2 0x860 JUMP JUMPDEST SWAP3 PUSH2 0x217 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP3 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND SWAP5 DUP6 DUP6 SUB PUSH2 0x15D JUMPI PUSH1 0x84 CALLDATALOAD SWAP6 PUSH1 0xFF DUP8 AND SWAP8 DUP9 DUP9 SUB PUSH2 0x15D JUMPI PUSH0 SLOAD DUP5 SWAP2 PUSH1 0xFF SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x3A1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x38B JUMPI JUMPDEST PUSH2 0x265 SWAP1 PUSH2 0xAFD JUMP JUMPDEST AND SWAP11 PUSH2 0x272 DUP13 ISZERO ISZERO PUSH2 0xB3A JUMP JUMPDEST AND SWAP9 DUP2 DUP11 GT ISZERO SWAP3 DUP4 PUSH2 0x37C JUMPI JUMPDEST DUP4 PUSH2 0x371 JUMPI JUMPDEST POP DUP3 PUSH2 0x366 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x326 JUMPI PUSH0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFF000000 PUSH1 0x18 DUP10 SWAP1 SHL AND PUSH4 0xFFFFFF00 NOT DUP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH2 0xFF00 PUSH1 0x8 DUP9 SWAP1 SHL AND OR PUSH3 0xFF0000 PUSH1 0x10 DUP10 SWAP1 SHL AND OR OR DUP2 SSTORE DUP9 SWAP1 PUSH2 0x300 SWAP1 JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND TIMESTAMP PUSH1 0x20 SHL PUSH8 0xFFFFFFFF00000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4F1349FF271A07DA3530B42C2C3C00406AF7B44E35F9FDF1F66FC450D18EF4E0 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 DUP4 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F726573206D757374206265206265747765656E20302D31303000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST GT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x28C JUMP JUMPDEST DUP3 LT ISZERO SWAP3 POP PUSH0 PUSH2 0x285 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DUP9 AND GT ISZERO SWAP3 PUSH2 0x27F JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP9 SWAP1 KECCAK256 SLOAD DUP4 AND PUSH2 0x25C JUMP JUMPDEST POP DUP2 PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x255 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x3C9 PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH2 0x3D2 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x3DA PUSH2 0x870 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x577 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI JUMPDEST PUSH2 0x402 SWAP1 PUSH2 0xAFD JUMP JUMPDEST AND SWAP3 PUSH2 0x40F DUP5 ISZERO ISZERO PUSH2 0xB3A JUMP JUMPDEST PUSH1 0xFF DUP2 AND SWAP2 PUSH1 0x64 DUP4 GT PUSH2 0x51D JUMPI PUSH1 0xFF AND SWAP3 PUSH1 0x1 DUP5 LT ISZERO DUP1 PUSH2 0x513 JUMPI JUMPDEST ISZERO PUSH2 0x4DA JUMPI POP DUP4 SWAP5 PUSH2 0x300 SWAP5 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP2 EQ PUSH0 EQ PUSH2 0x476 JUMPI POP POP DUP2 SLOAD PUSH1 0xFF NOT AND OR DUP2 SSTORE DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND TIMESTAMP PUSH1 0x20 SHL PUSH8 0xFFFFFFFF00000000 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP2 SUB PUSH2 0x49B JUMPI POP DUP2 SLOAD PUSH2 0xFF00 NOT AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFF00 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0x4BD JUMPI DUP2 SLOAD PUSH3 0xFF0000 NOT AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFF0000 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFF000000 NOT AND PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFF000000 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964206D65747269632074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP5 GT ISZERO PUSH2 0x42B JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F7265206D757374206265206265747765656E20302D3130300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP7 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F9 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x5AB PUSH2 0x5A6 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D8 PUSH2 0x84A JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0xFF DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x630 PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x649 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x68D JUMPI POP DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xFBC99308A04B9B530A8DBC7EB620A7597C4B92FF15390AB23FFDD979B9C592E4 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757064617465722061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6F4 PUSH2 0x6EF PUSH2 0x84A JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x73F PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x758 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x209D819A9EC655E89F2B2B9D65C8A78879B45A8F20D1941D69C5FE6DC21BCB62 PUSH0 DUP1 LOG2 STOP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x7AD PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x7C6 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x807 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP3 PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD PUSH0 DUP1 LOG2 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617574686F72697479206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x887 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x80 SWAP3 PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x40 MSTORE SLOAD PUSH1 0xFF DUP2 AND DUP4 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 SHR AND SWAP2 DUP3 SWAP2 ADD MSTORE DUP1 ISZERO PUSH2 0x97D JUMPI PUSH2 0x978 PUSH3 0x127500 SWAP2 TIMESTAMP PUSH2 0x8D6 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE SLOAD SWAP1 PUSH1 0xFF SWAP2 DUP3 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 DUP3 PUSH1 0x8 SHR AND DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP5 DUP4 PUSH1 0x10 SHR AND DUP3 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x60 DUP6 ADD SWAP4 DUP7 DUP2 PUSH1 0x18 SHR AND DUP6 MSTORE PUSH1 0x20 SHR AND DUP1 PUSH1 0x80 DUP7 ADD MSTORE DUP1 ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xA27 PUSH3 0x15180 SWAP2 TIMESTAMP PUSH2 0x8D6 JUMP JUMPDEST DIV PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xADF JUMPI POP DUP5 PUSH1 0x46 SWAP5 JUMPDEST MLOAD AND SWAP1 PUSH1 0x1E DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x1E EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP6 SWAP1 MLOAD AND SWAP1 PUSH1 0x19 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x19 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP6 SWAP2 PUSH2 0xA70 SWAP2 PUSH2 0x996 JUMP JUMPDEST SWAP2 MLOAD AND SWAP1 PUSH1 0x19 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x19 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP5 SWAP2 PUSH2 0xA92 SWAP2 PUSH2 0x996 JUMP JUMPDEST SWAP2 MLOAD AND SWAP1 PUSH1 0x14 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x14 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x64 SWAP2 PUSH2 0xAB5 SWAP2 PUSH2 0x996 JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x64 SWAP1 DIV PUSH1 0x64 DUP2 GT PUSH0 EQ PUSH2 0xADB JUMPI POP POP PUSH1 0x64 SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH1 0x64 SUB PUSH1 0x64 DUP2 GT PUSH2 0x8E3 JUMPI DUP6 SWAP1 SWAP5 PUSH2 0xA37 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x1E SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xB04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB41 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x29 0xB4 0xDD DUP6 LOG2 PUSH17 0xB5031AA18AE230A87DC655DA07A9E15F95 PUSH20 0x5E535E7DEF371764736F6C634300081800330000 ",
							"sourceMap": "192:8172:0:-:0;;;;;;;1595:18;192:8172;;-1:-1:-1;;;;;;192:8172:0;1603:10;192:8172;;;;;;;1623:18;192:8172;;;;;;;-1:-1:-1;;192:8172:0;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint8_8709": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_areMetricsFresh": {
									"entryPoint": 2295,
									"id": 531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_getRecommendedTokenAllocation": {
									"entryPoint": 2467,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_1b98": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_1f57": {
									"entryPoint": 2874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_fac3": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_storage_value_offset_2t_uint8_to_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint32_to_uint32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint8_to_t_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint8_to_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60406080815260049081361015610014575f80fd5b5f3560e01c80635f1076bb14610792578063603cda09146107255780636ad16934146106fd57806387bc50a5146106cf5780638c9b9fdc146106165780638da5cb5b146105ef5780638ff29cfe146105b3578063a5993a4e14610584578063ad9b8b4e146103ae578063c459ad3a146101ea578063f2fde38b146101615763f6ac8558146100a0575f80fd5b3461015d57602036600319011261015d576001600160a01b036100c161084a565b165f526002602052805f2081519260a084019084821067ffffffffffffffff83111761014a57509260809160a0948452549060ff82169384825260ff8360081c1680602084015260ff8460101c1692838382015263ffffffff60ff8660181c169586606084015260201c1695869101528151958652602086015284015260608301526080820152f35b604190634e487b7160e01b5f525260245ffd5b5f80fd5b50903461015d57602036600319011261015d5761017c61084a565b5f5491906001600160a01b03906101963383861614610880565b169283156101af5750506001600160a01b031916175f55005b906020606492519162461bcd60e51b83528201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152fd5b50903461015d5760a036600319011261015d5761020561084a565b9061020e610860565b92610217610870565b60649182359260ff84169485850361015d576084359560ff87169788880361015d575f54849160ff916001600160a01b0391908216331480156103a1575b801561038b575b61026590610afd565b169a6102728c1515610b3a565b1698818a1115928361037c575b83610371575b5082610366575b505015610326575f8881526002602052839020805463ff000000601889901b1663ffffff00198a1663ffffffff199092169190911761ff00600888901b161762ff0000601089901b16171781558890610300905b805467ffffffff0000000019164260201b67ffffffff0000000016179055565b7f4f1349ff271a07da3530b42c2c3c00406af7b44e35f9fdf1f66fc450d18ef4e05f80a2005b602083519162461bcd60e51b8352820152601c60248201527f53636f726573206d757374206265206265747765656e20302d313030000000006044820152fd5b11159050825f61028c565b82101592505f610285565b92508160ff881611159261027f565b50335f908152600360205288902054831661025c565b5081600154163314610255565b50903461015d57606036600319011261015d576103c961084a565b906103d2610860565b6103da610870565b5f5490936001600160a01b0391821633148015610577575b8015610560575b61040290610afd565b169261040f841515610b3a565b60ff8116916064831161051d5760ff1692600184101580610513575b156104da57508394610300945f5260026020525f2092600181145f14610476575050815460ff1916178155805467ffffffff0000000019164260201b67ffffffff0000000016179055565b9091506002810361049b5750815461ff00191660089190911b61ff00161781556102e0565b6003036104bd57815462ff0000191660109190911b62ff0000161781556102e0565b815463ff000000191660189190911b63ff000000161781556102e0565b606490602087519162461bcd60e51b83528201526013602482015272496e76616c6964206d6574726963207479706560681b6044820152fd5b508084111561042b565b855162461bcd60e51b8152602081860152601b60248201527f53636f7265206d757374206265206265747765656e20302d31303000000000006044820152606490fd5b50335f90815260036020528690205460ff166103f9565b50816001541633146103f2565b503461015d57602036600319011261015d5760209060ff6105ab6105a661084a565b6109a3565b915191168152f35b503461015d57602036600319011261015d576020906001600160a01b036105d861084a565b165f526003825260ff815f20541690519015158152f35b503461015d575f36600319011261015d575f5490516001600160a01b039091168152602090f35b503461015d57602036600319011261015d5761063061084a565b5f546001600160a01b0391906106499083163314610880565b1691821561068d5750815f5260036020525f20600160ff198254161790557ffbc99308a04b9b530a8dbc7eb620a7597c4b92ff15390ab23ffdd979b9c592e45f80a2005b6020606492519162461bcd60e51b8352820152601760248201527f496e76616c6964207570646174657220616464726573730000000000000000006044820152fd5b503461015d57602036600319011261015d576020906106f46106ef61084a565b6108f7565b90519015158152f35b503461015d575f36600319011261015d5760015490516001600160a01b039091168152602090f35b503461015d57602036600319011261015d5761073f61084a565b5f546001600160a01b0391906107589083163314610880565b1690815f5260036020525f2060ff1981541690557f209d819a9ec655e89f2b2b9d65c8a78879b45a8f20d1941d69c5fe6dc21bcb625f80a2005b50903461015d57602036600319011261015d576107ad61084a565b5f546001600160a01b0391906107c69083163314610880565b1691821561080757600180546001600160a01b03191684179055827f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad5f80a2005b906020606492519162461bcd60e51b8352820152601960248201527f496e76616c696420617574686f726974792061646472657373000000000000006044820152fd5b600435906001600160a01b038216820361015d57565b6024359060ff8216820361015d57565b6044359060ff8216820361015d57565b1561088757565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b919082039182116108e357565b634e487b7160e01b5f52601160045260245ffd5b60018060a01b03165f52600260205260405f2060405160a0810181811067ffffffffffffffff8211176109825760809263ffffffff916040525460ff8116835260ff8160081c16602084015260ff8160101c16604084015260ff8160181c16606084015260201c169182910152801561097d576109786212750091426108d6565b111590565b505f90565b634e487b7160e01b5f52604160045260245ffd5b919082018092116108e357565b60018060a01b03165f52600260205260405f206040519060a0820182811067ffffffffffffffff82111761098257604052549060ff91828116825260208201838260081c1681526040830190848360101c16825263ffffffff6060850193868160181c16855260201c168060808601528015610af257610a276201518091426108d6565b04601e811115610adf5750846046945b511690601e820291808304601e14901517156108e35785905116906019820291808304601914901517156108e3578591610a7091610996565b915116906019820291808304601914901517156108e3578491610a9291610996565b915116906014820291808304601414901517156108e357606491610ab591610996565b048181029181830414901517156108e35760649004606481115f14610adb575050606490565b1690565b606403606481116108e357859094610a37565b505050505050601e90565b15610b0457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15610b4157565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642075736572206164647265737360601b6044820152606490fdfea26469706673582212203429b4dd85a270b5031aa18ae230a87dc655da07a9e15f95735e535e7def371764736f6c63430008180033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F1076BB EQ PUSH2 0x792 JUMPI DUP1 PUSH4 0x603CDA09 EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0x6AD16934 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0x87BC50A5 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8C9B9FDC EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x8FF29CFE EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xA5993A4E EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xAD9B8B4E EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC459AD3A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x161 JUMPI PUSH4 0xF6AC8558 EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC1 PUSH2 0x84A JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 DUP2 MLOAD SWAP3 PUSH1 0xA0 DUP5 ADD SWAP1 DUP5 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x14A JUMPI POP SWAP3 PUSH1 0x80 SWAP2 PUSH1 0xA0 SWAP5 DUP5 MSTORE SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP4 DUP5 DUP3 MSTORE PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF DUP5 PUSH1 0x10 SHR AND SWAP3 DUP4 DUP4 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xFF DUP7 PUSH1 0x18 SHR AND SWAP6 DUP7 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 SHR AND SWAP6 DUP7 SWAP2 ADD MSTORE DUP2 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x17C PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x196 CALLER DUP4 DUP7 AND EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP3 DUP4 ISZERO PUSH2 0x1AF JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH0 SSTORE STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x205 PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH2 0x20E PUSH2 0x860 JUMP JUMPDEST SWAP3 PUSH2 0x217 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP3 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND SWAP5 DUP6 DUP6 SUB PUSH2 0x15D JUMPI PUSH1 0x84 CALLDATALOAD SWAP6 PUSH1 0xFF DUP8 AND SWAP8 DUP9 DUP9 SUB PUSH2 0x15D JUMPI PUSH0 SLOAD DUP5 SWAP2 PUSH1 0xFF SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x3A1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x38B JUMPI JUMPDEST PUSH2 0x265 SWAP1 PUSH2 0xAFD JUMP JUMPDEST AND SWAP11 PUSH2 0x272 DUP13 ISZERO ISZERO PUSH2 0xB3A JUMP JUMPDEST AND SWAP9 DUP2 DUP11 GT ISZERO SWAP3 DUP4 PUSH2 0x37C JUMPI JUMPDEST DUP4 PUSH2 0x371 JUMPI JUMPDEST POP DUP3 PUSH2 0x366 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x326 JUMPI PUSH0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFF000000 PUSH1 0x18 DUP10 SWAP1 SHL AND PUSH4 0xFFFFFF00 NOT DUP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH2 0xFF00 PUSH1 0x8 DUP9 SWAP1 SHL AND OR PUSH3 0xFF0000 PUSH1 0x10 DUP10 SWAP1 SHL AND OR OR DUP2 SSTORE DUP9 SWAP1 PUSH2 0x300 SWAP1 JUMPDEST DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND TIMESTAMP PUSH1 0x20 SHL PUSH8 0xFFFFFFFF00000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4F1349FF271A07DA3530B42C2C3C00406AF7B44E35F9FDF1F66FC450D18EF4E0 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 DUP4 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F726573206D757374206265206265747765656E20302D31303000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST GT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x28C JUMP JUMPDEST DUP3 LT ISZERO SWAP3 POP PUSH0 PUSH2 0x285 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0xFF DUP9 AND GT ISZERO SWAP3 PUSH2 0x27F JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP9 SWAP1 KECCAK256 SLOAD DUP4 AND PUSH2 0x25C JUMP JUMPDEST POP DUP2 PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x255 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x3C9 PUSH2 0x84A JUMP JUMPDEST SWAP1 PUSH2 0x3D2 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x3DA PUSH2 0x870 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x577 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI JUMPDEST PUSH2 0x402 SWAP1 PUSH2 0xAFD JUMP JUMPDEST AND SWAP3 PUSH2 0x40F DUP5 ISZERO ISZERO PUSH2 0xB3A JUMP JUMPDEST PUSH1 0xFF DUP2 AND SWAP2 PUSH1 0x64 DUP4 GT PUSH2 0x51D JUMPI PUSH1 0xFF AND SWAP3 PUSH1 0x1 DUP5 LT ISZERO DUP1 PUSH2 0x513 JUMPI JUMPDEST ISZERO PUSH2 0x4DA JUMPI POP DUP4 SWAP5 PUSH2 0x300 SWAP5 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 KECCAK256 SWAP3 PUSH1 0x1 DUP2 EQ PUSH0 EQ PUSH2 0x476 JUMPI POP POP DUP2 SLOAD PUSH1 0xFF NOT AND OR DUP2 SSTORE DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND TIMESTAMP PUSH1 0x20 SHL PUSH8 0xFFFFFFFF00000000 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP2 SUB PUSH2 0x49B JUMPI POP DUP2 SLOAD PUSH2 0xFF00 NOT AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFF00 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0x4BD JUMPI DUP2 SLOAD PUSH3 0xFF0000 NOT AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFF0000 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFF000000 NOT AND PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFF000000 AND OR DUP2 SSTORE PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964206D65747269632074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP5 GT ISZERO PUSH2 0x42B JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F7265206D757374206265206265747765656E20302D3130300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP7 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3F9 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x5AB PUSH2 0x5A6 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D8 PUSH2 0x84A JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0xFF DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x630 PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x649 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x68D JUMPI POP DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xFBC99308A04B9B530A8DBC7EB620A7597C4B92FF15390AB23FFDD979B9C592E4 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757064617465722061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6F4 PUSH2 0x6EF PUSH2 0x84A JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x73F PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x758 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x209D819A9EC655E89F2B2B9D65C8A78879B45A8F20D1941D69C5FE6DC21BCB62 PUSH0 DUP1 LOG2 STOP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0x7AD PUSH2 0x84A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x7C6 SWAP1 DUP4 AND CALLER EQ PUSH2 0x880 JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x807 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP3 PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD PUSH0 DUP1 LOG2 STOP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617574686F72697479206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x15D JUMPI JUMP JUMPDEST ISZERO PUSH2 0x887 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x80 SWAP3 PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x40 MSTORE SLOAD PUSH1 0xFF DUP2 AND DUP4 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 SHR AND SWAP2 DUP3 SWAP2 ADD MSTORE DUP1 ISZERO PUSH2 0x97D JUMPI PUSH2 0x978 PUSH3 0x127500 SWAP2 TIMESTAMP PUSH2 0x8D6 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x982 JUMPI PUSH1 0x40 MSTORE SLOAD SWAP1 PUSH1 0xFF SWAP2 DUP3 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 DUP3 PUSH1 0x8 SHR AND DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP5 DUP4 PUSH1 0x10 SHR AND DUP3 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x60 DUP6 ADD SWAP4 DUP7 DUP2 PUSH1 0x18 SHR AND DUP6 MSTORE PUSH1 0x20 SHR AND DUP1 PUSH1 0x80 DUP7 ADD MSTORE DUP1 ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xA27 PUSH3 0x15180 SWAP2 TIMESTAMP PUSH2 0x8D6 JUMP JUMPDEST DIV PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xADF JUMPI POP DUP5 PUSH1 0x46 SWAP5 JUMPDEST MLOAD AND SWAP1 PUSH1 0x1E DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x1E EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP6 SWAP1 MLOAD AND SWAP1 PUSH1 0x19 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x19 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP6 SWAP2 PUSH2 0xA70 SWAP2 PUSH2 0x996 JUMP JUMPDEST SWAP2 MLOAD AND SWAP1 PUSH1 0x19 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x19 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI DUP5 SWAP2 PUSH2 0xA92 SWAP2 PUSH2 0x996 JUMP JUMPDEST SWAP2 MLOAD AND SWAP1 PUSH1 0x14 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x14 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x64 SWAP2 PUSH2 0xAB5 SWAP2 PUSH2 0x996 JUMP JUMPDEST DIV DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x64 SWAP1 DIV PUSH1 0x64 DUP2 GT PUSH0 EQ PUSH2 0xADB JUMPI POP POP PUSH1 0x64 SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH1 0x64 SUB PUSH1 0x64 DUP2 GT PUSH2 0x8E3 JUMPI DUP6 SWAP1 SWAP5 PUSH2 0xA37 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x1E SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xB04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB41 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x29 0xB4 0xDD DUP6 LOG2 PUSH17 0xB5031AA18AE230A87DC655DA07A9E15F95 PUSH20 0x5E535E7DEF371764736F6C634300081800330000 ",
							"sourceMap": "192:8172:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;-1:-1:-1;;;;;192:8172:0;;:::i;:::-;;;;7215:11;192:8172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;192:8172:0;1238:65;1246:10;192:8172;;;1246:19;1238:65;:::i;:::-;192:8172;8281:22;;;192:8172;;-1:-1:-1;;;;;;;;192:8172:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;192:8172:0;;;;1388:10;:19;:67;;;;192:8172;1388:114;;;;192:8172;1367:176;;;:::i;:::-;192:8172;3218:18;3210:51;3218:18;;;3210:51;:::i;:::-;192:8172;3292:20;;;;;:55;;;;192:8172;3292:89;;;192:8172;3292:128;;;;192:8172;;;;;;;;;;3523:11;192:8172;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;-1:-1:-1;;192:8172:0;;;;;;;;;;;;;;;;;;;;;;;;;;3767:53;;3709:48;192:8172;;-1:-1:-1;;192:8172:0;3804:15;192:8172;;;;;;;;3767:53;3844:20;192:8172;3844:20;;192:8172;;;;;;;;;;;;;;;;;;;;;;;;;3292:128;3397:23;;;-1:-1:-1;3292:128:0;;;;:89;3363:18;-1:-1:-1;3363:18:0;;-1:-1:-1;3292:89:0;;;:55;192:8172;;;;;;3328:19;;3292:55;;;1388:114;-1:-1:-1;1388:10:0;192:8172;;;;1472:18;192:8172;;;;;;;;1388:114;;:67;192:8172;;1438:17;192:8172;;1388:10;1424:31;1388:67;;192:8172;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;192:8172:0;;;1388:10;:19;:67;;;;192:8172;1388:114;;;;192:8172;1367:176;;;:::i;:::-;192:8172;4290:18;4282:51;4290:18;;;4282:51;:::i;:::-;192:8172;;;4351:12;4360:3;4351:12;;192:8172;;;;4413:15;4427:1;4413:15;;;:34;;;192:8172;;;;;;;4891:53;192:8172;;;4520:11;192:8172;;;;4560:15;4427:1;4560:15;;4556:317;4427:1;;;-1:-1:-1;;192:8172:0;;-1:-1:-1;;192:8172:0;;;;;;-1:-1:-1;;192:8172:0;4928:15;192:8172;;;;;;;;4556:317;4646:15;;-1:-1:-1;4520:11:0;4646:15;;4520:11;;-1:-1:-1;192:8172:0;;-1:-1:-1;;192:8172:0;;;;;;;;;;;4556:317;;4642:231;4745:1;4731:15;4745:1;;192:8172;;-1:-1:-1;;192:8172:0;;;;;;;;;;;4556:317;;4727:146;192:8172;;-1:-1:-1;;192:8172:0;;;;;;;;;;;4556:317;;192:8172;4360:3;192:8172;;;;;;;;;;;;;;;;;;-1:-1:-1;;;192:8172:0;;;;;4413:34;4432:15;;;;;4413:34;;192:8172;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;;;;;;4360:3;;192:8172;1388:114;-1:-1:-1;1388:10:0;192:8172;;;;1472:18;192:8172;;;;;;;;1388:114;;:67;192:8172;;1438:17;192:8172;;1388:10;1424:31;1388:67;;192:8172;;;;;;;-1:-1:-1;;192:8172:0;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;-1:-1:-1;;;;;192:8172:0;;:::i;:::-;;;;452:50;192:8172;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;;;-1:-1:-1;;;;;192:8172:0;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;192:8172:0;;1238:65;;192:8172;;1246:10;:19;1238:65;:::i;:::-;192:8172;2253:21;;;192:8172;;;;;;2312:18;192:8172;;;;2342:4;192:8172;;;;;;;;2361:26;192:8172;2361:26;;192:8172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;;;-1:-1:-1;;;;;192:8172:0;;;;;;;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;192:8172:0;;1238:65;;192:8172;;1246:10;:19;1238:65;:::i;:::-;192:8172;;;;;2599:18;192:8172;;;;;;;;;;;2649:23;192:8172;2649:23;;192:8172;;;;;;;;;-1:-1:-1;;192:8172:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;192:8172:0;;1238:65;;192:8172;;1246:10;:19;1238:65;:::i;:::-;192:8172;1899:24;;;192:8172;;1963:30;192:8172;;-1:-1:-1;;;;;;192:8172:0;;;;;;2008:28;-1:-1:-1;;2008:28:0;192:8172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;192:8172:0;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7697:388;192:8172;;;;;;-1:-1:-1;192:8172:0;7804:11;192:8172;;;-1:-1:-1;192:8172:0;;;;;;;;;;;;;;;7844:27;192:8172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7844:32;;7840:95;;8021:45;8071:7;8021:15;;:45;:::i;:::-;8020:58;;7697:388;:::o;7840:95::-;7892:12;-1:-1:-1;7892:12:0;:::o;192:8172::-;;;;-1:-1:-1;192:8172:0;;;;;-1:-1:-1;192:8172:0;;;;;;;;;;;:::o;5192:1391::-;192:8172;;;;;;-1:-1:-1;192:8172:0;5314:11;192:8172;;;-1:-1:-1;192:8172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5422:32;;5418:112;;5654:45;5703:6;5654:15;;:45;:::i;:::-;192:8172;5763:2;5745:20;;5763:2;;;5745:49;;5768:2;5745:49;;192:8172;;;5763:2;192:8172;;;;;;5763:2;192:8172;;;;;;;;;;;;6053:2;192:8172;;;;;;6053:2;192:8172;;;;;;;5924:131;;;;;:::i;:::-;192:8172;;;;6053:2;192:8172;;;;;;6053:2;192:8172;;;;;;;5924:229;;;;;:::i;:::-;192:8172;;;;6246:2;192:8172;;;;;;6246:2;192:8172;;;;;;;6302:3;5924:324;;;;:::i;:::-;192:8172;;;;;;;;;;;;;;;6302:3;192:8172;;6302:3;6524:21;;:52;6302:3;;;6524:52;;6302:3;5192:1391;:::o;6524:52::-;192:8172;5192:1391;:::o;5745:49::-;5773:3;192:8172;5773:3;192:8172;;;;5745:49;;;;;5418:112;5470:9;;;;;;5477:2;5470:9;:::o;192:8172::-;;;;:::o;:::-;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;192:8172:0;;;;;;;;;;;;-1:-1:-1;;;192:8172:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "599000",
								"executionCost": "49163",
								"totalCost": "648163"
							},
							"external": {
								"addAuthorizedUpdater(address)": "27913",
								"areMetricsFresh(address)": "2804",
								"authorizedUpdaters(address)": "2556",
								"getRecommendedTokenAllocation(address)": "infinite",
								"getUserDetailedMetrics(address)": "2940",
								"owner()": "2392",
								"removeAuthorizedUpdater(address)": "27820",
								"setStudyDAOAuthority(address)": "27783",
								"studyDAOAuthority()": "2327",
								"transferOwnership(address)": "24764",
								"updateSingleMetric(address,uint8,uint8)": "56996",
								"updateUserMetrics(address,uint8,uint8,uint8,uint8)": "57180"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1595,
									"end": 1613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1603,
									"end": 1613,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1623,
									"end": 1641,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 8364,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203429b4dd85a270b5031aa18ae230a87dc655da07a9e15f95735e535e7def371764736f6c63430008180033",
									".code": [
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "5F1076BB"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "603CDA09"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "6AD16934"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "87BC50A5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8C9B9FDC"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8FF29CFE"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A5993A4E"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "AD9B8B4E"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "C459AD3A"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "F6AC8558"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7226,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206F776E65722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3210,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3210,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF00"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3757,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3709,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3819,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3864,
											"name": "PUSH",
											"source": 0,
											"value": "4F1349FF271A07DA3530B42C2C3C00406AF7B44E35F9FDF1F66FC450D18EF4E0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3864,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "53636F726573206D757374206265206265747765656E20302D31303000000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3420,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3292,
											"end": 3420,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3292,
											"end": 3381,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3292,
											"end": 3347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4282,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4282,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4891,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 4943,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4520,
											"end": 4531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF00"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4873,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4731,
											"end": 4746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4873,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4727,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4556,
											"end": 4873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D65747269632074797065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "53636F7265206D757374206265206265747765656E20302D3130300000000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1388,
											"end": 1502,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1388,
											"end": 1455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 0,
											"value": "FBC99308A04B9B530A8DBC7EB620A7597C4B92FF15390AB23FFDD979B9C592E4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C696420757064617465722061646472657373000000000000000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "209D819A9EC655E89F2B2B9D65C8A78879B45A8F20D1941D69C5FE6DC21BCB62"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2672,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1238,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2036,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C696420617574686F72697479206164647265737300000000000000"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 8085,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7697,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7815,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7871,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7840,
											"end": 7935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8071,
											"end": 8078,
											"name": "PUSH",
											"source": 0,
											"value": "127500"
										},
										{
											"begin": 8021,
											"end": 8036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8036,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8021,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8021,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8020,
											"end": 8078,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8020,
											"end": 8078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 8085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 8085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7935,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7840,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 7904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 6583,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5192,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5325,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5422,
											"end": 5454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5418,
											"end": 5530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 5654,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5669,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5654,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5699,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5654,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5924,
											"end": 6055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5924,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5924,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5924,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5924,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5924,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6524,
											"end": 6545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6545,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5192,
											"end": 6583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 6583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6576,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6524,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 6583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 6583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5773,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5773,
											"end": 5776,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5745,
											"end": 5794,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5530,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5418,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5477,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420757365722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 8364,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/TokenAllocationKernel.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAuthorizedUpdater(address)": "8c9b9fdc",
							"areMetricsFresh(address)": "87bc50a5",
							"authorizedUpdaters(address)": "8ff29cfe",
							"getRecommendedTokenAllocation(address)": "a5993a4e",
							"getUserDetailedMetrics(address)": "f6ac8558",
							"owner()": "8da5cb5b",
							"removeAuthorizedUpdater(address)": "603cda09",
							"setStudyDAOAuthority(address)": "5f1076bb",
							"studyDAOAuthority()": "6ad16934",
							"transferOwnership(address)": "f2fde38b",
							"updateSingleMetric(address,uint8,uint8)": "ad9b8b4e",
							"updateUserMetrics(address,uint8,uint8,uint8,uint8)": "c459ad3a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MetricsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"UpdaterAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"UpdaterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"addAuthorizedUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"areMetricsFresh\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedUpdaters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRecommendedTokenAllocation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDetailedMetrics\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"participation\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"contribution\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"consistency\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tokenUtilization\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdateTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"removeAuthorizedUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"name\":\"setStudyDAOAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"studyDAOAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"metricType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"value\",\"type\":\"uint8\"}],\"name\":\"updateSingleMetric\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"participation\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"contribution\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"consistency\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tokenUtilization\",\"type\":\"uint8\"}],\"name\":\"updateUserMetrics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Kernel contract that recommends token allocation percentages based on user engagement\",\"kind\":\"dev\",\"methods\":{\"addAuthorizedUpdater(address)\":{\"details\":\"Add an authorized updater\",\"params\":{\"updater\":\"Address to authorize for metric updates\"}},\"areMetricsFresh(address)\":{\"details\":\"KERNEL FUNCTION: Check if a user's metrics are fresh enough to be reliable\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"isFresh Whether the metrics are fresh (updated within 14 days)\"}},\"getRecommendedTokenAllocation(address)\":{\"details\":\"KERNEL FUNCTION: Get recommended token allocation for a user\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"allocation Recommended allocation percentage (0-100)\"}},\"getUserDetailedMetrics(address)\":{\"details\":\"Get detailed user metrics (for admin/UI use)\",\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"consistency\":\"Consistency score\",\"contribution\":\"Contribution score\",\"lastUpdateTime\":\"Last update timestamp\",\"participation\":\"Participation score\",\"tokenUtilization\":\"Token utilization score\"}},\"removeAuthorizedUpdater(address)\":{\"details\":\"Remove an authorized updater\",\"params\":{\"updater\":\"Address to remove authorization from\"}},\"setStudyDAOAuthority(address)\":{\"details\":\"Set the StudyDAO Authority address\",\"params\":{\"_authority\":\"The address of the StudyDAO Authority contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfer ownership of the contract\",\"params\":{\"newOwner\":\"New owner address\"}},\"updateSingleMetric(address,uint8,uint8)\":{\"details\":\"Update individual metric\",\"params\":{\"metricType\":\"Type of metric to update (1=participation, 2=contribution, 3=consistency, 4=tokenUtilization)\",\"user\":\"Address of the user\",\"value\":\"New value for the metric (0-100)\"}},\"updateUserMetrics(address,uint8,uint8,uint8,uint8)\":{\"details\":\"Update a user's metrics\",\"params\":{\"consistency\":\"Consistency score (0-100)\",\"contribution\":\"Contribution score (0-100)\",\"participation\":\"Participation score (0-100)\",\"tokenUtilization\":\"Token utilization score (0-100)\",\"user\":\"Address of the user\"}}},\"title\":\"TokenAllocationKernel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenAllocationKernel.sol\":\"TokenAllocationKernel\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/TokenAllocationKernel.sol\":{\"keccak256\":\"0xc4f1ce6faba9ebe7a07588fdadae9bf19b2996469f3beea7499687b94ef046c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a61878630d16cd7682de2de08f49ad541711e7d396d051fd81c4ecf6909ffbf\",\"dweb:/ipfs/QmWaQacqsoTeg8gF9PzyTuGV55yngHLfCBMeLL1VRCxshE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
								"label": "studyDAOAuthority",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 11,
								"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
								"label": "userMetrics",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(UserMetrics)26_storage)"
							},
							{
								"astId": 15,
								"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
								"label": "authorizedUpdaters",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserMetrics)26_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenAllocationKernel.UserMetrics)",
								"numberOfBytes": "32",
								"value": "t_struct(UserMetrics)26_storage"
							},
							"t_struct(UserMetrics)26_storage": {
								"encoding": "inplace",
								"label": "struct TokenAllocationKernel.UserMetrics",
								"members": [
									{
										"astId": 17,
										"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
										"label": "participationScore",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 19,
										"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
										"label": "contributionScore",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 21,
										"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
										"label": "consistencyScore",
										"offset": 2,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 23,
										"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
										"label": "tokenUtilizationScore",
										"offset": 3,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 25,
										"contract": "contracts/TokenAllocationKernel.sol:TokenAllocationKernel",
										"label": "lastUpdateTimestamp",
										"offset": 4,
										"slot": "0",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/TokenAllocationKernel.sol": {
				"ast": {
					"absolutePath": "contracts/TokenAllocationKernel.sol",
					"exportedSymbols": {
						"TokenAllocationKernel": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenAllocationKernel",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:133:0",
								"text": " @title TokenAllocationKernel\n @dev Kernel contract that recommends token allocation percentages based on user engagement"
							},
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "TokenAllocationKernel",
							"nameLocation": "201:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 4,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "244:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "229:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "229:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ad16934",
									"id": 6,
									"mutability": "mutable",
									"name": "studyDAOAuthority",
									"nameLocation": "270:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "255:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "userMetrics",
									"nameLocation": "358:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "318:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
										"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics)"
									},
									"typeName": {
										"id": 10,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "326:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "318:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
											"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 9,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 8,
												"name": "UserMetrics",
												"nameLocations": [
													"337:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 26,
												"src": "337:11:0"
											},
											"referencedDeclaration": 26,
											"src": "337:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
												"typeString": "struct TokenAllocationKernel.UserMetrics"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8ff29cfe",
									"id": 15,
									"mutability": "mutable",
									"name": "authorizedUpdaters",
									"nameLocation": "484:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "452:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "471:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TokenAllocationKernel.UserMetrics",
									"id": 26,
									"members": [
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "participationScore",
											"nameLocation": "591:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "585:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 16,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "585:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "contributionScore",
											"nameLocation": "662:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "656:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 18,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "656:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "consistencyScore",
											"nameLocation": "734:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "728:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 20,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "728:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "tokenUtilizationScore",
											"nameLocation": "804:21:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "798:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 22,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "798:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "924:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 26,
											"src": "917:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 24,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "917:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserMetrics",
									"nameLocation": "520:11:0",
									"nodeType": "StructDefinition",
									"scope": 555,
									"src": "513:437:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4f1349ff271a07da3530b42c2c3c00406af7b44e35f9fdf1f66fc450d18ef4e0",
									"id": 30,
									"name": "MetricsUpdated",
									"nameLocation": "980:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1011:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "995:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:22:0"
									},
									"src": "974:43:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fbc99308a04b9b530a8dbc7eb620a7597c4b92ff15390ab23ffdd979b9c592e4",
									"id": 34,
									"name": "UpdaterAuthorized",
									"nameLocation": "1028:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "updater",
												"nameLocation": "1062:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1046:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:25:0"
									},
									"src": "1022:49:0"
								},
								{
									"anonymous": false,
									"eventSelector": "209d819a9ec655e89f2b2b9d65c8a78879b45a8f20d1941d69c5fe6dc21bcb62",
									"id": 38,
									"name": "UpdaterRemoved",
									"nameLocation": "1082:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "updater",
												"nameLocation": "1113:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1097:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:25:0"
									},
									"src": "1076:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
									"id": 42,
									"name": "AuthorityUpdated",
									"nameLocation": "1133:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAuthority",
												"nameLocation": "1166:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1150:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:30:0"
									},
									"src": "1127:53:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1228:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1250:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 47,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1246:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1238:65:0"
											},
											{
												"id": 52,
												"nodeType": "PlaceholderStatement",
												"src": "1313:1:0"
											}
										]
									},
									"id": 54,
									"name": "onlyOwner",
									"nameLocation": "1216:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:2:0"
									},
									"src": "1207:114:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1357:204:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 57,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1388:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1392:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1388:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 59,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "1402:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1388:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 61,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1424:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1428:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1424:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 63,
																		"name": "studyDAOAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1438:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1424:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1388:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 66,
																	"name": "authorizedUpdaters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1472:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 69,
																"indexExpression": {
																	"expression": {
																		"id": 67,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1491:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1495:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1491:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1472:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1388:114:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1517:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1367:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:176:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1367:176:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "1553:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAuthorized",
									"nameLocation": "1340:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1354:2:0"
									},
									"src": "1331:230:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1585:82:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1595:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 80,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1603:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1607:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1595:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1595:18:0"
											},
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 84,
															"name": "authorizedUpdaters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1623:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 87,
														"indexExpression": {
															"expression": {
																"id": 85,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1642:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1646:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1642:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1623:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1656:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1623:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1623:37:0"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:0:0"
									},
									"scope": 555,
									"src": "1571:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1881:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 101,
																"name": "_authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1899:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1921:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1913:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1913:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1913:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1899:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420617574686f726974792061646472657373",
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1925:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_605b6be0ec7fc239ea7cea47f112e9b68739338de2205eef4218b8141a572100",
																"typeString": "literal_string \"Invalid authority address\""
															},
															"value": "Invalid authority address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_605b6be0ec7fc239ea7cea47f112e9b68739338de2205eef4218b8141a572100",
																"typeString": "literal_string \"Invalid authority address\""
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1891:62:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "studyDAOAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1963:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "_authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1983:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1963:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1963:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2025:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2008:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "EmitStatement",
												"src": "2003:33:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1677:130:0",
										"text": " @dev Set the StudyDAO Authority address\n @param _authority The address of the StudyDAO Authority contract"
									},
									"functionSelector": "5f1076bb",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 98,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 97,
												"name": "onlyOwner",
												"nameLocations": [
													"1871:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "1871:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1871:9:0"
										}
									],
									"name": "setStudyDAOAuthority",
									"nameLocation": "1821:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_authority",
												"nameLocation": "1850:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1842:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:20:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:0:0"
									},
									"scope": 555,
									"src": "1812:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2235:159:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 128,
																"name": "updater",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2272:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 129,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2264:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2264:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2253:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757064617465722061646472657373",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2276:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae82affe3cdf46c118029a9426ab15e298fbde3345c847a367756cd702a7e141",
																"typeString": "literal_string \"Invalid updater address\""
															},
															"value": "Invalid updater address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae82affe3cdf46c118029a9426ab15e298fbde3345c847a367756cd702a7e141",
																"typeString": "literal_string \"Invalid updater address\""
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2245:57:0"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 137,
															"name": "authorizedUpdaters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2312:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 139,
														"indexExpression": {
															"id": 138,
															"name": "updater",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2312:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2342:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2312:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2312:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "updater",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "UpdaterAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2361:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2361:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "EmitStatement",
												"src": "2356:31:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2053:111:0",
										"text": " @dev Add an authorized updater\n @param updater Address to authorize for metric updates"
									},
									"functionSelector": "8c9b9fdc",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 124,
												"name": "onlyOwner",
												"nameLocations": [
													"2225:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "2225:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2225:9:0"
										}
									],
									"name": "addAuthorizedUpdater",
									"nameLocation": "2178:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "updater",
												"nameLocation": "2207:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:17:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:0"
									},
									"scope": 555,
									"src": "2169:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2589:90:0",
										"statements": [
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 156,
															"name": "authorizedUpdaters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2599:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "updater",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2599:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2629:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2599:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2599:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 163,
															"name": "updater",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 162,
														"name": "UpdaterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2649:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "EmitStatement",
												"src": "2644:28:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2404:111:0",
										"text": " @dev Remove an authorized updater\n @param updater Address to remove authorization from"
									},
									"functionSelector": "603cda09",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 153,
												"name": "onlyOwner",
												"nameLocations": [
													"2579:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "2579:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2579:9:0"
										}
									],
									"name": "removeAuthorizedUpdater",
									"nameLocation": "2529:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "updater",
												"nameLocation": "2561:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:17:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2589:0:0"
									},
									"scope": 555,
									"src": "2520:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "3200:671:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "3218:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3234:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3226:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 185,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3226:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3226:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3218:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365722061646472657373",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3238:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															},
															"value": "Invalid user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3210:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 194,
																			"name": "participation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "3292:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3309:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3292:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 197,
																			"name": "contribution",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "3328:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3344:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3328:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3292:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 201,
																		"name": "consistency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "3363:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3378:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "3363:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3292:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 205,
																	"name": "tokenUtilization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "3397:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3397:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3292:128:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726573206d757374206265206265747765656e20302d313030",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3434:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc49106d232cae917cfc8a091fffaf67654434dea5a3df2e0c73de702f0ef062",
																"typeString": "literal_string \"Scores must be between 0-100\""
															},
															"value": "Scores must be between 0-100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc49106d232cae917cfc8a091fffaf67654434dea5a3df2e0c73de702f0ef062",
																"typeString": "literal_string \"Scores must be between 0-100\""
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:203:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3271:203:0"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "3513:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "3493:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
															"typeString": "struct TokenAllocationKernel.UserMetrics"
														},
														"typeName": {
															"id": 213,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 212,
																"name": "UserMetrics",
																"nameLocations": [
																	"3493:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 26,
																"src": "3493:11:0"
															},
															"referencedDeclaration": 26,
															"src": "3493:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"baseExpression": {
														"id": 215,
														"name": "userMetrics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3523:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
															"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics storage ref)"
														}
													},
													"id": 217,
													"indexExpression": {
														"id": 216,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "3535:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3523:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserMetrics_$26_storage",
														"typeString": "struct TokenAllocationKernel.UserMetrics storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3493:47:0"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 219,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3559:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3567:18:0",
														"memberName": "participationScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "3559:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 222,
														"name": "participation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3588:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3559:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3559:42:0"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 225,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3619:17:0",
														"memberName": "contributionScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "3611:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "contribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3639:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3611:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3611:40:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 231,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3669:16:0",
														"memberName": "consistencyScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "3661:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "consistency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "3688:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3661:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "3661:38:0"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 237,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3717:21:0",
														"memberName": "tokenUtilizationScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "3709:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "tokenUtilization",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3741:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3709:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3709:48:0"
											},
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 243,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3775:19:0",
														"memberName": "lastUpdateTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "3767:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 248,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3804:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3810:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3804:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3797:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 246,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "3797:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3797:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3767:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3767:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 254,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 253,
														"name": "MetricsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3844:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3844:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "3839:25:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2689:311:0",
										"text": " @dev Update a user's metrics\n @param user Address of the user\n @param participation Participation score (0-100)\n @param contribution Contribution score (0-100)\n @param consistency Consistency score (0-100)\n @param tokenUtilization Token utilization score (0-100)"
									},
									"functionSelector": "c459ad3a",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3185:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "3185:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3185:14:0"
										}
									],
									"name": "updateUserMetrics",
									"nameLocation": "3014:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3049:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3041:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "participation",
												"nameLocation": "3069:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3063:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 171,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "contribution",
												"nameLocation": "3098:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3092:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "consistency",
												"nameLocation": "3126:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3120:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 175,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3120:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenUtilization",
												"nameLocation": "3153:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3147:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 177,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3031:144:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3200:0:0"
									},
									"scope": 555,
									"src": "3005:866:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "4272:714:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "4290:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4306:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 272,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4298:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4298:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4290:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365722061646472657373",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4310:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															},
															"value": "Invalid user address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f57e86588d4056fbc66a1ccbde1e5364452891f7334f70d5376cb310a8a3993",
																"typeString": "literal_string \"Invalid user address\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "4282:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "4351:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f7265206d757374206265206265747765656e20302d313030",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4365:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad5440de2a04d0c3786eafb077d704bdc04b63edc43d777e91cd1e941ffdaf41",
																"typeString": "literal_string \"Score must be between 0-100\""
															},
															"value": "Score must be between 0-100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad5440de2a04d0c3786eafb077d704bdc04b63edc43d777e91cd1e941ffdaf41",
																"typeString": "literal_string \"Score must be between 0-100\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "4343:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 288,
																	"name": "metricType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "4413:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4427:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4413:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 291,
																	"name": "metricType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "4432:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4432:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4413:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d65747269632074797065",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4449:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa33daf22052eed8d67b8670ffe5cfe8ba9ad816a039be2f3624405ec9873f74",
																"typeString": "literal_string \"Invalid metric type\""
															},
															"value": "Invalid metric type"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa33daf22052eed8d67b8670ffe5cfe8ba9ad816a039be2f3624405ec9873f74",
																"typeString": "literal_string \"Invalid metric type\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4405:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "4405:66:0"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "4510:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "4490:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
															"typeString": "struct TokenAllocationKernel.UserMetrics"
														},
														"typeName": {
															"id": 299,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 298,
																"name": "UserMetrics",
																"nameLocations": [
																	"4490:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 26,
																"src": "4490:11:0"
															},
															"referencedDeclaration": 26,
															"src": "4490:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"baseExpression": {
														"id": 301,
														"name": "userMetrics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4520:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
															"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics storage ref)"
														}
													},
													"id": 303,
													"indexExpression": {
														"id": 302,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "4532:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4520:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserMetrics_$26_storage",
														"typeString": "struct TokenAllocationKernel.UserMetrics storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4490:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "metricType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "4560:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4560:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 315,
															"name": "metricType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4646:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "metricType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "4731:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "4731:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 341,
															"nodeType": "Block",
															"src": "4811:62:0",
															"statements": [
																{
																	"expression": {
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 335,
																				"name": "metrics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 300,
																				"src": "4825:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																					"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
																				}
																			},
																			"id": 337,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "4833:21:0",
																			"memberName": "tokenUtilizationScore",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 23,
																			"src": "4825:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "4857:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4825:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 340,
																	"nodeType": "ExpressionStatement",
																	"src": "4825:37:0"
																}
															]
														},
														"id": 342,
														"nodeType": "IfStatement",
														"src": "4727:146:0",
														"trueBody": {
															"id": 334,
															"nodeType": "Block",
															"src": "4748:57:0",
															"statements": [
																{
																	"expression": {
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 328,
																				"name": "metrics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 300,
																				"src": "4762:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																					"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
																				}
																			},
																			"id": 330,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "4770:16:0",
																			"memberName": "consistencyScore",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 21,
																			"src": "4762:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 265,
																			"src": "4789:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4762:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 333,
																	"nodeType": "ExpressionStatement",
																	"src": "4762:32:0"
																}
															]
														}
													},
													"id": 343,
													"nodeType": "IfStatement",
													"src": "4642:231:0",
													"trueBody": {
														"id": 324,
														"nodeType": "Block",
														"src": "4663:58:0",
														"statements": [
															{
																"expression": {
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 318,
																			"name": "metrics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "4677:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																				"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4685:17:0",
																		"memberName": "contributionScore",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "4677:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "4705:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "4677:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 323,
																"nodeType": "ExpressionStatement",
																"src": "4677:33:0"
															}
														]
													}
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "4556:317:0",
												"trueBody": {
													"id": 314,
													"nodeType": "Block",
													"src": "4577:59:0",
													"statements": [
														{
															"expression": {
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 308,
																		"name": "metrics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "4591:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																			"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4599:18:0",
																	"memberName": "participationScore",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "4591:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "4620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4591:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 313,
															"nodeType": "ExpressionStatement",
															"src": "4591:34:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 345,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics storage pointer"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4899:19:0",
														"memberName": "lastUpdateTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "4891:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 350,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4934:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4928:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4921:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 348,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "4921:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4921:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4891:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "4891:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 356,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4974:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 355,
														"name": "MetricsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "4959:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4959:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "4954:25:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3881:259:0",
										"text": " @dev Update individual metric\n @param user Address of the user\n @param metricType Type of metric to update (1=participation, 2=contribution, 3=consistency, 4=tokenUtilization)\n @param value New value for the metric (0-100)"
									},
									"functionSelector": "ad9b8b4e",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyAuthorized",
												"nameLocations": [
													"4257:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "4257:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4257:14:0"
										}
									],
									"name": "updateSingleMetric",
									"nameLocation": "4154:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4190:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "metricType",
												"nameLocation": "4210:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4204:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 262,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4236:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4230:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 264,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:75:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4272:0:0"
									},
									"scope": 555,
									"src": "4145:841:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "5275:1308:0",
										"statements": [
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "5304:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "5285:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
															"typeString": "struct TokenAllocationKernel.UserMetrics"
														},
														"typeName": {
															"id": 369,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 368,
																"name": "UserMetrics",
																"nameLocations": [
																	"5285:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 26,
																"src": "5285:11:0"
															},
															"referencedDeclaration": 26,
															"src": "5285:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"baseExpression": {
														"id": 371,
														"name": "userMetrics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5314:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
															"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics storage ref)"
														}
													},
													"id": 373,
													"indexExpression": {
														"id": 372,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "5326:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5314:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserMetrics_$26_storage",
														"typeString": "struct TokenAllocationKernel.UserMetrics storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5430:19:0",
														"memberName": "lastUpdateTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "5422:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5422:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"nodeType": "IfStatement",
												"src": "5418:112:0",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "5456:74:0",
													"statements": [
														{
															"expression": {
																"hexValue": "3330",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5477:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"functionReturnParameters": 367,
															"id": 380,
															"nodeType": "Return",
															"src": "5470:9:0"
														}
													]
												}
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "daysSinceUpdate",
														"nameLocation": "5635:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "5627:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 385,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5654:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5660:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5654:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 387,
																		"name": "metrics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "5672:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																			"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5680:19:0",
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "5672:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "5654:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 390,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5653:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5703:6:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "5653:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5627:82:0"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "freshnessFactor",
														"nameLocation": "5727:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "5719:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 396,
															"name": "daysSinceUpdate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5745:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "3330",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5763:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "5745:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5773:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 401,
															"name": "daysSinceUpdate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5779:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5773:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5745:49:0",
													"trueExpression": {
														"hexValue": "3730",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5768:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_70_by_1",
															"typeString": "int_const 70"
														},
														"value": "70"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5719:75:0"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "baseAllocation",
														"nameLocation": "5893:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "5885:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 409,
																							"name": "metrics",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 370,
																							"src": "5932:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																								"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																							}
																						},
																						"id": 410,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5940:18:0",
																						"memberName": "participationScore",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 17,
																						"src": "5932:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5924:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5924:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5924:35:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3330",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5962:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_30_by_1",
																					"typeString": "int_const 30"
																				},
																				"value": "30"
																			},
																			"src": "5924:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 416,
																							"name": "metrics",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 370,
																							"src": "6024:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																								"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																							}
																						},
																						"id": 417,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6032:17:0",
																						"memberName": "contributionScore",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 19,
																						"src": "6024:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					],
																					"id": 415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6016:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 414,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6016:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6016:34:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3235",
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6053:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_25_by_1",
																					"typeString": "int_const 25"
																				},
																				"value": "25"
																			},
																			"src": "6016:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5924:131:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 424,
																						"name": "metrics",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 370,
																						"src": "6123:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																							"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																						}
																					},
																					"id": 425,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6131:16:0",
																					"memberName": "consistencyScore",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 21,
																					"src": "6123:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6115:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 422,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6115:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6115:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3235",
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6151:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "25"
																		},
																		"src": "6115:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5924:229:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 432,
																					"name": "metrics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 370,
																					"src": "6213:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																						"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																					}
																				},
																				"id": 433,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6221:21:0",
																				"memberName": "tokenUtilizationScore",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 23,
																				"src": "6213:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6205:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 430,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6205:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6205:38:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3230",
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6246:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		},
																		"value": "20"
																	},
																	"src": "6205:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5924:324:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 438,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5923:326:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6302:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "5923:382:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5885:420:0"
											},
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "finalAllocation",
														"nameLocation": "6406:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "6398:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 444,
																	"name": "baseAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "6425:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 445,
																	"name": "freshnessFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "6442:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6425:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6424:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6461:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6424:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6398:66:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "finalAllocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6524:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "313030",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6542:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "6524:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 457,
																"name": "finalAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6560:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6554:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 455,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "6554:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6554:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6524:52:0",
													"trueExpression": {
														"hexValue": "313030",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6548:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 367,
												"id": 460,
												"nodeType": "Return",
												"src": "6517:59:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "4996:191:0",
										"text": " @dev KERNEL FUNCTION: Get recommended token allocation for a user\n @param user Address of the user\n @return allocation Recommended allocation percentage (0-100)"
									},
									"functionSelector": "a5993a4e",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecommendedTokenAllocation",
									"nameLocation": "5201:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5239:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5231:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:14:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5268:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 365,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5268:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5267:7:0"
									},
									"scope": 555,
									"src": "5192:1391:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "7176:291:0",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "7205:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "7186:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
															"typeString": "struct TokenAllocationKernel.UserMetrics"
														},
														"typeName": {
															"id": 479,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 478,
																"name": "UserMetrics",
																"nameLocations": [
																	"7186:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 26,
																"src": "7186:11:0"
															},
															"referencedDeclaration": 26,
															"src": "7186:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"baseExpression": {
														"id": 481,
														"name": "userMetrics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7215:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
															"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics storage ref)"
														}
													},
													"id": 483,
													"indexExpression": {
														"id": 482,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "7227:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7215:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserMetrics_$26_storage",
														"typeString": "struct TokenAllocationKernel.UserMetrics storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7186:46:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 485,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7263:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																	"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7271:18:0",
															"memberName": "participationScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "7263:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 487,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7303:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																	"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7311:17:0",
															"memberName": "contributionScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "7303:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 489,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																	"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7350:16:0",
															"memberName": "consistencyScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 21,
															"src": "7342:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 491,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7380:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																	"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7388:21:0",
															"memberName": "tokenUtilizationScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "7380:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 493,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "7423:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																	"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7431:19:0",
															"memberName": "lastUpdateTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "7423:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 495,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7249:211:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint32_$",
														"typeString": "tuple(uint8,uint8,uint8,uint8,uint32)"
													}
												},
												"functionReturnParameters": 477,
												"id": 496,
												"nodeType": "Return",
												"src": "7242:218:0"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "6593:356:0",
										"text": " @dev Get detailed user metrics (for admin/UI use)\n @param user Address of the user\n @return participation Participation score\n @return contribution Contribution score\n @return consistency Consistency score\n @return tokenUtilization Token utilization score\n @return lastUpdateTime Last update timestamp"
									},
									"functionSelector": "f6ac8558",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDetailedMetrics",
									"nameLocation": "6963:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6994:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "6986:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6985:14:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "participation",
												"nameLocation": "7038:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7032:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 467,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "contribution",
												"nameLocation": "7067:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7061:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 469,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "consistency",
												"nameLocation": "7095:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7089:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 471,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7089:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "tokenUtilization",
												"nameLocation": "7122:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7116:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 473,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "lastUpdateTime",
												"nameLocation": "7155:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7148:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 475,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:153:0"
									},
									"scope": 555,
									"src": "6954:513:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "7765:320:0",
										"statements": [
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "7794:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "7775:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
															"typeString": "struct TokenAllocationKernel.UserMetrics"
														},
														"typeName": {
															"id": 507,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 506,
																"name": "UserMetrics",
																"nameLocations": [
																	"7775:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 26,
																"src": "7775:11:0"
															},
															"referencedDeclaration": 26,
															"src": "7775:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_storage_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"baseExpression": {
														"id": 509,
														"name": "userMetrics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7804:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserMetrics_$26_storage_$",
															"typeString": "mapping(address => struct TokenAllocationKernel.UserMetrics storage ref)"
														}
													},
													"id": 511,
													"indexExpression": {
														"id": 510,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "7816:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7804:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserMetrics_$26_storage",
														"typeString": "struct TokenAllocationKernel.UserMetrics storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7775:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 513,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "7844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																"typeString": "struct TokenAllocationKernel.UserMetrics memory"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7852:19:0",
														"memberName": "lastUpdateTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "7844:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7875:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7844:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "IfStatement",
												"src": "7840:95:0",
												"trueBody": {
													"id": 519,
													"nodeType": "Block",
													"src": "7878:57:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7899:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 505,
															"id": 518,
															"nodeType": "Return",
															"src": "7892:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 521,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8021:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8027:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8021:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 523,
																		"name": "metrics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "8039:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserMetrics_$26_memory_ptr",
																			"typeString": "struct TokenAllocationKernel.UserMetrics memory"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8047:19:0",
																	"memberName": "lastUpdateTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "8039:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8021:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 526,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8020:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3134",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8071:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1209600_by_1",
															"typeString": "int_const 1209600"
														},
														"value": "14"
													},
													"src": "8020:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 505,
												"id": 529,
												"nodeType": "Return",
												"src": "8013:65:0"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "7477:215:0",
										"text": " @dev KERNEL FUNCTION: Check if a user's metrics are fresh enough to be reliable\n @param user Address of the user\n @return isFresh Whether the metrics are fresh (updated within 14 days)"
									},
									"functionSelector": "87bc50a5",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "areMetricsFresh",
									"nameLocation": "7706:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "7722:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7721:14:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "7759:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7758:6:0"
									},
									"scope": 555,
									"src": "7697:388:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "8263:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 540,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8281:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8301:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8293:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8293:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8293:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8281:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8305:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8273:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "8273:56:0"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 549,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "8339:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 550,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8347:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8339:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "8339:16:0"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "8095:99:0",
										"text": " @dev Transfer ownership of the contract\n @param newOwner New owner address"
									},
									"functionSelector": "f2fde38b",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "onlyOwner",
												"nameLocations": [
													"8253:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "8253:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8253:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "8208:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "8226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8225:18:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8263:0:0"
									},
									"scope": 555,
									"src": "8199:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 556,
							"src": "192:8172:0",
							"usedErrors": [],
							"usedEvents": [
								30,
								34,
								38,
								42
							]
						}
					],
					"src": "32:8332:0"
				},
				"id": 0
			}
		}
	}
}