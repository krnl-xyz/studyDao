{
	"id": "99c96f1601a6d92d3972cc417d22a5b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/StudyTokenAuthority.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title IStudyToken\n * @dev Interface for StudyToken contract\n */\ninterface IStudyToken {\n    function mintReward(address to, uint256 amount) external returns (bool);\n}\n\n/**\n * @title ITokenAllocationKernel\n * @dev Interface for Kernel 1593 - Token Allocation Kernel\n */\ninterface ITokenAllocationKernel {\n    function getRecommendedTokenAllocation(\n        address user,\n        uint256 requestedAmount,\n        bytes calldata additionalData\n    ) external view returns (uint8);\n}\n\n/**\n * @title StudyTokenAuthority\n * @dev Refined Token Authority for StudyDAO with direct kernel integration\n * Works with Kernel ID 1593 for token allocation recommendations\n */\ncontract StudyTokenAuthority is Ownable {\n    \n    // ============ STATE VARIABLES ============\n    \n    // StudyToken contract reference\n    IStudyToken public studyToken;\n    \n    // Kernel contract reference\n    ITokenAllocationKernel public kernel;\n    address public kernelAddress;\n    \n    // Mapping to track authorized contracts\n    mapping(address => bool) public authorizedContracts;\n    \n    // Mapping to track user token limits\n    mapping(address => uint256) public userDailyLimits;\n    \n    // Default daily limit\n    uint256 public defaultDailyLimit;\n    \n    // Mapping to track user daily usage\n    mapping(address => mapping(uint256 => uint256)) public userDailyUsage;\n    \n    // Minimum allocation threshold (out of 255)\n    uint8 public minimumAllocationThreshold = 50;\n    \n    // Emergency pause functionality\n    bool public isPaused = false;\n    \n    // ============ EVENTS ============\n    \n    event ContractAuthorized(address indexed contractAddress);\n    event ContractDeauthorized(address indexed contractAddress);\n    event UserLimitSet(address indexed user, uint256 limit);\n    event TokenOperationApproved(address indexed user, uint256 amount, string operation);\n    event TokenOperationDenied(address indexed user, uint256 amount, string reason);\n    event KernelAllocationResult(address indexed user, uint256 requestedAmount, uint8 allocation);\n    event MinimumThresholdUpdated(uint8 oldThreshold, uint8 newThreshold);\n    event KernelAddressUpdated(address indexed oldKernel, address indexed newKernel);\n    event PauseStatusChanged(bool isPaused);\n    \n    // ============ MODIFIERS ============\n    \n    modifier onlyAuthorizedContract() {\n        require(authorizedContracts[msg.sender] || msg.sender == owner(), \"Not authorized contract\");\n        _;\n    }\n    \n    modifier whenNotPaused() {\n        require(!isPaused, \"Contract is paused\");\n        _;\n    }\n    \n    modifier validAddress(address addr) {\n        require(addr != address(0), \"Invalid address\");\n        _;\n    }\n\n    // ============ CONSTRUCTOR ============\n    \n    /**\n     * @dev Constructor initializing StudyDAO token authority\n     * @param initialOwner Owner of the contract\n     * @param _studyTokenAddress Address of the StudyToken contract\n     * @param _kernelAddress Address of the Token Allocation Kernel (1593)\n     * @param _defaultDailyLimit Default daily limit for users\n     */\n    constructor(\n        address initialOwner,\n        address _studyTokenAddress, \n        address _kernelAddress,\n        uint256 _defaultDailyLimit\n    ) \n        Ownable(initialOwner) \n    {\n        require(_studyTokenAddress != address(0), \"Invalid token address\");\n        require(_kernelAddress != address(0), \"Invalid kernel address\");\n        require(initialOwner != address(0), \"Invalid owner address\");\n        \n        studyToken = IStudyToken(_studyTokenAddress);\n        kernelAddress = _kernelAddress;\n        kernel = ITokenAllocationKernel(_kernelAddress);\n        defaultDailyLimit = _defaultDailyLimit;\n        \n        // Automatically authorize the deployer\n        authorizedContracts[initialOwner] = true;\n        emit ContractAuthorized(initialOwner);\n    }\n\n    // ============ KERNEL INTEGRATION FUNCTIONS ============\n    \n    /**\n     * @dev Get recommendation from kernel with error handling\n     * @param user Address requesting tokens\n     * @param amount Requested token amount\n     * @param additionalData Any additional data for the kernel\n     * @return allocation Recommended allocation (0-255), 0 if error\n     */\n    function getKernelRecommendation(\n        address user,\n        uint256 amount,\n        bytes memory additionalData\n    ) public view returns (uint8) {\n        try kernel.getRecommendedTokenAllocation(user, amount, additionalData) returns (uint8 allocation) {\n            return allocation;\n        } catch Error(string memory) {\n            // Log error but don't revert - return 0 for safety\n            return 0;\n        } catch {\n            // Unknown error - return 0 for safety\n            return 0;\n        }\n    }\n    \n    /**\n     * @dev Check if allocation meets minimum threshold\n     * @param allocation The allocation score from kernel (0-255)\n     * @return bool True if allocation is acceptable\n     */\n    function isAllocationAcceptable(uint8 allocation) public view returns (bool) {\n        return allocation >= minimumAllocationThreshold;\n    }\n\n    // ============ AUTHORIZATION FUNCTIONS ============\n    \n    /**\n     * @dev Authorize a token mint operation with kernel verification\n     * @param to Address to mint tokens to\n     * @param amount Amount of tokens to mint\n     * @param additionalData Additional data for kernel decision\n     * @return success True if operation is authorized\n     * @return adjustedAmount The adjusted amount based on kernel recommendation\n     */\n    function authorizeMint(\n        address to,\n        uint256 amount,\n        bytes memory additionalData\n    ) external onlyAuthorizedContract() whenNotPaused() returns (bool success, uint256 adjustedAmount) {\n        \n        // Get kernel recommendation\n        uint8 allocation = getKernelRecommendation(to, amount, additionalData);\n        emit KernelAllocationResult(to, amount, allocation);\n        \n        // Check if allocation meets minimum threshold\n        if (!isAllocationAcceptable(allocation)) {\n            emit TokenOperationDenied(to, amount, \"Allocation below minimum threshold\");\n            return (false, 0);\n        }\n        \n        // Calculate adjusted amount based on allocation\n        adjustedAmount = (amount * allocation) / 255;\n        \n        // Check daily limits\n        uint256 dayNumber = getCurrentDay();\n        uint256 userLimit = getUserDailyLimit(to);\n        uint256 usedToday = userDailyUsage[to][dayNumber];\n        \n        if (usedToday + adjustedAmount > userLimit) {\n            emit TokenOperationDenied(to, adjustedAmount, \"Daily limit exceeded\");\n            return (false, 0);\n        }\n        \n        // Update daily usage\n        userDailyUsage[to][dayNumber] = usedToday + adjustedAmount;\n        \n        emit TokenOperationApproved(to, adjustedAmount, \"mint\");\n        return (true, adjustedAmount);\n    }\n    \n    /**\n     * @dev Authorize a token transfer operation with kernel verification\n     * @param from Address sending tokens\n     * @param to Address receiving tokens\n     * @param amount Amount of tokens to transfer\n     * @param additionalData Additional data for kernel decision\n     * @return bool True if transfer is authorized\n     */\n    function authorizeTransfer(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory additionalData\n    ) external onlyAuthorizedContract() whenNotPaused() returns (bool) {\n        \n        // Get kernel recommendation for the sender\n        uint8 allocation = getKernelRecommendation(from, amount, additionalData);\n        emit KernelAllocationResult(from, amount, allocation);\n        \n        // Check if allocation meets minimum threshold\n        if (!isAllocationAcceptable(allocation)) {\n            emit TokenOperationDenied(from, amount, \"Transfer allocation below minimum threshold\");\n            return false;\n        }\n        \n        emit TokenOperationApproved(from, amount, \"transfer\");\n        return true;\n    }\n    \n    /**\n     * @dev Direct mint function with kernel verification (owner only)\n     * @param to Address to mint tokens to\n     * @param amount Amount of tokens to mint\n     * @param additionalData Additional data for kernel decision\n     * @return bool True if mint was successful\n     */\n    function mintWithKernel(\n        address to,\n        uint256 amount,\n        bytes memory additionalData\n    ) external onlyOwner whenNotPaused() returns (bool) {\n        \n        // Get kernel recommendation\n        uint8 allocation = getKernelRecommendation(to, amount, additionalData);\n        emit KernelAllocationResult(to, amount, allocation);\n        \n        // Check if allocation meets minimum threshold\n        if (!isAllocationAcceptable(allocation)) {\n            emit TokenOperationDenied(to, amount, \"Mint allocation below minimum threshold\");\n            return false;\n        }\n        \n        // Calculate adjusted amount\n        uint256 adjustedAmount = (amount * allocation) / 255;\n        \n        // Attempt to mint tokens\n        try studyToken.mintReward(to, adjustedAmount) returns (bool result) {\n            if (result) {\n                emit TokenOperationApproved(to, adjustedAmount, \"directMint\");\n                return true;\n            } else {\n                emit TokenOperationDenied(to, adjustedAmount, \"Mint failed: returned false\");\n                return false;\n            }\n        } catch Error(string memory reason) {\n            emit TokenOperationDenied(to, adjustedAmount, string(abi.encodePacked(\"Mint failed: \", reason)));\n            return false;\n        } catch {\n            emit TokenOperationDenied(to, adjustedAmount, \"Mint failed: Unknown error\");\n            return false;\n        }\n    }\n\n    // ============ SIMPLIFIED AUTHORIZATION (FALLBACK) ============\n    \n    /**\n     * @dev Simple authorization without kernel (for compatibility/emergency)\n     * @param to Address to authorize for\n     * @param amount Amount to authorize\n     * @return bool True if authorized\n     */\n    function authorizeSimple(address to, uint256 amount) external onlyAuthorizedContract() returns (bool) {\n        uint256 dayNumber = getCurrentDay();\n        uint256 userLimit = getUserDailyLimit(to);\n        uint256 usedToday = userDailyUsage[to][dayNumber];\n        \n        if (usedToday + amount <= userLimit) {\n            userDailyUsage[to][dayNumber] = usedToday + amount;\n            emit TokenOperationApproved(to, amount, \"simpleAuth\");\n            return true;\n        } else {\n            emit TokenOperationDenied(to, amount, \"Daily limit exceeded\");\n            return false;\n        }\n    }\n\n    // ============ DAILY LIMITS FUNCTIONS ============\n    \n    /**\n     * @dev Get the current day number\n     */\n    function getCurrentDay() public view returns (uint256) {\n        return block.timestamp / 1 days;\n    }\n    \n    /**\n     * @dev Get a user's effective daily limit\n     */\n    function getUserDailyLimit(address user) public view returns (uint256) {\n        uint256 userLimit = userDailyLimits[user];\n        return userLimit > 0 ? userLimit : defaultDailyLimit;\n    }\n    \n    /**\n     * @dev Get a user's remaining daily limit\n     */\n    function getRemainingDailyLimit(address user) public view returns (uint256) {\n        uint256 dayNumber = getCurrentDay();\n        uint256 usedToday = userDailyUsage[user][dayNumber];\n        uint256 limit = getUserDailyLimit(user);\n        \n        return usedToday >= limit ? 0 : limit - usedToday;\n    }\n    \n    /**\n     * @dev Get a user's used amount for today\n     */\n    function getTodayUsage(address user) public view returns (uint256) {\n        uint256 dayNumber = getCurrentDay();\n        return userDailyUsage[user][dayNumber];\n    }\n\n    // ============ ADMIN FUNCTIONS ============\n    \n    /**\n     * @dev Set the minimum allocation threshold\n     */\n    function setMinimumAllocationThreshold(uint8 _threshold) external onlyOwner {\n        require(_threshold <= 255, \"Threshold must be <= 255\");\n        uint8 oldThreshold = minimumAllocationThreshold;\n        minimumAllocationThreshold = _threshold;\n        emit MinimumThresholdUpdated(oldThreshold, _threshold);\n    }\n    \n    /**\n     * @dev Update kernel address\n     */\n    function setKernelAddress(address _kernelAddress) external onlyOwner {\n        require(_kernelAddress != address(0), \"Invalid address\");\n        address oldKernel = kernelAddress;\n        kernelAddress = _kernelAddress;\n        kernel = ITokenAllocationKernel(_kernelAddress);\n        emit KernelAddressUpdated(oldKernel, _kernelAddress);\n    }\n    \n    /**\n     * @dev Authorize a contract\n     */\n    function authorizeContract(address contractAddress) external onlyOwner {\n        require(contractAddress != address(0), \"Invalid address\");\n        require(!authorizedContracts[contractAddress], \"Contract already authorized\");\n        \n        authorizedContracts[contractAddress] = true;\n        emit ContractAuthorized(contractAddress);\n    }\n    \n    /**\n     * @dev Deauthorize a contract\n     */\n    function deauthorizeContract(address contractAddress) external onlyOwner {\n        require(authorizedContracts[contractAddress], \"Contract not authorized\");\n        \n        authorizedContracts[contractAddress] = false;\n        emit ContractDeauthorized(contractAddress);\n    }\n    \n    /**\n     * @dev Set daily token limit for a specific user\n     */\n    function setUserDailyLimit(address user, uint256 limit) external onlyOwner {\n        require(user != address(0), \"Invalid address\");\n        userDailyLimits[user] = limit;\n        emit UserLimitSet(user, limit);\n    }\n    \n    /**\n     * @dev Set default daily limit for all users\n     */\n    function setDefaultDailyLimit(uint256 limit) external onlyOwner {\n        defaultDailyLimit = limit;\n    }\n    \n    /**\n     * @dev Set StudyToken contract address\n     */\n    function setStudyToken(address _studyTokenAddress) external onlyOwner {\n        require(_studyTokenAddress != address(0), \"Invalid address\");\n        studyToken = IStudyToken(_studyTokenAddress);\n    }\n    \n    /**\n     * @dev Emergency pause/unpause\n     */\n    function setPause(bool _isPaused) external onlyOwner {\n        isPaused = _isPaused;\n        emit PauseStatusChanged(_isPaused);\n    }\n\n    // ============ VIEW FUNCTIONS ============\n    \n    /**\n     * @dev Check if user can perform operation with given amount\n     */\n    function canUserOperate(address user, uint256 amount) external view returns (bool canOperate, string memory reason) {\n        if (isPaused) {\n            return (false, \"Contract is paused\");\n        }\n        \n        uint256 remaining = getRemainingDailyLimit(user);\n        if (remaining < amount) {\n            return (false, \"Insufficient daily limit\");\n        }\n        \n        return (true, \"Operation allowed\");\n    }\n    \n    /**\n     * @dev Get user's complete status\n     */\n    function getUserStatus(address user) external view returns (\n        uint256 dailyLimit,\n        uint256 usedToday,\n        uint256 remainingToday,\n        bool canOperate\n    ) {\n        dailyLimit = getUserDailyLimit(user);\n        usedToday = getTodayUsage(user);\n        remainingToday = getRemainingDailyLimit(user);\n        canOperate = !isPaused && remainingToday > 0;\n    }\n    \n    /**\n     * @dev Preview what would happen with a kernel call (without executing)\n     */\n    function previewKernelRecommendation(\n        address user,\n        uint256 amount,\n        bytes memory additionalData\n    ) external view returns (\n        uint8 allocation,\n        bool meetsThreshold,\n        uint256 adjustedAmount,\n        bool withinDailyLimit\n    ) {\n        allocation = getKernelRecommendation(user, amount, additionalData);\n        meetsThreshold = isAllocationAcceptable(allocation);\n        adjustedAmount = (amount * allocation) / 255;\n        \n        uint256 remaining = getRemainingDailyLimit(user);\n        withinDailyLimit = adjustedAmount <= remaining;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StudyTokenAuthority.sol": {
				"IStudyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for StudyToken contract",
						"kind": "dev",
						"methods": {},
						"title": "IStudyToken",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mintReward(address,uint256)": "9a49090e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for StudyToken contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IStudyToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StudyTokenAuthority.sol\":\"IStudyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StudyTokenAuthority.sol\":{\"keccak256\":\"0x5c7e3382dbd4d9a6b515997913fc34634ac5c8692ee8b6b415f373b698e0449d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a21d04505d36c2627601ba8f93bde58082cf478c36a3b2d3925949485fad8491\",\"dweb:/ipfs/QmdhMStKDMA9h8niTCkqmWkzqpXMNs8TUXpuLTE9z3cKKA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITokenAllocationKernel": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "getRecommendedTokenAllocation",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Kernel 1593 - Token Allocation Kernel",
						"kind": "dev",
						"methods": {},
						"title": "ITokenAllocationKernel",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRecommendedTokenAllocation(address,uint256,bytes)": "74b9e5b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"getRecommendedTokenAllocation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Kernel 1593 - Token Allocation Kernel\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITokenAllocationKernel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StudyTokenAuthority.sol\":\"ITokenAllocationKernel\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StudyTokenAuthority.sol\":{\"keccak256\":\"0x5c7e3382dbd4d9a6b515997913fc34634ac5c8692ee8b6b415f373b698e0449d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a21d04505d36c2627601ba8f93bde58082cf478c36a3b2d3925949485fad8491\",\"dweb:/ipfs/QmdhMStKDMA9h8niTCkqmWkzqpXMNs8TUXpuLTE9z3cKKA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StudyTokenAuthority": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_studyTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_kernelAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_defaultDailyLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "ContractAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "ContractDeauthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldKernel",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newKernel",
									"type": "address"
								}
							],
							"name": "KernelAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "allocation",
									"type": "uint8"
								}
							],
							"name": "KernelAllocationResult",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "oldThreshold",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "newThreshold",
									"type": "uint8"
								}
							],
							"name": "MinimumThresholdUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "TokenOperationApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "TokenOperationDenied",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "UserLimitSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "authorizeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "authorizeMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "adjustedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "authorizeSimple",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "authorizeTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "canUserOperate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "canOperate",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "deauthorizeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "getKernelRecommendation",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRemainingDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTodayUsage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserDailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "dailyLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "usedToday",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "remainingToday",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "canOperate",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "allocation",
									"type": "uint8"
								}
							],
							"name": "isAllocationAcceptable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kernel",
							"outputs": [
								{
									"internalType": "contract ITokenAllocationKernel",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kernelAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumAllocationThreshold",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "mintWithKernel",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "additionalData",
									"type": "bytes"
								}
							],
							"name": "previewKernelRecommendation",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "allocation",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "meetsThreshold",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "adjustedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "withinDailyLimit",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "setDefaultDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_kernelAddress",
									"type": "address"
								}
							],
							"name": "setKernelAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_threshold",
									"type": "uint8"
								}
							],
							"name": "setMinimumAllocationThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isPaused",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_studyTokenAddress",
									"type": "address"
								}
							],
							"name": "setStudyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "setUserDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "studyToken",
							"outputs": [
								{
									"internalType": "contract IStudyToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userDailyLimits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userDailyUsage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Refined Token Authority for StudyDAO with direct kernel integration Works with Kernel ID 1593 for token allocation recommendations",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"authorizeContract(address)": {
								"details": "Authorize a contract"
							},
							"authorizeMint(address,uint256,bytes)": {
								"details": "Authorize a token mint operation with kernel verification",
								"params": {
									"additionalData": "Additional data for kernel decision",
									"amount": "Amount of tokens to mint",
									"to": "Address to mint tokens to"
								},
								"returns": {
									"adjustedAmount": "The adjusted amount based on kernel recommendation",
									"success": "True if operation is authorized"
								}
							},
							"authorizeSimple(address,uint256)": {
								"details": "Simple authorization without kernel (for compatibility/emergency)",
								"params": {
									"amount": "Amount to authorize",
									"to": "Address to authorize for"
								},
								"returns": {
									"_0": "bool True if authorized"
								}
							},
							"authorizeTransfer(address,address,uint256,bytes)": {
								"details": "Authorize a token transfer operation with kernel verification",
								"params": {
									"additionalData": "Additional data for kernel decision",
									"amount": "Amount of tokens to transfer",
									"from": "Address sending tokens",
									"to": "Address receiving tokens"
								},
								"returns": {
									"_0": "bool True if transfer is authorized"
								}
							},
							"canUserOperate(address,uint256)": {
								"details": "Check if user can perform operation with given amount"
							},
							"constructor": {
								"details": "Constructor initializing StudyDAO token authority",
								"params": {
									"_defaultDailyLimit": "Default daily limit for users",
									"_kernelAddress": "Address of the Token Allocation Kernel (1593)",
									"_studyTokenAddress": "Address of the StudyToken contract",
									"initialOwner": "Owner of the contract"
								}
							},
							"deauthorizeContract(address)": {
								"details": "Deauthorize a contract"
							},
							"getCurrentDay()": {
								"details": "Get the current day number"
							},
							"getKernelRecommendation(address,uint256,bytes)": {
								"details": "Get recommendation from kernel with error handling",
								"params": {
									"additionalData": "Any additional data for the kernel",
									"amount": "Requested token amount",
									"user": "Address requesting tokens"
								},
								"returns": {
									"_0": "allocation Recommended allocation (0-255), 0 if error"
								}
							},
							"getRemainingDailyLimit(address)": {
								"details": "Get a user's remaining daily limit"
							},
							"getTodayUsage(address)": {
								"details": "Get a user's used amount for today"
							},
							"getUserDailyLimit(address)": {
								"details": "Get a user's effective daily limit"
							},
							"getUserStatus(address)": {
								"details": "Get user's complete status"
							},
							"isAllocationAcceptable(uint8)": {
								"details": "Check if allocation meets minimum threshold",
								"params": {
									"allocation": "The allocation score from kernel (0-255)"
								},
								"returns": {
									"_0": "bool True if allocation is acceptable"
								}
							},
							"mintWithKernel(address,uint256,bytes)": {
								"details": "Direct mint function with kernel verification (owner only)",
								"params": {
									"additionalData": "Additional data for kernel decision",
									"amount": "Amount of tokens to mint",
									"to": "Address to mint tokens to"
								},
								"returns": {
									"_0": "bool True if mint was successful"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"previewKernelRecommendation(address,uint256,bytes)": {
								"details": "Preview what would happen with a kernel call (without executing)"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setDefaultDailyLimit(uint256)": {
								"details": "Set default daily limit for all users"
							},
							"setKernelAddress(address)": {
								"details": "Update kernel address"
							},
							"setMinimumAllocationThreshold(uint8)": {
								"details": "Set the minimum allocation threshold"
							},
							"setPause(bool)": {
								"details": "Emergency pause/unpause"
							},
							"setStudyToken(address)": {
								"details": "Set StudyToken contract address"
							},
							"setUserDailyLimit(address,uint256)": {
								"details": "Set daily token limit for a specific user"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "StudyTokenAuthority",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  0x80\n  jumpi(tag_6, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_4\n  jumpi\n  dup2\n  0x80\n  swap3\n  dup6\n  swap3\n  0x40\n  swap6\n  dup7\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_6\n  jumpi\n  tag_8\n  dup3\n  tag_1\n  jump\t// in\ntag_8:\n  swap2\n  tag_9\n  0x20\n  dup3\n  add\n  tag_1\n  jump\t// in\ntag_9:\n  swap1\n  0x60\n  tag_10\n  dup5\n  dup4\n  add\n  tag_1\n  jump\t// in\ntag_10:\n  swap2\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  swap5\n  swap1\n  swap3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup6\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n  0x00\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sload\n  swap3\n  dup2\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  swap4\n  dup9\n  dup6\n  dup8\n  and\n  or\n  0x00\n  sstore\n  dup9\n  dup3\n  dup10\n  mload\n  swap8\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  0x00\n  dup1\n  log3\n    /* \"contracts/StudyTokenAuthority.sol\":1569:1571  50 */\n  0x32\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  not(0xffff)\n    /* \"contracts/StudyTokenAuthority.sol\":1569:1571  50 */\n  0x08\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sload\n  and\n  or\n    /* \"contracts/StudyTokenAuthority.sol\":1569:1571  50 */\n  0x08\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sstore\n  and\n    /* \"contracts/StudyTokenAuthority.sol\":3398:3430  _studyTokenAddress != address(0) */\n  swap4\n  dup5\n  iszero\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  tag_13\n  jumpi\n  pop\n  and\n    /* \"contracts/StudyTokenAuthority.sol\":3474:3502  _kernelAddress != address(0) */\n  swap2\n  dup3\n  iszero\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  tag_15\n  jumpi\n  dup2\n  sload(0x01)\n  and\n  or\n  0x01\n  sstore\n  dup2\n  dup2\n    /* \"contracts/StudyTokenAuthority.sol\":3672:3702  kernelAddress = _kernelAddress */\n  0x03\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sload\n  and\n  or\n    /* \"contracts/StudyTokenAuthority.sol\":3672:3702  kernelAddress = _kernelAddress */\n  0x03\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sstore\n    /* \"contracts/StudyTokenAuthority.sol\":3712:3759  kernel = ITokenAllocationKernel(_kernelAddress) */\n  0x02\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sload\n  and\n  or\n    /* \"contracts/StudyTokenAuthority.sol\":3712:3759  kernel = ITokenAllocationKernel(_kernelAddress) */\n  0x02\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sstore\n    /* \"contracts/StudyTokenAuthority.sol\":3769:3807  defaultDailyLimit = _defaultDailyLimit */\n  0x06\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  sstore\n  dup2\n  0x00\n  mstore\n    /* \"contracts/StudyTokenAuthority.sol\":3874:3893  authorizedContracts */\n  0x04\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  0x20\n  mstore\n  dup1\n  0x00\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  mload\n    /* \"contracts/StudyTokenAuthority.sol\":3929:3961  ContractAuthorized(initialOwner) */\n  swap1\n  0x8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651\n  0x00\n  dup1\n  log2\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_15:\n  dup5\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x16\n  0x24\n  dup3\n  add\n  mstore\n  0x496e76616c6964206b65726e656c206164647265737300000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_13:\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n  0x24\n  dup3\n  add\n  mstore\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  dup5\n  mload\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  dup2\n  mstore\n  0x00\n  0x04\n  dup3\n  add\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\ntag_6:\n  0x00\n  dup1\n  revert\ntag_4:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_6\n  jumpi\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      dup1\n      calldatasize\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x177c49a7\n      eq\n      tag_28\n      jumpi\n      dup2\n      0x17a08ca6\n      eq\n      tag_30\n      jumpi\n      dup2\n      0x207cbfa2\n      eq\n      tag_32\n      jumpi\n      dup2\n      0x360cf54a\n      eq\n      tag_34\n      jumpi\n      dup2\n      0x3e6968b6\n      eq\n      tag_36\n      jumpi\n      dup2\n      0x41196faf\n      eq\n      tag_38\n      jumpi\n      dup2\n      0x4aea318e\n      eq\n      tag_40\n      jumpi\n      dup2\n      0x59fe2da4\n      eq\n      tag_42\n      jumpi\n      dup2\n      0x612b5332\n      eq\n      tag_44\n      jumpi\n      dup2\n      0x67561d93\n      eq\n      tag_46\n      jumpi\n      dup2\n      0x6dffcd00\n      eq\n      tag_48\n      jumpi\n      dup2\n      0x6e861c0e\n      eq\n      tag_50\n      jumpi\n      dup2\n      0x715018a6\n      eq\n      tag_52\n      jumpi\n      dup2\n      0x73173a35\n      eq\n      tag_54\n      jumpi\n      dup2\n      0x77865f91\n      eq\n      tag_56\n      jumpi\n      dup2\n      0x88616538\n      eq\n      tag_58\n      jumpi\n      dup2\n      0x8da5cb5b\n      eq\n      tag_60\n      jumpi\n      dup2\n      0xa7481b5b\n      eq\n      tag_62\n      jumpi\n      dup2\n      0xb09a8a04\n      eq\n      tag_64\n      jumpi\n      dup2\n      0xb187bd26\n      eq\n      tag_66\n      jumpi\n      dup2\n      0xb6fa284d\n      eq\n      tag_68\n      jumpi\n      dup2\n      0xb8db8ca8\n      eq\n      tag_70\n      jumpi\n      dup2\n      0xbebbcfe6\n      eq\n      tag_72\n      jumpi\n      dup2\n      0xbedb86fb\n      eq\n      tag_74\n      jumpi\n      dup2\n      0xc76b0888\n      eq\n      tag_76\n      jumpi\n      dup2\n      0xd3893b47\n      eq\n      tag_78\n      jumpi\n      dup2\n      0xd4aae0c4\n      eq\n      tag_80\n      jumpi\n      dup2\n      0xd5b9221b\n      eq\n      tag_82\n      jumpi\n      dup2\n      0xd8817cd4\n      eq\n      tag_84\n      jumpi\n      dup2\n      0xea0d5dcd\n      eq\n      tag_86\n      jumpi\n      dup2\n      0xec37d259\n      eq\n      tag_88\n      jumpi\n      dup2\n      0xf2fde38b\n      eq\n      tag_90\n      jumpi\n      pop\n      0xf64d2190\n      eq\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      jumpi(tag_94, callvalue)\n        /* \"contracts/StudyTokenAuthority.sol\":15825:15878  getKernelRecommendation(user, amount, additionalData) */\n      tag_96\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x80\n      swap2\n      tag_97\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_97:\n        /* \"contracts/StudyTokenAuthority.sol\":15825:15878  getKernelRecommendation(user, amount, additionalData) */\n      dup2\n      dup4\n      swap6\n      swap3\n      swap6\n      tag_20\n      jump\t// in\n    tag_96:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":16032:16060  getRemainingDailyLimit(user) */\n      tag_98\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":15967:15986  amount * allocation */\n      tag_99\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup2\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap7\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":15967:15986  amount * allocation */\n      dup1\n      swap8\n      tag_16\n      jump\t// in\n    tag_99:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n        /* \"contracts/StudyTokenAuthority.sol\":16032:16060  getRemainingDailyLimit(user) */\n      swap3\n      tag_24\n      jump\t// in\n    tag_98:\n        /* \"contracts/StudyTokenAuthority.sol\":16089:16116  adjustedAmount <= remaining */\n      dup3\n      gt\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap3\n      dup2\n      mload\n      swap5\n      dup1\n      dup7\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":5159:5199  allocation >= minimumAllocationThreshold */\n      lt\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      dup6\n      add\n      mstore\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n      return\n    tag_94:\n      0x00\n      dup1\n      revert\n    tag_90:\n      swap1\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      tag_104\n      tag_1\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_105\n      tag_25\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      pop\n      pop\n      sload(0x00)\n      dup3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      and\n      or\n      0x00\n      sstore\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      dup1\n      log3\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_106:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      0x00\n      0x24\n      swap3\n      mload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      swap2\n      shl(0xe0, 0x1e4fbdf7)\n      dup4\n      mstore\n      dup3\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_88:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      tag_112\n      tag_113\n      tag_1\n      jump\t// in\n    tag_113:\n      tag_24\n      jump\t// in\n    tag_112:\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_86:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x80\n      swap1\n      tag_118\n      tag_1\n      jump\t// in\n    tag_118:\n        /* \"contracts/StudyTokenAuthority.sol\":15246:15269  getUserDailyLimit(user) */\n      tag_119\n      dup2\n      tag_22\n      jump\t// in\n    tag_119:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":11841:11855  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      dup1\n      0x00\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":15337:15365  getRemainingDailyLimit(user) */\n      tag_120\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup2\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":15337:15365  getRemainingDailyLimit(user) */\n      swap3\n      tag_24\n      jump\t// in\n    tag_120:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":15389:15397  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":15389:15397  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":15388:15397  !isPaused */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":15388:15419  !isPaused && remainingToday > 0 */\n      swap3\n      dup4\n      tag_121\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_122:\n      dup2\n      mload\n      swap5\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      mstore\n      dup4\n      add\n      mstore\n      iszero\n      iszero\n      0x60\n      dup3\n      add\n      mstore\n      return\n        /* \"contracts/StudyTokenAuthority.sol\":15388:15419  !isPaused && remainingToday > 0 */\n    tag_121:\n        /* \"contracts/StudyTokenAuthority.sol\":15401:15419  remainingToday > 0 */\n      dup3\n      iszero\n      iszero\n      swap4\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":15388:15419  !isPaused && remainingToday > 0 */\n      jump(tag_122)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_84:\n      dup3\n      jumpi(tag_94, callvalue)\n      0x20\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":2674:2675  _ */\n      tag_125\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      tag_126\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n      tag_127\n      tag_25\n      jump\t// in\n    tag_127:\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_128\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2632:2641  !isPaused */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_14\n      jump\t// in\n    tag_128:\n        /* \"contracts/StudyTokenAuthority.sol\":2674:2675  _ */\n      tag_23\n      jump\t// in\n    tag_125:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_82:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_133\n      tag_1\n      jump\t// in\n    tag_133:\n      and\n      0x00\n      mstore\n      dup3\n      mstore\n      0xff\n      dup2\n      0x00\n      keccak256\n      sload\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_80:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/StudyTokenAuthority.sol\":996:1032  ITokenAllocationKernel public kernel */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_78:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_142\n      tag_1\n      jump\t// in\n    tag_142:\n      and\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":11841:11855  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n      0x00\n      mstore\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_76:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":1314:1346  uint256 public defaultDailyLimit */\n      0x06\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_74:\n      swap1\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload\n      swap1\n      dup2\n      iszero\n      iszero\n      dup1\n      swap3\n      sub\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":14376:14405  PauseStatusChanged(_isPaused) */\n      0xef37df9624f797913e7585c7f7b5d004ba6704be3c64b0561c157728ccc86985\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n      tag_153\n      tag_25\n      jump\t// in\n    tag_153:\n        /* \"contracts/StudyTokenAuthority.sol\":14341:14361  isPaused = _isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup1\n      sload\n      not(0xff00)\n      and\n      dup4\n      dup3\n      shl\n      0xff00\n      and\n      or\n      swap1\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":14376:14405  PauseStatusChanged(_isPaused) */\n      log1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_72:\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_158\n      tag_25\n      jump\t// in\n    tag_158:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      calldataload\n        /* \"contracts/StudyTokenAuthority.sol\":13913:13938  defaultDailyLimit = limit */\n      0x06\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sstore\n      stop\n    tag_70:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      dup2\n      calldataload\n      0xff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_165\n      tag_25\n      jump\t// in\n    tag_165:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":12098:12115  _threshold <= 255 */\n      dup2\n      gt\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      tag_166\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":12265:12314  MinimumThresholdUpdated(oldThreshold, _threshold) */\n      0x2dcd482f94838c55db1e931fa73dc7acd9b385d4a501a9b5a6210f8ae89a372b\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap3\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":12175:12201  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      swap1\n      dup1\n      not(0xff)\n      dup4\n      and\n      or\n        /* \"contracts/StudyTokenAuthority.sol\":12175:12201  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sstore\n      0xff\n      dup4\n      mload\n      swap3\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":12265:12314  MinimumThresholdUpdated(oldThreshold, _threshold) */\n      log1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_166:\n      dup2\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup6\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x5468726573686f6c64206d757374206265203c3d203235350000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_68:\n      dup3\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_172\n      tag_1\n      jump\t// in\n    tag_172:\n      and\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":1398:1467  mapping(address => mapping(uint256 => uint256)) public userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      mstore(0x00, calldataload(0x24))\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_66:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":1619:1647  bool public isPaused = false */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":1619:1647  bool public isPaused = false */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_64:\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      tag_181\n      tag_1\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_182\n      tag_25\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":14095:14155  require(_studyTokenAddress != address(0), \"Invalid address\") */\n      tag_183\n        /* \"contracts/StudyTokenAuthority.sol\":14103:14135  _studyTokenAddress != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":14095:14155  require(_studyTokenAddress != address(0), \"Invalid address\") */\n      tag_8\n      jump\t// in\n    tag_183:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xa0\n      shl\n        /* \"contracts/StudyTokenAuthority.sol\":14165:14209  studyToken = IStudyToken(_studyTokenAddress) */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      or\n        /* \"contracts/StudyTokenAuthority.sol\":14165:14209  studyToken = IStudyToken(_studyTokenAddress) */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sstore\n      0x00\n      dup1\n      return\n    tag_62:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_60:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_58:\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      tag_196\n      tag_1\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_197\n      tag_25\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":12460:12516  require(_kernelAddress != address(0), \"Invalid address\") */\n      tag_198\n        /* \"contracts/StudyTokenAuthority.sol\":12468:12496  _kernelAddress != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":12460:12516  require(_kernelAddress != address(0), \"Invalid address\") */\n      tag_8\n      jump\t// in\n    tag_198:\n        /* \"contracts/StudyTokenAuthority.sol\":12546:12559  kernelAddress */\n      0x03\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      dup3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup2\n      dup2\n      dup5\n      and\n      or\n        /* \"contracts/StudyTokenAuthority.sol\":12546:12559  kernelAddress */\n      0x03\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":12609:12656  kernel = ITokenAllocationKernel(_kernelAddress) */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      or\n        /* \"contracts/StudyTokenAuthority.sol\":12609:12656  kernel = ITokenAllocationKernel(_kernelAddress) */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sstore\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":12671:12718  KernelAddressUpdated(oldKernel, _kernelAddress) */\n      0x03cab297d17e50b1fab60fc2a2b1117f96c766e15cac2988ecb7ec1abb578cfc\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":12671:12718  KernelAddressUpdated(oldKernel, _kernelAddress) */\n      dup1\n      log3\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_56:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      tag_112\n      tag_204\n      tag_1\n      jump\t// in\n    tag_204:\n      tag_22\n      jump\t// in\n    tag_54:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/StudyTokenAuthority.sol\":1038:1066  address public kernelAddress */\n      0x03\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_52:\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_213\n      tag_25\n      jump\t// in\n    tag_213:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_50:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      tag_218\n      tag_1\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_219\n      tag_25\n      jump\t// in\n    tag_219:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      0x00\n      mstore\n      dup1\n      0x20\n      mstore\n      0xff\n      dup3\n      0x00\n      keccak256\n      sload\n      and\n      iszero\n      tag_220\n      jumpi\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0x00\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":13422:13459  ContractDeauthorized(contractAddress) */\n      0x54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":13422:13459  ContractDeauthorized(contractAddress) */\n      dup1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_220:\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x436f6e7472616374206e6f7420617574686f72697a6564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_48:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x80))\n      tag_226\n      tag_1\n      jump\t// in\n    tag_226:\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      calldataload(0x24)\n      dup3\n      dup2\n      and\n      sub\n      tag_94\n      jumpi\n      calldataload(0x64)\n      swap4\n      0xffffffffffffffff\n      dup6\n      gt\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":2469:2561  require(authorizedContracts[msg.sender] || msg.sender == owner(), \"Not authorized contract\") */\n      tag_231\n        /* \"contracts/StudyTokenAuthority.sol\":7367:8125  function authorizeTransfer(... */\n      tag_125\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap4\n      tag_233\n      0x20\n      swap8\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_6\n      jump\t// in\n    tag_233:\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      swap4\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n      mstore\n      dup8\n      mstore\n      0xff\n      dup7\n      0x00\n      keccak256\n      sload\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      swap1\n      dup2\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_235:\n        /* \"contracts/StudyTokenAuthority.sol\":2469:2561  require(authorizedContracts[msg.sender] || msg.sender == owner(), \"Not authorized contract\") */\n      pop\n      tag_10\n      jump\t// in\n    tag_231:\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_236\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2632:2641  !isPaused */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_14\n      jump\t// in\n    tag_236:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      calldataload(0x44)\n        /* \"contracts/StudyTokenAuthority.sol\":7367:8125  function authorizeTransfer(... */\n      swap1\n      tag_21\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n    tag_234:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      pop\n      sload(0x00)\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":2512:2533  msg.sender == owner() */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      dup8\n      jump(tag_235)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_46:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      tag_241\n      tag_1\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_242\n      tag_25\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":12865:12922  require(contractAddress != address(0), \"Invalid address\") */\n      tag_243\n        /* \"contracts/StudyTokenAuthority.sol\":12873:12902  contractAddress != address(0) */\n      dup4\n      iszero\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":12865:12922  require(contractAddress != address(0), \"Invalid address\") */\n      tag_8\n      jump\t// in\n    tag_243:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      0x00\n      mstore\n      dup1\n      0x20\n      mstore\n      0xff\n      dup3\n      0x00\n      keccak256\n      sload\n      and\n      tag_244\n      jumpi\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0x00\n      keccak256\n        /* \"contracts/StudyTokenAuthority.sol\":13067:13071  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/StudyTokenAuthority.sol\":13086:13121  ContractAuthorized(contractAddress) */\n      0x8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":13086:13121  ContractAuthorized(contractAddress) */\n      dup1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_244:\n      0x20\n      0x64\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x436f6e747261637420616c726561647920617574686f72697a65640000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_44:\n      dup3\n      jumpi(tag_94, callvalue)\n      0x20\n      swap1\n      0xff\n      tag_248\n      tag_249\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_249:\n      swap2\n      tag_20\n      jump\t// in\n    tag_248:\n      swap2\n      mload\n      swap2\n      and\n      dup2\n      mstore\n      return\n    tag_42:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":1527:1571  uint8 public minimumAllocationThreshold = 50 */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      swap1\n      pop\n      jumpi(tag_94, callvalue)\n        /* \"contracts/StudyTokenAuthority.sol\":2674:2675  _ */\n      tag_256\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      tag_257\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_257:\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      swap3\n      swap2\n      swap1\n      swap2\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n      mstore\n      0x20\n      mstore\n      0xff\n      dup6\n      0x00\n      keccak256\n      sload\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      dup1\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_259:\n        /* \"contracts/StudyTokenAuthority.sol\":2469:2561  require(authorizedContracts[msg.sender] || msg.sender == owner(), \"Not authorized contract\") */\n      tag_260\n      swap1\n      tag_10\n      jump\t// in\n    tag_260:\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_261\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":2633:2641  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2632:2641  !isPaused */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":2624:2664  require(!isPaused, \"Contract is paused\") */\n      tag_14\n      jump\t// in\n    tag_261:\n        /* \"contracts/StudyTokenAuthority.sol\":2674:2675  _ */\n      tag_17\n      jump\t// in\n    tag_256:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n    tag_258:\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":2512:2533  msg.sender == owner() */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      jump(tag_259)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_38:\n      dup3\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":2571:2572  _ */\n      tag_125\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      swap3\n      tag_267\n      tag_1\n      jump\t// in\n    tag_267:\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      swap1\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n      mstore\n      dup5\n      mstore\n      0xff\n      dup4\n      0x00\n      keccak256\n      sload\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      dup1\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_269:\n        /* \"contracts/StudyTokenAuthority.sol\":2469:2561  require(authorizedContracts[msg.sender] || msg.sender == owner(), \"Not authorized contract\") */\n      tag_270\n      swap1\n      tag_10\n      jump\t// in\n    tag_270:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      calldataload(0x24)\n        /* \"contracts/StudyTokenAuthority.sol\":2571:2572  _ */\n      swap1\n      tag_13\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n    tag_268:\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/StudyTokenAuthority.sol\":2497:2507  msg.sender */\n      caller\n        /* \"contracts/StudyTokenAuthority.sol\":2512:2533  msg.sender == owner() */\n      eq\n        /* \"contracts/StudyTokenAuthority.sol\":2477:2533  authorizedContracts[msg.sender] || msg.sender == owner() */\n      jump(tag_269)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_36:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      mload\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n      dup2\n      mstore\n      return\n    tag_34:\n      dup3\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_279\n      tag_1\n      jump\t// in\n    tag_279:\n      and\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":1226:1276  mapping(address => uint256) public userDailyLimits */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      mstore\n      dup1\n      0x00\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_32:\n      dup3\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      tag_284\n      tag_285\n      tag_286\n      tag_1\n      jump\t// in\n    tag_286:\n      calldataload(0x24)\n      swap1\n      tag_9\n      jump\t// in\n    tag_285:\n      dup4\n      swap3\n      swap2\n      swap3\n      mload\n      swap4\n      dup5\n      swap4\n      iszero\n      iszero\n      dup5\n      mstore\n      dup1\n      0x20\n      dup6\n      add\n      mstore\n      dup4\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_284:\n      sub\n      swap1\n      return\n    tag_30:\n      swap1\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload\n      swap1\n      0xff\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_94\n      jumpi\n      0x20\n      swap2\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      gt\n        /* \"contracts/StudyTokenAuthority.sol\":5159:5199  allocation >= minimumAllocationThreshold */\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_28:\n      dup3\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":13731:13756  UserLimitSet(user, limit) */\n      0xc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa36\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      tag_297\n      tag_1\n      jump\t// in\n    tag_297:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_298\n      tag_25\n      jump\t// in\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and\n      swap4\n        /* \"contracts/StudyTokenAuthority.sol\":13631:13677  require(user != address(0), \"Invalid address\") */\n      tag_299\n        /* \"contracts/StudyTokenAuthority.sol\":13639:13657  user != address(0) */\n      dup6\n      iszero\n      iszero\n        /* \"contracts/StudyTokenAuthority.sol\":13631:13677  require(user != address(0), \"Invalid address\") */\n      tag_8\n      jump\t// in\n    tag_299:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup5\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":13687:13702  userDailyLimits */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup4\n      mstore\n      dup2\n      dup2\n      0x00\n      keccak256\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":13731:13756  UserLimitSet(user, limit) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      stop\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_94\n      jumpi\n      jump\t// out\n    tag_2:\n      0x00\n    tag_302:\n      dup4\n      dup2\n      lt\n      tag_303\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_303:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_302)\n    tag_3:\n      swap1\n      0x20\n      swap2\n      tag_305\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup6\n      mstore\n      dup6\n      dup1\n      dup7\n      add\n      swap2\n      add\n      tag_2\n      jump\t// in\n    tag_305:\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_4:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_306\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_306:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_306\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_94\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_306\n      jumpi\n      mload(0x40)\n      swap3\n      tag_314\n      0x1f\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_5\n      jump\t// in\n    tag_314:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_94\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_7:\n      0x60\n      not(0x03)\n      dup3\n      add\n      slt\n      tag_94\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_94\n      jumpi\n      swap2\n      calldataload(0x24)\n      swap2\n      calldataload(0x44)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_94\n      jumpi\n      tag_323\n      swap2\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_323:\n      swap1\n      jump\t// out\n    tag_8:\n      iszero\n      tag_324\n      jumpi\n      jump\t// out\n    tag_324:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/StudyTokenAuthority.sol\":14553:14980  function canUserOperate(address user, uint256 amount) external view returns (bool canOperate, string memory reason) {... */\n    tag_9:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":14683:14691  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":14683:14691  isPaused */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      shr\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":14679:14754  if (isPaused) {... */\n      tag_326\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":14792:14820  getRemainingDailyLimit(user) */\n      tag_328\n      swap1\n      tag_24\n      jump\t// in\n    tag_328:\n        /* \"contracts/StudyTokenAuthority.sol\":14834:14852  remaining < amount */\n      lt\n        /* \"contracts/StudyTokenAuthority.sol\":14830:14921  if (remaining < amount) {... */\n      tag_329\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":14947:14951  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      mload(0x40)\n      tag_331\n      dup2\n      tag_4\n      jump\t// in\n    tag_331:\n      0x11\n      dup2\n      mstore\n      shl(0x7a, 0x13dc195c985d1a5bdb88185b1b1bddd959)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":14553:14980  function canUserOperate(address user, uint256 amount) external view returns (bool canOperate, string memory reason) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":14830:14921  if (remaining < amount) {... */\n    tag_329:\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      mload(0x40)\n      tag_332\n      dup2\n      tag_4\n      jump\t// in\n    tag_332:\n      0x18\n      dup2\n      mstore\n      0x496e73756666696369656e74206461696c79206c696d69740000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":14868:14910  return (false, \"Insufficient daily limit\") */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":14679:14754  if (isPaused) {... */\n    tag_326:\n        /* \"contracts/StudyTokenAuthority.sol\":14707:14743  return (false, \"Contract is paused\") */\n      pop\n      pop\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      mload(0x40)\n      tag_333\n      dup2\n      tag_4\n      jump\t// in\n    tag_333:\n      0x12\n      dup2\n      mstore\n      shl(0x72, 0x10dbdb9d1c9858dd081a5cc81c185d5cd959)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":14707:14743  return (false, \"Contract is paused\") */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_10:\n      iszero\n      tag_334\n      jumpi\n      jump\t// out\n    tag_334:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420617574686f72697a656420636f6e7472616374000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_11:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_336\n      jumpi\n      jump\t// out\n    tag_336:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/StudyTokenAuthority.sol\":10167:10771  function authorizeSimple(address to, uint256 amount) external onlyAuthorizedContract() returns (bool) {... */\n    tag_13:\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n        /* \"contracts/StudyTokenAuthority.sol\":10344:10365  getUserDailyLimit(to) */\n      swap2\n      tag_338\n      dup2\n      tag_22\n      jump\t// in\n    tag_338:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":10395:10409  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap2\n      dup3\n      0x00\n      keccak256\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":10447:10465  usedToday + amount */\n      swap1\n      tag_339\n      dup6\n      dup4\n      tag_11\n      jump\t// in\n    tag_339:\n        /* \"contracts/StudyTokenAuthority.sol\":10447:10478  usedToday + amount <= userLimit */\n      gt\n      tag_340\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x80\n        /* \"contracts/StudyTokenAuthority.sol\":10526:10544  usedToday + amount */\n      swap3\n      dup5\n      swap3\n      tag_342\n      0x00\n      dup1\n      mload\n      0x20\n      data_929dbb561b9d63c85f276cf30ab68486b85d32850e15665292944eceb9d2ca1d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap7\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x0a\n        /* \"contracts/StudyTokenAuthority.sol\":10526:10544  usedToday + amount */\n      swap5\n      tag_11\n      jump\t// in\n    tag_342:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      dup8\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":10395:10409  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      dup2\n      0x00\n      keccak256\n      sstore\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0xb3, 0x0e6d2dae0d8ca82eae8d)\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":10563:10611  TokenOperationApproved(to, amount, \"simpleAuth\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":10632:10636  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":10625:10636  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":10443:10765  if (usedToday + amount <= userLimit) {... */\n    tag_340:\n      pop\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mload\n      swap1\n      dup2\n      mstore\n      0x40\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x14\n      swap1\n      dup3\n      add\n      mstore\n      shl(0x62, 0x11185a5b1e481b1a5b5a5d08195e18d959591959)\n      0x60\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":10672:10728  TokenOperationDenied(to, amount, \"Daily limit exceeded\") */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup1\n      0x80\n      dup2\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":10672:10728  TokenOperationDenied(to, amount, \"Daily limit exceeded\") */\n    tag_343:\n      sub\n      swap1\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":10742:10754  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_14:\n      iszero\n      tag_344\n      jumpi\n      jump\t// out\n    tag_344:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x10dbdb9d1c9858dd081a5cc81c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_16:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_336\n      jumpi\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":5650:7017  function authorizeMint(... */\n    tag_17:\n      swap3\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":5932:5983  getKernelRecommendation(to, amount, additionalData) */\n      tag_348\n        /* \"contracts/StudyTokenAuthority.sol\":5650:7017  function authorizeMint(... */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":5932:5983  getKernelRecommendation(to, amount, additionalData) */\n      dup3\n      dup6\n      tag_20\n      jump\t// in\n    tag_348:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0xff\n      dup4\n      and\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      swap1\n      dup5\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":5998:6044  KernelAllocationResult(to, amount, allocation) */\n      0x3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup6\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":5998:6044  KernelAllocationResult(to, amount, allocation) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap3\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":5159:5199  allocation >= minimumAllocationThreshold */\n      swap2\n      dup3\n      lt\n        /* \"contracts/StudyTokenAuthority.sol\":6118:6290  if (!isAllocationAcceptable(allocation)) {... */\n      tag_350\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":6383:6402  amount * allocation */\n      swap2\n      tag_352\n      swap2\n      tag_16\n      jump\t// in\n    tag_352:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      swap4\n        /* \"contracts/StudyTokenAuthority.sol\":6523:6544  getUserDailyLimit(to) */\n      tag_353\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n        /* \"contracts/StudyTokenAuthority.sol\":6523:6544  getUserDailyLimit(to) */\n      swap2\n      tag_22\n      jump\t// in\n    tag_353:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup4\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6574:6588  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":6626:6652  usedToday + adjustedAmount */\n      swap1\n      tag_354\n      dup8\n      dup4\n      tag_11\n      jump\t// in\n    tag_354:\n        /* \"contracts/StudyTokenAuthority.sol\":6626:6664  usedToday + adjustedAmount > userLimit */\n      gt\n        /* \"contracts/StudyTokenAuthority.sol\":6622:6791  if (usedToday + adjustedAmount > userLimit) {... */\n      tag_355\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":6871:6897  usedToday + adjustedAmount */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x80\n        /* \"contracts/StudyTokenAuthority.sol\":6871:6897  usedToday + adjustedAmount */\n      swap2\n      tag_357\n      dup8\n      0x00\n      dup1\n      mload\n      0x20\n      data_929dbb561b9d63c85f276cf30ab68486b85d32850e15665292944eceb9d2ca1d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap6\n      tag_11\n      jump\t// in\n    tag_357:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      dup6\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6574:6588  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      dup2\n      0x00\n      keccak256\n      sstore\n      0x04\n      dup2\n      mload\n      swap2\n      dup8\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0xe2, 0x1b5a5b9d)\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6921:6971  TokenOperationApproved(to, adjustedAmount, \"mint\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":6989:6993  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":6981:7010  return (true, adjustedAmount) */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":5650:7017  function authorizeMint(... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6622:6791  if (usedToday + adjustedAmount > userLimit) {... */\n    tag_355:\n      pop\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mload\n      swap3\n      dup4\n      mstore\n      0x40\n      0x20\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x14\n      swap1\n      dup5\n      add\n      mstore\n      shl(0x62, 0x11185a5b1e481b1a5b5a5d08195e18d959591959)\n      0x60\n      dup5\n      add\n      mstore\n      swap1\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6685:6749  TokenOperationDenied(to, adjustedAmount, \"Daily limit exceeded\") */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x80\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":6685:6749  TokenOperationDenied(to, adjustedAmount, \"Daily limit exceeded\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6763:6780  return (false, 0) */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6763:6780  return (false, 0) */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":6118:6290  if (!isAllocationAcceptable(allocation)) {... */\n    tag_350:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap1\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      swap4\n      swap5\n      pop\n      0x22\n      dup3\n      0xa0\n      swap4\n      mload\n      swap3\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x416c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xf2, 0x1b19)\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":6178:6248  TokenOperationDenied(to, amount, \"Allocation below minimum threshold\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6262:6279  return (false, 0) */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":6262:6279  return (false, 0) */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n    tag_18:\n      0x00\n      swap1\n      jumpi(tag_359, gt(returndatasize, 0x03))\n      jump\t// out\n    tag_359:\n      swap1\n      pop\n      0x04\n      0x00\n      dup1\n      returndatacopy\n      shr(0xe0, mload(0x00))\n      swap1\n      jump\t// out\n    tag_19:\n      0x00\n      jumpi(tag_323, lt(returndatasize, 0x44))\n      mload(0x40)\n      not(0x03)\n      swap2\n      returndatasize\n      dup4\n      add\n      0x04\n      dup4\n      returndatacopy\n      dup2\n      mload\n      0xffffffffffffffff\n      swap2\n      dup3\n      dup3\n      gt\n      returndatasize\n      0x24\n      dup5\n      add\n      gt\n      or\n      tag_367\n      jumpi\n      dup2\n      dup5\n      add\n      swap5\n      dup6\n      mload\n      swap4\n      dup5\n      gt\n      tag_365\n      jumpi\n      returndatasize\n      dup6\n      add\n      add\n      0x20\n      dup5\n      dup8\n      add\n      add\n      gt\n      tag_367\n      jumpi\n      pop\n      tag_323\n      swap3\n      swap2\n      add\n      0x20\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_367:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_365:\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4342:4864  function getKernelRecommendation(... */\n    tag_20:\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4512  kernel */\n      0x02\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x74b9e5b1)\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap3\n      dup4\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n      0x04\n      dup3\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x60\n      0x44\n      dup5\n      add\n      mstore\n      swap2\n      swap3\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n      0x20\n      swap3\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup5\n      swap3\n      and\n      swap1\n      dup3\n      swap1\n      dup2\n      swap1\n      tag_370\n      swap1\n      0x64\n      dup4\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_370:\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n      sub\n      swap2\n      gas\n      staticcall\n      0x00\n      swap2\n      dup2\n      tag_371\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":4342:4864  function getKernelRecommendation(... */\n    tag_372:\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":4502:4858  try kernel.getRecommendedTokenAllocation(user, amount, additionalData) returns (uint8 allocation) {... */\n      tag_323\n      jumpi\n      pop\n      tag_375\n      tag_18\n      jump\t// in\n    tag_375:\n      0x08c379a0\n      eq\n      tag_376\n      jumpi\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4839:4847  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4502:4858  try kernel.getRecommendedTokenAllocation(user, amount, additionalData) returns (uint8 allocation) {... */\n    tag_376:\n        /* \"contracts/StudyTokenAuthority.sol\":4643:4767  catch Error(string memory) {... */\n      tag_378\n      tag_19\n      jump\t// in\n    tag_378:\n      tag_379\n      jumpi\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4839:4847  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4643:4767  catch Error(string memory) {... */\n    tag_379:\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":4748:4756  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n    tag_371:\n      swap1\n      swap2\n      pop\n      0x20\n      dup2\n      jumpi(tag_381, gt(0x20, returndatasize))\n    tag_382:\n      dup2\n      tag_383\n      0x20\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_383:\n      dup2\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sub\n      slt\n      tag_94\n      jumpi\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":4506:4572  kernel.getRecommendedTokenAllocation(user, amount, additionalData) */\n      swap1\n      0x00\n      jump(tag_372)\n    tag_381:\n      returndatasize\n      swap2\n      pop\n      jump(tag_382)\n        /* \"contracts/StudyTokenAuthority.sol\":7367:8125  function authorizeTransfer(... */\n    tag_21:\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":7658:7711  getKernelRecommendation(from, amount, additionalData) */\n      tag_388\n        /* \"contracts/StudyTokenAuthority.sol\":7367:8125  function authorizeTransfer(... */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":7658:7711  getKernelRecommendation(from, amount, additionalData) */\n      dup3\n      dup5\n      tag_20\n      jump\t// in\n    tag_388:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0xff\n      dup4\n      and\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap2\n      swap1\n      dup5\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":7726:7774  KernelAllocationResult(from, amount, allocation) */\n      0x3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup5\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":7726:7774  KernelAllocationResult(from, amount, allocation) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":5159:5199  allocation >= minimumAllocationThreshold */\n      lt\n        /* \"contracts/StudyTokenAuthority.sol\":7848:8026  if (!isAllocationAcceptable(allocation)) {... */\n      tag_390\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_929dbb561b9d63c85f276cf30ab68486b85d32850e15665292944eceb9d2ca1d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup3\n      0x80\n      swap4\n      mload\n      swap3\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0xc1, 0x3a3930b739b332b9)\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":8049:8097  TokenOperationApproved(from, amount, \"transfer\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":8114:8118  true */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":7367:8125  function authorizeTransfer(... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":7848:8026  if (!isAllocationAcceptable(allocation)) {... */\n    tag_390:\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n      0x2b\n      dup3\n      0xa0\n      swap4\n      mload\n      swap3\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x5472616e7366657220616c6c6f636174696f6e2062656c6f77206d696e696d75\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x1b481d1a1c995cda1bdb19)\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":7908:7989  TokenOperationDenied(from, amount, \"Transfer allocation below minimum threshold\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":8003:8015  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":11069:11260  function getUserDailyLimit(address user) public view returns (uint256) {... */\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":11170:11185  userDailyLimits */\n      0x05\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":11208:11221  userLimit > 0 */\n      dup1\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":11069:11260  function getUserDailyLimit(address user) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":11208:11253  userLimit > 0 ? userLimit : defaultDailyLimit */\n    tag_392:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":11236:11253  defaultDailyLimit */\n      0x06\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n        /* \"contracts/StudyTokenAuthority.sol\":11069:11260  function getUserDailyLimit(address user) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":8424:9871  function mintWithKernel(... */\n    tag_23:\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":8660:8711  getKernelRecommendation(to, amount, additionalData) */\n      tag_395\n        /* \"contracts/StudyTokenAuthority.sol\":8424:9871  function mintWithKernel(... */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":8660:8711  getKernelRecommendation(to, amount, additionalData) */\n      dup3\n      dup5\n      tag_20\n      jump\t// in\n    tag_395:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0xff\n      dup4\n      and\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      swap5\n      swap2\n      swap3\n      swap1\n      dup6\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":8726:8772  KernelAllocationResult(to, amount, allocation) */\n      0x3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup6\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":8726:8772  KernelAllocationResult(to, amount, allocation) */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n      dup1\n        /* \"contracts/StudyTokenAuthority.sol\":5173:5199  minimumAllocationThreshold */\n      0x08\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap2\n      and\n        /* \"contracts/StudyTokenAuthority.sol\":5159:5199  allocation >= minimumAllocationThreshold */\n      swap1\n      dup2\n      lt\n        /* \"contracts/StudyTokenAuthority.sol\":8846:9018  if (!isAllocationAcceptable(allocation)) {... */\n      tag_397\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":9099:9118  amount * allocation */\n      tag_399\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0xff\n        /* \"contracts/StudyTokenAuthority.sol\":9099:9118  amount * allocation */\n      swap2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":9099:9118  amount * allocation */\n      swap5\n      swap6\n      tag_16\n      jump\t// in\n    tag_399:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9192  studyToken */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      and\n      swap3\n      dup1\n      mload\n      swap4\n      shl(0xe1, 0x4d248487)\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n      dup6\n      mstore\n      dup6\n      0x04\n      dup7\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mstore\n      dup3\n      0x24\n      dup7\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n      dup5\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x44\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n      dup2\n      0x20\n      swap7\n      dup8\n      swap5\n      gas\n      call\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n      swap5\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n      dup2\n      tag_400\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":8424:9871  function mintWithKernel(... */\n    tag_401:\n      pop\n        /* \"contracts/StudyTokenAuthority.sol\":9178:9865  try studyToken.mintReward(to, adjustedAmount) returns (bool result) {... */\n      tag_402\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      tag_404\n      tag_18\n      jump\t// in\n    tag_404:\n      0x08c379a0\n      eq\n      tag_405\n      jumpi\n    tag_406:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup1\n      dup1\n      0x80\n      swap5\n      0x1a\n      swap4\n      mload\n      swap5\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d696e74206661696c65643a20556e6b6e6f776e206572726f72000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":9758:9828  TokenOperationDenied(to, adjustedAmount, \"Mint failed: Unknown error\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":9842:9854  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":9178:9865  try studyToken.mintReward(to, adjustedAmount) returns (bool result) {... */\n    tag_405:\n        /* \"contracts/StudyTokenAuthority.sol\":9551:9732  catch Error(string memory reason) {... */\n      tag_407\n      tag_19\n      jump\t// in\n    tag_407:\n      dup1\n      tag_408\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":9178:9865  try studyToken.mintReward(to, adjustedAmount) returns (bool result) {... */\n      pop\n      jump(tag_406)\n        /* \"contracts/StudyTokenAuthority.sol\":9551:9732  catch Error(string memory reason) {... */\n    tag_408:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup2\n        /* \"contracts/StudyTokenAuthority.sol\":9652:9693  abi.encodePacked(\"Mint failed: \", reason) */\n      tag_410\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x2d\n      tag_343\n      swap5\n      mload\n        /* \"contracts/StudyTokenAuthority.sol\":9652:9693  abi.encodePacked(\"Mint failed: \", reason) */\n      dup1\n      swap5\n      shl(0x9d, 0x026b4b73a103330b4b632b21d1)\n      dup10\n      dup4\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mstore\n      tag_412\n      dup2\n      mload\n      dup1\n      swap3\n      dup12\n      dup7\n      dup7\n      add\n      swap2\n      add\n      tag_2\n      jump\t// in\n    tag_412:\n      dup2\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":9652:9693  abi.encodePacked(\"Mint failed: \", reason) */\n      sub\n      0x0d\n      dup2\n      add\n      dup6\n      mstore\n      add\n      dup4\n      tag_5\n      jump\t// in\n    tag_410:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup1\n      dup1\n      mload\n      swap6\n      dup7\n      swap6\n      dup7\n      mstore\n      dup6\n      add\n      mstore\n      dup4\n      add\n      swap1\n      tag_3\n      jump\t// in\n        /* \"contracts/StudyTokenAuthority.sol\":9178:9865  try studyToken.mintReward(to, adjustedAmount) returns (bool result) {... */\n    tag_402:\n        /* \"contracts/StudyTokenAuthority.sol\":9260:9540  if (result) {... */\n      swap2\n      swap1\n      swap3\n      0x00\n      eq\n      tag_413\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n      0x0a\n      dup3\n      dup1\n      0x00\n      dup1\n      mload\n      0x20\n      data_929dbb561b9d63c85f276cf30ab68486b85d32850e15665292944eceb9d2ca1d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap6\n      0x80\n      swap6\n      mload\n      swap5\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      shl(0xb2, 0x191a5c9958dd135a5b9d)\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":9295:9351  TokenOperationApproved(to, adjustedAmount, \"directMint\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9192  studyToken */\n      0x01\n        /* \"contracts/StudyTokenAuthority.sol\":9369:9380  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":9260:9540  if (result) {... */\n    tag_413:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      swap2\n      0x1b\n      dup3\n      dup1\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap6\n      0x80\n      swap6\n      mload\n      swap5\n      dup6\n      mstore\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d696e74206661696c65643a2072657475726e65642066616c73650000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":9424:9495  TokenOperationDenied(to, adjustedAmount, \"Mint failed: returned false\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":9513:9525  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n    tag_400:\n      swap1\n      swap5\n      pop\n      dup4\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_415\n      jumpi\n    tag_416:\n      tag_417\n      dup2\n      dup4\n      tag_5\n      jump\t// in\n    tag_417:\n      dup2\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sub\n      slt\n      tag_94\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_94\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":9182:9223  studyToken.mintReward(to, adjustedAmount) */\n      swap4\n      0x00\n      jump(tag_401)\n    tag_415:\n      pop\n      returndatasize\n      jump(tag_416)\n        /* \"contracts/StudyTokenAuthority.sol\":8846:9018  if (!isAllocationAcceptable(allocation)) {... */\n    tag_397:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      pop\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      0x27\n      dup3\n      0xa0\n      swap4\n      mload\n      swap3\n      dup4\n      mstore\n      dup1\n      0x20\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x4d696e7420616c6c6f636174696f6e2062656c6f77206d696e696d756d207468\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xca, 0x1c995cda1bdb19)\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":8906:8981  TokenOperationDenied(to, amount, \"Mint allocation below minimum threshold\") */\n      log2\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":8995:9007  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":11333:11639  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x00\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":11484:11498  userDailyUsage */\n      0x07\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/StudyTokenAuthority.sol\":10983:10989  1 days */\n      0x015180\n        /* \"contracts/StudyTokenAuthority.sol\":10965:10980  block.timestamp */\n      timestamp\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      div\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/StudyTokenAuthority.sol\":11541:11564  getUserDailyLimit(user) */\n      tag_422\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/StudyTokenAuthority.sol\":11541:11564  getUserDailyLimit(user) */\n      swap2\n      tag_22\n      jump\t// in\n    tag_422:\n        /* \"contracts/StudyTokenAuthority.sol\":11590:11632  usedToday >= limit ? 0 : limit - usedToday */\n      swap1\n        /* \"contracts/StudyTokenAuthority.sol\":11590:11608  usedToday >= limit */\n      dup2\n      dup2\n      lt\n      tag_423\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":11590:11632  usedToday >= limit ? 0 : limit - usedToday */\n      pop\n      pop\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":11333:11639  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StudyTokenAuthority.sol\":11590:11632  usedToday >= limit ? 0 : limit - usedToday */\n    tag_423:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      dup2\n      sub\n      swap1\n      dup2\n      gt\n      tag_336\n      jumpi\n        /* \"contracts/StudyTokenAuthority.sol\":11333:11639  function getRemainingDailyLimit(address user) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_428:\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"contracts/StudyTokenAuthority.sol\":781:16125  contract StudyTokenAuthority is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n    stop\n    data_4658cf08a262e480393dabba07386ca79693a9006e5771833f0bff835a390a33 36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf\n    data_929dbb561b9d63c85f276cf30ab68486b85d32850e15665292944eceb9d2ca1d 09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3\n\n    auxdata: 0xa2646970667358221220c7efff7c1ceaf82489345f71c2ec2f33c9d010e0aaeff1225d4e8de70d53200164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608034620001eb57601f6200197538819003918201601f1916830191906001600160401b03831184841017620001ef578160809285926040958652833981010312620001eb57620000508262000203565b916200005f6020820162000203565b9060606200006f84830162000203565b9101516001600160a01b03948516949092908515620001d4575f54928160018060a01b03199388858716175f558882895197167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3603261ffff19600854161760085516938415620001925750169182156200014e57816001541617600155818160035416176003556002541617600255600655815f526004602052805f20600160ff1982541617905551907f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6515f80a261175c9081620002198239f35b845162461bcd60e51b815260206004820152601660248201527f496e76616c6964206b65726e656c2061646472657373000000000000000000006044820152606490fd5b62461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b8451631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b0382168203620001eb5756fe604060808152600480361015610013575f80fd5b5f3560e01c908163177c49a714610b6757816317a08ca614610b35578163207cbfa214610aef578163360cf54a14610ab85781633e6968b614610a9957816341196faf14610a415781634aea318e146109d457816359fe2da4146109b3578163612b53321461098e57816367561d93146108ca5781636dffcd001461082f5781636e861c0e14610779578163715018a61461072257816373173a35146106fa57816377865f91146106d557816388616538146106575781638da5cb5b14610630578163a7481b5b14610608578163b09a8a04146105bc578163b187bd2614610596578163b6fa284d14610556578163b8db8ca8146104a3578163bebbcfe614610484578163bedb86fb1461041e578163c76b088814610400578163d3893b47146103bc578163d4aae0c414610394578163d5b9221b1461035a578163d8817cd41461031c578163ea0d5dcd14610298578163ec37d2591461026c578163f2fde38b146101e4575063f64d219014610188575f80fd5b346101e0576101a660809161019c36610cdb565b81839592956111f6565b916101c560ff6101be81806008541696168097610fb2565b0492611674565b82111592815194808652101560208501528301526060820152f35b5f80fd5b9050346101e05760203660031901126101e0576101ff610bd7565b906102086116bb565b6001600160a01b039182169283156102565750505f54826001600160601b0360a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b905f6024925191631e4fbdf760e01b8352820152fd5b82346101e05760203660031901126101e05760209061029161028c610bd7565b611674565b9051908152f35b82346101e05760203660031901126101e0576080906102b5610bd7565b6102be816113b5565b9160018060a01b0382165f526007602052805f206201518042045f526020526102ea815f205492611674565b9060ff60085460081c16159283610312575b8151948552602085015283015215156060820152f35b82151593506102fc565b82346101e05760209061035161033136610cdb565b9161033a6116bb565b61034c60ff60085460081c1615610f71565b6113dc565b90519015158152f35b82346101e05760203660031901126101e0576020916001600160a01b0361037f610bd7565b165f52825260ff815f20541690519015158152f35b82346101e0575f3660031901126101e05760025490516001600160a01b039091168152602090f35b82346101e05760203660031901126101e0576020906001600160a01b036103e1610bd7565b165f5260078252805f206201518042045f528252805f20549051908152f35b82346101e0575f3660031901126101e0576020906006549051908152f35b9050346101e05760203660031901126101e05735908115158092036101e0577fef37df9624f797913e7585c7f7b5d004ba6704be3c64b0561c157728ccc869859160209161046a6116bb565b6008805461ff00191683821b61ff001617905551908152a1005b346101e05760203660031901126101e05761049d6116bb565b35600655005b82346101e05760203660031901126101e057813560ff81168091036101e0576104ca6116bb565b60ff8111610513577f2dcd482f94838c55db1e931fa73dc7acd9b385d4a501a9b5a6210f8ae89a372b9250600854908060ff1983161760085560ff8351921682526020820152a1005b815162461bcd60e51b8152602081850152601860248201527f5468726573686f6c64206d757374206265203c3d2032353500000000000000006044820152606490fd5b82346101e057806003193601126101e0576020906001600160a01b0361057a610bd7565b165f5260078252805f206024355f528252805f20549051908152f35b82346101e0575f3660031901126101e05760209060ff60085460081c1690519015158152f35b346101e05760203660031901126101e0576105d5610bd7565b6105dd6116bb565b6001600160a01b03166105f1811515610d21565b6001600160601b0360a01b60015416176001555f80f35b82346101e0575f3660031901126101e05760015490516001600160a01b039091168152602090f35b82346101e0575f3660031901126101e0575f5490516001600160a01b039091168152602090f35b346101e05760203660031901126101e057610670610bd7565b6106786116bb565b6001600160a01b039081169061068f821515610d21565b600354826001600160601b0360a01b81818416176003556002541617600255167f03cab297d17e50b1fab60fc2a2b1117f96c766e15cac2988ecb7ec1abb578cfc5f80a3005b82346101e05760203660031901126101e0576020906102916106f5610bd7565b6113b5565b82346101e0575f3660031901126101e05760035490516001600160a01b039091168152602090f35b346101e0575f3660031901126101e05761073a6116bb565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b82346101e05760203660031901126101e057610793610bd7565b61079b6116bb565b60018060a01b031691825f528060205260ff825f205416156107ed57825f526020525f2060ff1981541690557f54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a5f80a2005b6020606492519162461bcd60e51b8352820152601760248201527f436f6e7472616374206e6f7420617574686f72697a65640000000000000000006044820152fd5b82346101e05760803660031901126101e057610849610bd7565b916001600160a01b0390602435828116036101e0576064359367ffffffffffffffff85116101e0576108a26103519361088760209736908601610c85565b93335f52875260ff865f2054169081156108bd575b50610e17565b6108b460ff60085460081c1615610f71565b604435906112ba565b90505f541633148761089c565b82346101e05760203660031901126101e0576108e4610bd7565b6108ec6116bb565b6001600160a01b031691610901831515610d21565b825f528060205260ff825f20541661094c57825f526020525f20600160ff198254161790557f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6515f80a2005b6020606492519162461bcd60e51b8352820152601b60248201527f436f6e747261637420616c726561647920617574686f72697a656400000000006044820152fd5b82346101e05760209060ff6109ab6109a536610cdb565b916111f6565b915191168152f35b82346101e0575f3660031901126101e05760209060ff600854169051908152f35b9050346101e057610a20906109e836610cdb565b92919091335f5260205260ff855f2054168015610a2e575b610a0990610e17565b610a1b60ff60085460081c1615610f71565b610fc5565b825191151582526020820152f35b505f546001600160a01b03163314610a00565b82346101e057806003193601126101e057610351602092610a60610bd7565b90335f52845260ff835f2054168015610a86575b610a7d90610e17565b60243590610e84565b505f546001600160a01b03163314610a74565b82346101e0575f3660031901126101e057602090516201518042048152f35b82346101e05760203660031901126101e0576020906001600160a01b03610add610bd7565b165f5260058252805f20549051908152f35b82346101e057806003193601126101e057610b31610b17610b0e610bd7565b60243590610d5f565b839291925193849315158452806020850152830190610c0e565b0390f35b9050346101e05760203660031901126101e057359060ff82168092036101e05760209160ff6008541611159051908152f35b82346101e057806003193601126101e0577fc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa366020610ba3610bd7565b60243590610baf6116bb565b6001600160a01b031693610bc4851515610d21565b845f526005835281815f205551908152a2005b600435906001600160a01b03821682036101e057565b5f5b838110610bfe5750505f910152565b8181015183820152602001610bef565b90602091610c2781518092818552858086019101610bed565b601f01601f1916010190565b6040810190811067ffffffffffffffff821117610c4f57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610c4f57604052565b81601f820112156101e05780359067ffffffffffffffff8211610c4f5760405192610cba601f8401601f191660200185610c63565b828452602083830101116101e057815f926020809301838601378301015290565b60606003198201126101e0576004356001600160a01b03811681036101e05791602435916044359067ffffffffffffffff82116101e057610d1e91600401610c85565b90565b15610d2857565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60ff60085460081c16610de557610d7590611674565b10610daa57600190604051610d8981610c33565b601181527013dc195c985d1a5bdb88185b1b1bddd959607a1b602082015290565b5f90604051610db881610c33565b601881527f496e73756666696369656e74206461696c79206c696d69740000000000000000602082015290565b50505f90604051610df581610c33565b601281527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b602082015290565b15610e1e57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420636f6e74726163740000000000000000006044820152606490fd5b91908201809211610e7057565b634e487b7160e01b5f52601160045260245ffd5b9062015180420491610e95816113b5565b9060018060a01b031692835f526007602052604091825f20825f52602052825f205490610ec28583610e63565b11610f23576080928492610ee65f8051602061170783398151915296600a94610e63565b90875f526007602052825f20905f52602052815f20558051928352806020840152820152690e6d2dae0d8ca82eae8d60b31b6060820152a2600190565b5050519081526040602082018190526014908201527311185a5b1e481b1a5b5a5d08195e18d95959195960621b60608201525f805160206116e78339815191529080608081015b0390a25f90565b15610f7857565b60405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b6044820152606490fd5b81810292918115918404141715610e7057565b9291610fd29082856111f6565b6040805183815260ff831660208201526001600160a01b038616939192919084907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908590a260ff8060085416921691821061110e5760ff9161103491610fb2565b0493611045620151804204916113b5565b835f526007602052825f20825f52602052825f2054906110658783610e63565b116110c15791608091611086875f8051602061170783398151915295610e63565b90855f526007602052825f20905f52602052815f20556004815191878352806020840152820152631b5a5b9d60e21b6060820152a260019190565b5050519283526040602084018190526014908401527311185a5b1e481b1a5b5a5d08195e18d95959195960621b606084015290915f805160206116e783398151915290608090a25f905f90565b90505f805160206116e78339815191529293945060228260a093519283528060208401528201527f416c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f6060820152611b1960f21b6080820152a25f905f90565b5f9060033d1161117957565b905060045f803e5f5160e01c90565b5f60443d10610d1e57604051600319913d83016004833e815167ffffffffffffffff918282113d6024840111176111e5578184019485519384116111ed573d850101602084870101116111e55750610d1e92910160200190610c63565b949350505050565b50949350505050565b6002546040516374b9e5b160e01b81526001600160a01b03928316600482015260248101939093526060604484015291926020928492169082908190611240906064830190610c0e565b03915afa5f918161127c575b50610d1e575061125a61116d565b6308c379a014611268575f90565b611270611188565b611278575f90565b5f90565b9091506020813d6020116112b2575b8161129860209383610c63565b810103126101e0575160ff811681036101e057905f61124c565b3d915061128b565b916112c69082846111f6565b6040805183815260ff831660208201526001600160a01b03949094169390919084907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908490a260ff8060085416911610611354575f805160206117078339815191529160088260809351928352806020840152820152673a3930b739b332b960c11b6060820152a2600190565b5f805160206116e783398151915291602b8260a093519283528060208401528201527f5472616e7366657220616c6c6f636174696f6e2062656c6f77206d696e696d7560608201526a1b481d1a1c995cda1bdb1960aa1b6080820152a25f90565b6001600160a01b03165f9081526005602052604090205480156113d55790565b5060065490565b916113e89082846111f6565b6040805183815260ff831660208201526001600160a01b039485169491929085907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908590a260ff806008541691169081106116155761144c60ff915f9495610fb2565b04906001541692805193634d24848760e11b85528560048601528260248601528460448160209687945af15f94816115dd575b5061154e575f805160206116e7833981519152935061149c61116d565b6308c379a0146114e4575b8080608094601a93519485528401528201527f4d696e74206661696c65643a20556e6b6e6f776e206572726f720000000000006060820152a25f90565b6114ec611188565b806114f757506114a7565b8161153b602d610f6a945180946c026b4b73a103330b4b632b21d1609d1b8983015261152b815180928b8686019101610bed565b810103600d810185520183610c63565b8080519586958652850152830190610c0e565b9190925f146115915791600a82805f80516020611707833981519152956080955194855284015282015269191a5c9958dd135a5b9d60b21b6060820152a2600190565b91601b82805f805160206116e783398151915295608095519485528401528201527f4d696e74206661696c65643a2072657475726e65642066616c736500000000006060820152a25f90565b9094508381813d831161160e575b6115f58183610c63565b810103126101e0575180151581036101e057935f61147f565b503d6115eb565b50505f805160206116e78339815191529160278260a093519283528060208401528201527f4d696e7420616c6c6f636174696f6e2062656c6f77206d696e696d756d2074686060820152661c995cda1bdb1960ca1b6080820152a25f90565b60018060a01b0381165f52600760205260405f206201518042045f526020526116a160405f2054916113b5565b908181106116af5750505f90565b8103908111610e705790565b5f546001600160a01b031633036116ce57565b60405163118cdaa760e01b8152336004820152602490fdfe36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3a2646970667358221220c7efff7c1ceaf82489345f71c2ec2f33c9d010e0aaeff1225d4e8de70d53200164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH3 0x1EB JUMPI PUSH1 0x1F PUSH3 0x1975 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x1EF JUMPI DUP2 PUSH1 0x80 SWAP3 DUP6 SWAP3 PUSH1 0x40 SWAP6 DUP7 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1EB JUMPI PUSH3 0x50 DUP3 PUSH3 0x203 JUMP JUMPDEST SWAP2 PUSH3 0x5F PUSH1 0x20 DUP3 ADD PUSH3 0x203 JUMP JUMPDEST SWAP1 PUSH1 0x60 PUSH3 0x6F DUP5 DUP4 ADD PUSH3 0x203 JUMP JUMPDEST SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP3 SWAP1 DUP6 ISZERO PUSH3 0x1D4 JUMPI PUSH0 SLOAD SWAP3 DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP9 DUP6 DUP8 AND OR PUSH0 SSTORE DUP9 DUP3 DUP10 MLOAD SWAP8 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x32 PUSH2 0xFFFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND SWAP4 DUP5 ISZERO PUSH3 0x192 JUMPI POP AND SWAP2 DUP3 ISZERO PUSH3 0x14E JUMPI DUP2 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP2 DUP2 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x6 SSTORE DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 PUSH0 DUP1 LOG2 PUSH2 0x175C SWAP1 DUP2 PUSH3 0x219 DUP3 CODECOPY RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B65726E656C206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1EB JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x177C49A7 EQ PUSH2 0xB67 JUMPI DUP2 PUSH4 0x17A08CA6 EQ PUSH2 0xB35 JUMPI DUP2 PUSH4 0x207CBFA2 EQ PUSH2 0xAEF JUMPI DUP2 PUSH4 0x360CF54A EQ PUSH2 0xAB8 JUMPI DUP2 PUSH4 0x3E6968B6 EQ PUSH2 0xA99 JUMPI DUP2 PUSH4 0x41196FAF EQ PUSH2 0xA41 JUMPI DUP2 PUSH4 0x4AEA318E EQ PUSH2 0x9D4 JUMPI DUP2 PUSH4 0x59FE2DA4 EQ PUSH2 0x9B3 JUMPI DUP2 PUSH4 0x612B5332 EQ PUSH2 0x98E JUMPI DUP2 PUSH4 0x67561D93 EQ PUSH2 0x8CA JUMPI DUP2 PUSH4 0x6DFFCD00 EQ PUSH2 0x82F JUMPI DUP2 PUSH4 0x6E861C0E EQ PUSH2 0x779 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0x73173A35 EQ PUSH2 0x6FA JUMPI DUP2 PUSH4 0x77865F91 EQ PUSH2 0x6D5 JUMPI DUP2 PUSH4 0x88616538 EQ PUSH2 0x657 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x630 JUMPI DUP2 PUSH4 0xA7481B5B EQ PUSH2 0x608 JUMPI DUP2 PUSH4 0xB09A8A04 EQ PUSH2 0x5BC JUMPI DUP2 PUSH4 0xB187BD26 EQ PUSH2 0x596 JUMPI DUP2 PUSH4 0xB6FA284D EQ PUSH2 0x556 JUMPI DUP2 PUSH4 0xB8DB8CA8 EQ PUSH2 0x4A3 JUMPI DUP2 PUSH4 0xBEBBCFE6 EQ PUSH2 0x484 JUMPI DUP2 PUSH4 0xBEDB86FB EQ PUSH2 0x41E JUMPI DUP2 PUSH4 0xC76B0888 EQ PUSH2 0x400 JUMPI DUP2 PUSH4 0xD3893B47 EQ PUSH2 0x3BC JUMPI DUP2 PUSH4 0xD4AAE0C4 EQ PUSH2 0x394 JUMPI DUP2 PUSH4 0xD5B9221B EQ PUSH2 0x35A JUMPI DUP2 PUSH4 0xD8817CD4 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0xEA0D5DCD EQ PUSH2 0x298 JUMPI DUP2 PUSH4 0xEC37D259 EQ PUSH2 0x26C JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1E4 JUMPI POP PUSH4 0xF64D2190 EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH2 0x1A6 PUSH1 0x80 SWAP2 PUSH2 0x19C CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST DUP2 DUP4 SWAP6 SWAP3 SWAP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP2 PUSH2 0x1C5 PUSH1 0xFF PUSH2 0x1BE DUP2 DUP1 PUSH1 0x8 SLOAD AND SWAP7 AND DUP1 SWAP8 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP3 PUSH2 0x1674 JUMP JUMPDEST DUP3 GT ISZERO SWAP3 DUP2 MLOAD SWAP5 DUP1 DUP7 MSTORE LT ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x1FF PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x208 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x256 JUMPI POP POP PUSH0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH0 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x291 PUSH2 0x28C PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x80 SWAP1 PUSH2 0x2B5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x2BE DUP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x2EA DUP2 PUSH0 KECCAK256 SLOAD SWAP3 PUSH2 0x1674 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 PUSH2 0x312 JUMPI JUMPDEST DUP2 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 ISZERO ISZERO SWAP4 POP PUSH2 0x2FC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x351 PUSH2 0x331 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP2 PUSH2 0x33A PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x34C PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x37F PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E1 PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1E0 JUMPI PUSH32 0xEF37DF9624F797913E7585C7F7B5D004BA6704BE3C64B0561C157728CCC86985 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x46A PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP4 DUP3 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x49D PUSH2 0x16BB JUMP JUMPDEST CALLDATALOAD PUSH1 0x6 SSTORE STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1E0 JUMPI PUSH2 0x4CA PUSH2 0x16BB JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x513 JUMPI PUSH32 0x2DCD482F94838C55DB1E931FA73DC7ACD9B385D4A501A9B5A6210F8AE89A372B SWAP3 POP PUSH1 0x8 SLOAD SWAP1 DUP1 PUSH1 0xFF NOT DUP4 AND OR PUSH1 0x8 SSTORE PUSH1 0xFF DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468726573686F6C64206D757374206265203C3D203235350000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x57A PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x5D5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5F1 DUP2 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH0 DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x670 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x678 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x68F DUP3 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 DUP2 DUP5 AND OR PUSH1 0x3 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND PUSH32 0x3CAB297D17E50B1FAB60FC2A2B1117F96C766E15CAC2988ECB7EC1ABB578CFC PUSH0 DUP1 LOG3 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x291 PUSH2 0x6F5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x13B5 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x73A PUSH2 0x16BB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x793 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x79B PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7ED JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x849 PUSH2 0xBD7 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SUB PUSH2 0x1E0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1E0 JUMPI PUSH2 0x8A2 PUSH2 0x351 SWAP4 PUSH2 0x887 PUSH1 0x20 SWAP8 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP4 CALLER PUSH0 MSTORE DUP8 MSTORE PUSH1 0xFF DUP7 PUSH0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x8BD JUMPI JUMPDEST POP PUSH2 0xE17 JUMP JUMPDEST PUSH2 0x8B4 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH0 SLOAD AND CALLER EQ DUP8 PUSH2 0x89C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x8E4 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x8EC PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x901 DUP4 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST DUP3 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0x94C JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x9AB PUSH2 0x9A5 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP2 PUSH2 0x11F6 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH2 0xA20 SWAP1 PUSH2 0x9E8 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 PUSH0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA2E JUMPI JUMPDEST PUSH2 0xA09 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xA1B PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA00 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x351 PUSH1 0x20 SWAP3 PUSH2 0xA60 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 CALLER PUSH0 MSTORE DUP5 MSTORE PUSH1 0xFF DUP4 PUSH0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA86 JUMPI JUMPDEST PUSH2 0xA7D SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE84 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA74 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xADD PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xB31 PUSH2 0xB17 PUSH2 0xB0E PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD5F JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 ISZERO ISZERO DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND GT ISZERO SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH32 0xC1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36 PUSH1 0x20 PUSH2 0xBA3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBAF PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH2 0xBC4 DUP6 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP2 PUSH0 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xBFE JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xC27 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1E0 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCBA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xC63 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1E0 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1E0 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E0 JUMPI PUSH2 0xD1E SWAP2 PUSH1 0x4 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xD28 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xDE5 JUMPI PUSH2 0xD75 SWAP1 PUSH2 0x1674 JUMP JUMPDEST LT PUSH2 0xDAA JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xD89 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH17 0x13DC195C985D1A5BDB88185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDB8 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x496E73756666696369656E74206461696C79206C696D69740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDF5 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE1E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420636F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE70 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH3 0x15180 TIMESTAMP DIV SWAP2 PUSH2 0xE95 DUP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0xEC2 DUP6 DUP4 PUSH2 0xE63 JUMP JUMPDEST GT PUSH2 0xF23 JUMPI PUSH1 0x80 SWAP3 DUP5 SWAP3 PUSH2 0xEE6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH1 0xA SWAP5 PUSH2 0xE63 JUMP JUMPDEST SWAP1 DUP8 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH10 0xE6D2DAE0D8CA82EAE8D PUSH1 0xB3 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x11185A5B1E481B1A5B5A5D08195E18D959591959 PUSH1 0x62 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 PUSH1 0x80 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xF78 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xE70 JUMPI JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0xFD2 SWAP1 DUP3 DUP6 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP6 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP3 AND SWAP2 DUP3 LT PUSH2 0x110E JUMPI PUSH1 0xFF SWAP2 PUSH2 0x1034 SWAP2 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP4 PUSH2 0x1045 PUSH3 0x15180 TIMESTAMP DIV SWAP2 PUSH2 0x13B5 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x1065 DUP8 DUP4 PUSH2 0xE63 JUMP JUMPDEST GT PUSH2 0x10C1 JUMPI SWAP2 PUSH1 0x80 SWAP2 PUSH2 0x1086 DUP8 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH2 0xE63 JUMP JUMPDEST SWAP1 DUP6 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SSTORE PUSH1 0x4 DUP2 MLOAD SWAP2 DUP8 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP5 ADD MSTORE PUSH20 0x11185A5B1E481B1A5B5A5D08195E18D959591959 PUSH1 0x62 SHL PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x80 SWAP1 LOG2 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP4 SWAP5 POP PUSH1 0x22 DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2062656C6F77206D696E696D756D207468726573686F PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B19 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1179 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY PUSH0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x11E5 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x11ED JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x11E5 JUMPI POP PUSH2 0xD1E SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x74B9E5B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x1240 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x127C JUMPI JUMPDEST POP PUSH2 0xD1E JUMPI POP PUSH2 0x125A PUSH2 0x116D JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x1268 JUMPI PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1270 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x1278 JUMPI PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12B2 JUMPI JUMPDEST DUP2 PUSH2 0x1298 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E0 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1E0 JUMPI SWAP1 PUSH0 PUSH2 0x124C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x128B JUMP JUMPDEST SWAP2 PUSH2 0x12C6 SWAP1 DUP3 DUP5 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP5 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP2 AND LT PUSH2 0x1354 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x8 DUP3 PUSH1 0x80 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH8 0x3A3930B739B332B9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x2B DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616C6C6F636174696F6E2062656C6F77206D696E696D75 PUSH1 0x60 DUP3 ADD MSTORE PUSH11 0x1B481D1A1C995CDA1BDB19 PUSH1 0xAA SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x13D5 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x13E8 SWAP1 DUP3 DUP5 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP2 SWAP3 SWAP1 DUP6 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP6 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP2 AND SWAP1 DUP2 LT PUSH2 0x1615 JUMPI PUSH2 0x144C PUSH1 0xFF SWAP2 PUSH0 SWAP5 SWAP6 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP1 PUSH1 0x1 SLOAD AND SWAP3 DUP1 MLOAD SWAP4 PUSH4 0x4D248487 PUSH1 0xE1 SHL DUP6 MSTORE DUP6 PUSH1 0x4 DUP7 ADD MSTORE DUP3 PUSH1 0x24 DUP7 ADD MSTORE DUP5 PUSH1 0x44 DUP2 PUSH1 0x20 SWAP7 DUP8 SWAP5 GAS CALL PUSH0 SWAP5 DUP2 PUSH2 0x15DD JUMPI JUMPDEST POP PUSH2 0x154E JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH2 0x149C PUSH2 0x116D JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x14E4 JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x80 SWAP5 PUSH1 0x1A SWAP4 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74206661696C65643A20556E6B6E6F776E206572726F72000000000000 PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x14EC PUSH2 0x1188 JUMP JUMPDEST DUP1 PUSH2 0x14F7 JUMPI POP PUSH2 0x14A7 JUMP JUMPDEST DUP2 PUSH2 0x153B PUSH1 0x2D PUSH2 0xF6A SWAP5 MLOAD DUP1 SWAP5 PUSH13 0x26B4B73A103330B4B632B21D1 PUSH1 0x9D SHL DUP10 DUP4 ADD MSTORE PUSH2 0x152B DUP2 MLOAD DUP1 SWAP3 DUP12 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH0 EQ PUSH2 0x1591 JUMPI SWAP2 PUSH1 0xA DUP3 DUP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH1 0x80 SWAP6 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH10 0x191A5C9958DD135A5B9D PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1B DUP3 DUP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH1 0x80 SWAP6 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74206661696C65643A2072657475726E65642066616C73650000000000 PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x160E JUMPI JUMPDEST PUSH2 0x15F5 DUP2 DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E0 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1E0 JUMPI SWAP4 PUSH0 PUSH2 0x147F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x15EB JUMP JUMPDEST POP POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x27 DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420616C6C6F636174696F6E2062656C6F77206D696E696D756D207468 PUSH1 0x60 DUP3 ADD MSTORE PUSH7 0x1C995CDA1BDB19 PUSH1 0xCA SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x16A1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT PUSH2 0x16AF JUMPI POP POP PUSH0 SWAP1 JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0xE70 JUMPI SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x16CE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID CALLDATASIZE 0xE6 SWAP1 0xC5 0xF8 0xD LOG3 0xF9 0xDA LT 0xE9 JUMPI DELEGATECALL 0x2F 0xAC DUP10 0xE3 REVERT 0xE7 PUSH19 0x861FFE24E95169AEDDA4E8BF09E7E318D9FDE6 CREATE 0xE5 0xCB 0xB2 COINBASE DUP11 POP 0x24 TLOAD KECCAK256 PUSH4 0xCE96946E 0x27 GT 0xC3 DUP15 SWAP13 0x2B BALANCE 0x27 0xE9 0xB3 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEF SELFDESTRUCT PUSH29 0x1CEAF82489345F71C2EC2F33C9D010E0AAEFF1225D4E8DE70D53200164 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "781:15344:2:-:0;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;781:15344:2;;;;;;;;;;;;;;;-1:-1:-1;781:15344:2;;;;;;;3052:40:0;-1:-1:-1;3052:40:0;;1569:2:2;781:15344;;1569:2;781:15344;;;1569:2;781:15344;;3398:32;;;781:15344;;;;3474:28;;;781:15344;;;;;;;;;;;3672:30;781:15344;;;3672:30;781:15344;3712:47;781:15344;;;3712:47;781:15344;3769:38;781:15344;;-1:-1:-1;781:15344:2;3874:19;781:15344;;;-1:-1:-1;781:15344:2;;;;;;;;;;;3929:32;;-1:-1:-1;3929:32:2;;781:15344;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;;;;;;;;;1269:95:0;781:15344:2;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;781:15344:2;;;1322:31:0;781:15344:2;-1:-1:-1;781:15344:2;;;;;;-1:-1:-1;781:15344:2;;;;;-1:-1:-1;781:15344:2;;;;-1:-1:-1;;;;;781:15344:2;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_uint256t_bytes": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_bytes": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_stringliteral_9bd0": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_18923": {
									"entryPoint": 3123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_authorizeMint_inner": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"fun_authorizeSimple_inner": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_authorizeTransfer_inner": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_canUserOperate": {
									"entryPoint": 3423,
									"id": 1159,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"fun_checkOwner": {
									"entryPoint": 5819,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getKernelRecommendation": {
									"entryPoint": 4598,
									"id": 449,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_getRemainingDailyLimit": {
									"entryPoint": 5748,
									"id": 883,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_getUserDailyLimit": {
									"entryPoint": 5045,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_mintWithKernel_inner": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_05d2": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e556": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "604060808152600480361015610013575f80fd5b5f3560e01c908163177c49a714610b6757816317a08ca614610b35578163207cbfa214610aef578163360cf54a14610ab85781633e6968b614610a9957816341196faf14610a415781634aea318e146109d457816359fe2da4146109b3578163612b53321461098e57816367561d93146108ca5781636dffcd001461082f5781636e861c0e14610779578163715018a61461072257816373173a35146106fa57816377865f91146106d557816388616538146106575781638da5cb5b14610630578163a7481b5b14610608578163b09a8a04146105bc578163b187bd2614610596578163b6fa284d14610556578163b8db8ca8146104a3578163bebbcfe614610484578163bedb86fb1461041e578163c76b088814610400578163d3893b47146103bc578163d4aae0c414610394578163d5b9221b1461035a578163d8817cd41461031c578163ea0d5dcd14610298578163ec37d2591461026c578163f2fde38b146101e4575063f64d219014610188575f80fd5b346101e0576101a660809161019c36610cdb565b81839592956111f6565b916101c560ff6101be81806008541696168097610fb2565b0492611674565b82111592815194808652101560208501528301526060820152f35b5f80fd5b9050346101e05760203660031901126101e0576101ff610bd7565b906102086116bb565b6001600160a01b039182169283156102565750505f54826001600160601b0360a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b905f6024925191631e4fbdf760e01b8352820152fd5b82346101e05760203660031901126101e05760209061029161028c610bd7565b611674565b9051908152f35b82346101e05760203660031901126101e0576080906102b5610bd7565b6102be816113b5565b9160018060a01b0382165f526007602052805f206201518042045f526020526102ea815f205492611674565b9060ff60085460081c16159283610312575b8151948552602085015283015215156060820152f35b82151593506102fc565b82346101e05760209061035161033136610cdb565b9161033a6116bb565b61034c60ff60085460081c1615610f71565b6113dc565b90519015158152f35b82346101e05760203660031901126101e0576020916001600160a01b0361037f610bd7565b165f52825260ff815f20541690519015158152f35b82346101e0575f3660031901126101e05760025490516001600160a01b039091168152602090f35b82346101e05760203660031901126101e0576020906001600160a01b036103e1610bd7565b165f5260078252805f206201518042045f528252805f20549051908152f35b82346101e0575f3660031901126101e0576020906006549051908152f35b9050346101e05760203660031901126101e05735908115158092036101e0577fef37df9624f797913e7585c7f7b5d004ba6704be3c64b0561c157728ccc869859160209161046a6116bb565b6008805461ff00191683821b61ff001617905551908152a1005b346101e05760203660031901126101e05761049d6116bb565b35600655005b82346101e05760203660031901126101e057813560ff81168091036101e0576104ca6116bb565b60ff8111610513577f2dcd482f94838c55db1e931fa73dc7acd9b385d4a501a9b5a6210f8ae89a372b9250600854908060ff1983161760085560ff8351921682526020820152a1005b815162461bcd60e51b8152602081850152601860248201527f5468726573686f6c64206d757374206265203c3d2032353500000000000000006044820152606490fd5b82346101e057806003193601126101e0576020906001600160a01b0361057a610bd7565b165f5260078252805f206024355f528252805f20549051908152f35b82346101e0575f3660031901126101e05760209060ff60085460081c1690519015158152f35b346101e05760203660031901126101e0576105d5610bd7565b6105dd6116bb565b6001600160a01b03166105f1811515610d21565b6001600160601b0360a01b60015416176001555f80f35b82346101e0575f3660031901126101e05760015490516001600160a01b039091168152602090f35b82346101e0575f3660031901126101e0575f5490516001600160a01b039091168152602090f35b346101e05760203660031901126101e057610670610bd7565b6106786116bb565b6001600160a01b039081169061068f821515610d21565b600354826001600160601b0360a01b81818416176003556002541617600255167f03cab297d17e50b1fab60fc2a2b1117f96c766e15cac2988ecb7ec1abb578cfc5f80a3005b82346101e05760203660031901126101e0576020906102916106f5610bd7565b6113b5565b82346101e0575f3660031901126101e05760035490516001600160a01b039091168152602090f35b346101e0575f3660031901126101e05761073a6116bb565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b82346101e05760203660031901126101e057610793610bd7565b61079b6116bb565b60018060a01b031691825f528060205260ff825f205416156107ed57825f526020525f2060ff1981541690557f54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a5f80a2005b6020606492519162461bcd60e51b8352820152601760248201527f436f6e7472616374206e6f7420617574686f72697a65640000000000000000006044820152fd5b82346101e05760803660031901126101e057610849610bd7565b916001600160a01b0390602435828116036101e0576064359367ffffffffffffffff85116101e0576108a26103519361088760209736908601610c85565b93335f52875260ff865f2054169081156108bd575b50610e17565b6108b460ff60085460081c1615610f71565b604435906112ba565b90505f541633148761089c565b82346101e05760203660031901126101e0576108e4610bd7565b6108ec6116bb565b6001600160a01b031691610901831515610d21565b825f528060205260ff825f20541661094c57825f526020525f20600160ff198254161790557f8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff6515f80a2005b6020606492519162461bcd60e51b8352820152601b60248201527f436f6e747261637420616c726561647920617574686f72697a656400000000006044820152fd5b82346101e05760209060ff6109ab6109a536610cdb565b916111f6565b915191168152f35b82346101e0575f3660031901126101e05760209060ff600854169051908152f35b9050346101e057610a20906109e836610cdb565b92919091335f5260205260ff855f2054168015610a2e575b610a0990610e17565b610a1b60ff60085460081c1615610f71565b610fc5565b825191151582526020820152f35b505f546001600160a01b03163314610a00565b82346101e057806003193601126101e057610351602092610a60610bd7565b90335f52845260ff835f2054168015610a86575b610a7d90610e17565b60243590610e84565b505f546001600160a01b03163314610a74565b82346101e0575f3660031901126101e057602090516201518042048152f35b82346101e05760203660031901126101e0576020906001600160a01b03610add610bd7565b165f5260058252805f20549051908152f35b82346101e057806003193601126101e057610b31610b17610b0e610bd7565b60243590610d5f565b839291925193849315158452806020850152830190610c0e565b0390f35b9050346101e05760203660031901126101e057359060ff82168092036101e05760209160ff6008541611159051908152f35b82346101e057806003193601126101e0577fc1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa366020610ba3610bd7565b60243590610baf6116bb565b6001600160a01b031693610bc4851515610d21565b845f526005835281815f205551908152a2005b600435906001600160a01b03821682036101e057565b5f5b838110610bfe5750505f910152565b8181015183820152602001610bef565b90602091610c2781518092818552858086019101610bed565b601f01601f1916010190565b6040810190811067ffffffffffffffff821117610c4f57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610c4f57604052565b81601f820112156101e05780359067ffffffffffffffff8211610c4f5760405192610cba601f8401601f191660200185610c63565b828452602083830101116101e057815f926020809301838601378301015290565b60606003198201126101e0576004356001600160a01b03811681036101e05791602435916044359067ffffffffffffffff82116101e057610d1e91600401610c85565b90565b15610d2857565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60ff60085460081c16610de557610d7590611674565b10610daa57600190604051610d8981610c33565b601181527013dc195c985d1a5bdb88185b1b1bddd959607a1b602082015290565b5f90604051610db881610c33565b601881527f496e73756666696369656e74206461696c79206c696d69740000000000000000602082015290565b50505f90604051610df581610c33565b601281527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b602082015290565b15610e1e57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420636f6e74726163740000000000000000006044820152606490fd5b91908201809211610e7057565b634e487b7160e01b5f52601160045260245ffd5b9062015180420491610e95816113b5565b9060018060a01b031692835f526007602052604091825f20825f52602052825f205490610ec28583610e63565b11610f23576080928492610ee65f8051602061170783398151915296600a94610e63565b90875f526007602052825f20905f52602052815f20558051928352806020840152820152690e6d2dae0d8ca82eae8d60b31b6060820152a2600190565b5050519081526040602082018190526014908201527311185a5b1e481b1a5b5a5d08195e18d95959195960621b60608201525f805160206116e78339815191529080608081015b0390a25f90565b15610f7857565b60405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b6044820152606490fd5b81810292918115918404141715610e7057565b9291610fd29082856111f6565b6040805183815260ff831660208201526001600160a01b038616939192919084907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908590a260ff8060085416921691821061110e5760ff9161103491610fb2565b0493611045620151804204916113b5565b835f526007602052825f20825f52602052825f2054906110658783610e63565b116110c15791608091611086875f8051602061170783398151915295610e63565b90855f526007602052825f20905f52602052815f20556004815191878352806020840152820152631b5a5b9d60e21b6060820152a260019190565b5050519283526040602084018190526014908401527311185a5b1e481b1a5b5a5d08195e18d95959195960621b606084015290915f805160206116e783398151915290608090a25f905f90565b90505f805160206116e78339815191529293945060228260a093519283528060208401528201527f416c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f6060820152611b1960f21b6080820152a25f905f90565b5f9060033d1161117957565b905060045f803e5f5160e01c90565b5f60443d10610d1e57604051600319913d83016004833e815167ffffffffffffffff918282113d6024840111176111e5578184019485519384116111ed573d850101602084870101116111e55750610d1e92910160200190610c63565b949350505050565b50949350505050565b6002546040516374b9e5b160e01b81526001600160a01b03928316600482015260248101939093526060604484015291926020928492169082908190611240906064830190610c0e565b03915afa5f918161127c575b50610d1e575061125a61116d565b6308c379a014611268575f90565b611270611188565b611278575f90565b5f90565b9091506020813d6020116112b2575b8161129860209383610c63565b810103126101e0575160ff811681036101e057905f61124c565b3d915061128b565b916112c69082846111f6565b6040805183815260ff831660208201526001600160a01b03949094169390919084907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908490a260ff8060085416911610611354575f805160206117078339815191529160088260809351928352806020840152820152673a3930b739b332b960c11b6060820152a2600190565b5f805160206116e783398151915291602b8260a093519283528060208401528201527f5472616e7366657220616c6c6f636174696f6e2062656c6f77206d696e696d7560608201526a1b481d1a1c995cda1bdb1960aa1b6080820152a25f90565b6001600160a01b03165f9081526005602052604090205480156113d55790565b5060065490565b916113e89082846111f6565b6040805183815260ff831660208201526001600160a01b039485169491929085907f3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a908590a260ff806008541691169081106116155761144c60ff915f9495610fb2565b04906001541692805193634d24848760e11b85528560048601528260248601528460448160209687945af15f94816115dd575b5061154e575f805160206116e7833981519152935061149c61116d565b6308c379a0146114e4575b8080608094601a93519485528401528201527f4d696e74206661696c65643a20556e6b6e6f776e206572726f720000000000006060820152a25f90565b6114ec611188565b806114f757506114a7565b8161153b602d610f6a945180946c026b4b73a103330b4b632b21d1609d1b8983015261152b815180928b8686019101610bed565b810103600d810185520183610c63565b8080519586958652850152830190610c0e565b9190925f146115915791600a82805f80516020611707833981519152956080955194855284015282015269191a5c9958dd135a5b9d60b21b6060820152a2600190565b91601b82805f805160206116e783398151915295608095519485528401528201527f4d696e74206661696c65643a2072657475726e65642066616c736500000000006060820152a25f90565b9094508381813d831161160e575b6115f58183610c63565b810103126101e0575180151581036101e057935f61147f565b503d6115eb565b50505f805160206116e78339815191529160278260a093519283528060208401528201527f4d696e7420616c6c6f636174696f6e2062656c6f77206d696e696d756d2074686060820152661c995cda1bdb1960ca1b6080820152a25f90565b60018060a01b0381165f52600760205260405f206201518042045f526020526116a160405f2054916113b5565b908181106116af5750505f90565b8103908111610e705790565b5f546001600160a01b031633036116ce57565b60405163118cdaa760e01b8152336004820152602490fdfe36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3a2646970667358221220c7efff7c1ceaf82489345f71c2ec2f33c9d010e0aaeff1225d4e8de70d53200164736f6c63430008180033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x177C49A7 EQ PUSH2 0xB67 JUMPI DUP2 PUSH4 0x17A08CA6 EQ PUSH2 0xB35 JUMPI DUP2 PUSH4 0x207CBFA2 EQ PUSH2 0xAEF JUMPI DUP2 PUSH4 0x360CF54A EQ PUSH2 0xAB8 JUMPI DUP2 PUSH4 0x3E6968B6 EQ PUSH2 0xA99 JUMPI DUP2 PUSH4 0x41196FAF EQ PUSH2 0xA41 JUMPI DUP2 PUSH4 0x4AEA318E EQ PUSH2 0x9D4 JUMPI DUP2 PUSH4 0x59FE2DA4 EQ PUSH2 0x9B3 JUMPI DUP2 PUSH4 0x612B5332 EQ PUSH2 0x98E JUMPI DUP2 PUSH4 0x67561D93 EQ PUSH2 0x8CA JUMPI DUP2 PUSH4 0x6DFFCD00 EQ PUSH2 0x82F JUMPI DUP2 PUSH4 0x6E861C0E EQ PUSH2 0x779 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x722 JUMPI DUP2 PUSH4 0x73173A35 EQ PUSH2 0x6FA JUMPI DUP2 PUSH4 0x77865F91 EQ PUSH2 0x6D5 JUMPI DUP2 PUSH4 0x88616538 EQ PUSH2 0x657 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x630 JUMPI DUP2 PUSH4 0xA7481B5B EQ PUSH2 0x608 JUMPI DUP2 PUSH4 0xB09A8A04 EQ PUSH2 0x5BC JUMPI DUP2 PUSH4 0xB187BD26 EQ PUSH2 0x596 JUMPI DUP2 PUSH4 0xB6FA284D EQ PUSH2 0x556 JUMPI DUP2 PUSH4 0xB8DB8CA8 EQ PUSH2 0x4A3 JUMPI DUP2 PUSH4 0xBEBBCFE6 EQ PUSH2 0x484 JUMPI DUP2 PUSH4 0xBEDB86FB EQ PUSH2 0x41E JUMPI DUP2 PUSH4 0xC76B0888 EQ PUSH2 0x400 JUMPI DUP2 PUSH4 0xD3893B47 EQ PUSH2 0x3BC JUMPI DUP2 PUSH4 0xD4AAE0C4 EQ PUSH2 0x394 JUMPI DUP2 PUSH4 0xD5B9221B EQ PUSH2 0x35A JUMPI DUP2 PUSH4 0xD8817CD4 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0xEA0D5DCD EQ PUSH2 0x298 JUMPI DUP2 PUSH4 0xEC37D259 EQ PUSH2 0x26C JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1E4 JUMPI POP PUSH4 0xF64D2190 EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH2 0x1A6 PUSH1 0x80 SWAP2 PUSH2 0x19C CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST DUP2 DUP4 SWAP6 SWAP3 SWAP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP2 PUSH2 0x1C5 PUSH1 0xFF PUSH2 0x1BE DUP2 DUP1 PUSH1 0x8 SLOAD AND SWAP7 AND DUP1 SWAP8 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP3 PUSH2 0x1674 JUMP JUMPDEST DUP3 GT ISZERO SWAP3 DUP2 MLOAD SWAP5 DUP1 DUP7 MSTORE LT ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x1FF PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x208 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x256 JUMPI POP POP PUSH0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST SWAP1 PUSH0 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x291 PUSH2 0x28C PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x80 SWAP1 PUSH2 0x2B5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x2BE DUP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x2EA DUP2 PUSH0 KECCAK256 SLOAD SWAP3 PUSH2 0x1674 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 PUSH2 0x312 JUMPI JUMPDEST DUP2 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST DUP3 ISZERO ISZERO SWAP4 POP PUSH2 0x2FC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x351 PUSH2 0x331 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP2 PUSH2 0x33A PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x34C PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x37F PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E1 PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1E0 JUMPI PUSH32 0xEF37DF9624F797913E7585C7F7B5D004BA6704BE3C64B0561C157728CCC86985 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x46A PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND DUP4 DUP3 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x49D PUSH2 0x16BB JUMP JUMPDEST CALLDATALOAD PUSH1 0x6 SSTORE STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1E0 JUMPI PUSH2 0x4CA PUSH2 0x16BB JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x513 JUMPI PUSH32 0x2DCD482F94838C55DB1E931FA73DC7ACD9B385D4A501A9B5A6210F8AE89A372B SWAP3 POP PUSH1 0x8 SLOAD SWAP1 DUP1 PUSH1 0xFF NOT DUP4 AND OR PUSH1 0x8 SSTORE PUSH1 0xFF DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468726573686F6C64206D757374206265203C3D203235350000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x57A PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x5D5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5F1 DUP2 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH0 DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x670 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x678 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x68F DUP3 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 DUP2 DUP5 AND OR PUSH1 0x3 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND PUSH32 0x3CAB297D17E50B1FAB60FC2A2B1117F96C766E15CAC2988ECB7EC1ABB578CFC PUSH0 DUP1 LOG3 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x291 PUSH2 0x6F5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x13B5 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x73A PUSH2 0x16BB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x793 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x79B PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7ED JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x849 PUSH2 0xBD7 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SUB PUSH2 0x1E0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1E0 JUMPI PUSH2 0x8A2 PUSH2 0x351 SWAP4 PUSH2 0x887 PUSH1 0x20 SWAP8 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP4 CALLER PUSH0 MSTORE DUP8 MSTORE PUSH1 0xFF DUP7 PUSH0 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x8BD JUMPI JUMPDEST POP PUSH2 0xE17 JUMP JUMPDEST PUSH2 0x8B4 PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH0 SLOAD AND CALLER EQ DUP8 PUSH2 0x89C JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x8E4 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x8EC PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x901 DUP4 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST DUP3 PUSH0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 PUSH0 KECCAK256 SLOAD AND PUSH2 0x94C JUMPI DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651 PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH2 0x9AB PUSH2 0x9A5 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP2 PUSH2 0x11F6 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH2 0xA20 SWAP1 PUSH2 0x9E8 CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 PUSH0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA2E JUMPI JUMPDEST PUSH2 0xA09 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xA1B PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA00 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x351 PUSH1 0x20 SWAP3 PUSH2 0xA60 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 CALLER PUSH0 MSTORE DUP5 MSTORE PUSH1 0xFF DUP4 PUSH0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA86 JUMPI JUMPDEST PUSH2 0xA7D SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE84 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA74 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xADD PUSH2 0xBD7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0xB31 PUSH2 0xB17 PUSH2 0xB0E PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD5F JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 ISZERO ISZERO DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E0 JUMPI CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND GT ISZERO SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1E0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E0 JUMPI PUSH32 0xC1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36 PUSH1 0x20 PUSH2 0xBA3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBAF PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH2 0xBC4 DUP6 ISZERO ISZERO PUSH2 0xD21 JUMP JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x5 DUP4 MSTORE DUP2 DUP2 PUSH0 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xBFE JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xC27 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC4F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1E0 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCBA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xC63 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1E0 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1E0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1E0 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E0 JUMPI PUSH2 0xD1E SWAP2 PUSH1 0x4 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xD28 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xDE5 JUMPI PUSH2 0xD75 SWAP1 PUSH2 0x1674 JUMP JUMPDEST LT PUSH2 0xDAA JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xD89 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH17 0x13DC195C985D1A5BDB88185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDB8 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x496E73756666696369656E74206461696C79206C696D69740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDF5 DUP2 PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE1E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420636F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE70 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH3 0x15180 TIMESTAMP DIV SWAP2 PUSH2 0xE95 DUP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0xEC2 DUP6 DUP4 PUSH2 0xE63 JUMP JUMPDEST GT PUSH2 0xF23 JUMPI PUSH1 0x80 SWAP3 DUP5 SWAP3 PUSH2 0xEE6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH1 0xA SWAP5 PUSH2 0xE63 JUMP JUMPDEST SWAP1 DUP8 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH10 0xE6D2DAE0D8CA82EAE8D PUSH1 0xB3 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x11185A5B1E481B1A5B5A5D08195E18D959591959 PUSH1 0x62 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 PUSH1 0x80 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 PUSH0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xF78 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xE70 JUMPI JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0xFD2 SWAP1 DUP3 DUP6 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP6 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP3 AND SWAP2 DUP3 LT PUSH2 0x110E JUMPI PUSH1 0xFF SWAP2 PUSH2 0x1034 SWAP2 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP4 PUSH2 0x1045 PUSH3 0x15180 TIMESTAMP DIV SWAP2 PUSH2 0x13B5 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x1065 DUP8 DUP4 PUSH2 0xE63 JUMP JUMPDEST GT PUSH2 0x10C1 JUMPI SWAP2 PUSH1 0x80 SWAP2 PUSH2 0x1086 DUP8 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH2 0xE63 JUMP JUMPDEST SWAP1 DUP6 PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH0 KECCAK256 SSTORE PUSH1 0x4 DUP2 MLOAD SWAP2 DUP8 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH4 0x1B5A5B9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP5 ADD MSTORE PUSH20 0x11185A5B1E481B1A5B5A5D08195E18D959591959 PUSH1 0x62 SHL PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x80 SWAP1 LOG2 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP4 SWAP5 POP PUSH1 0x22 DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x416C6C6F636174696F6E2062656C6F77206D696E696D756D207468726573686F PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B19 PUSH1 0xF2 SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1179 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY PUSH0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x11E5 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x11ED JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x11E5 JUMPI POP PUSH2 0xD1E SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x74B9E5B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x1240 SWAP1 PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x127C JUMPI JUMPDEST POP PUSH2 0xD1E JUMPI POP PUSH2 0x125A PUSH2 0x116D JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x1268 JUMPI PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1270 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x1278 JUMPI PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x12B2 JUMPI JUMPDEST DUP2 PUSH2 0x1298 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E0 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1E0 JUMPI SWAP1 PUSH0 PUSH2 0x124C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x128B JUMP JUMPDEST SWAP2 PUSH2 0x12C6 SWAP1 DUP3 DUP5 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP5 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP2 AND LT PUSH2 0x1354 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x8 DUP3 PUSH1 0x80 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH8 0x3A3930B739B332B9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x2B DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616C6C6F636174696F6E2062656C6F77206D696E696D75 PUSH1 0x60 DUP3 ADD MSTORE PUSH11 0x1B481D1A1C995CDA1BDB19 PUSH1 0xAA SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x13D5 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x13E8 SWAP1 DUP3 DUP5 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP2 SWAP3 SWAP1 DUP6 SWAP1 PUSH32 0x3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A SWAP1 DUP6 SWAP1 LOG2 PUSH1 0xFF DUP1 PUSH1 0x8 SLOAD AND SWAP2 AND SWAP1 DUP2 LT PUSH2 0x1615 JUMPI PUSH2 0x144C PUSH1 0xFF SWAP2 PUSH0 SWAP5 SWAP6 PUSH2 0xFB2 JUMP JUMPDEST DIV SWAP1 PUSH1 0x1 SLOAD AND SWAP3 DUP1 MLOAD SWAP4 PUSH4 0x4D248487 PUSH1 0xE1 SHL DUP6 MSTORE DUP6 PUSH1 0x4 DUP7 ADD MSTORE DUP3 PUSH1 0x24 DUP7 ADD MSTORE DUP5 PUSH1 0x44 DUP2 PUSH1 0x20 SWAP7 DUP8 SWAP5 GAS CALL PUSH0 SWAP5 DUP2 PUSH2 0x15DD JUMPI JUMPDEST POP PUSH2 0x154E JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH2 0x149C PUSH2 0x116D JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x14E4 JUMPI JUMPDEST DUP1 DUP1 PUSH1 0x80 SWAP5 PUSH1 0x1A SWAP4 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74206661696C65643A20556E6B6E6F776E206572726F72000000000000 PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x14EC PUSH2 0x1188 JUMP JUMPDEST DUP1 PUSH2 0x14F7 JUMPI POP PUSH2 0x14A7 JUMP JUMPDEST DUP2 PUSH2 0x153B PUSH1 0x2D PUSH2 0xF6A SWAP5 MLOAD DUP1 SWAP5 PUSH13 0x26B4B73A103330B4B632B21D1 PUSH1 0x9D SHL DUP10 DUP4 ADD MSTORE PUSH2 0x152B DUP2 MLOAD DUP1 SWAP3 DUP12 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xBED JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0xC0E JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH0 EQ PUSH2 0x1591 JUMPI SWAP2 PUSH1 0xA DUP3 DUP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1707 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH1 0x80 SWAP6 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH10 0x191A5C9958DD135A5B9D PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1B DUP3 DUP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH1 0x80 SWAP6 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74206661696C65643A2072657475726E65642066616C73650000000000 PUSH1 0x60 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x160E JUMPI JUMPDEST PUSH2 0x15F5 DUP2 DUP4 PUSH2 0xC63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E0 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1E0 JUMPI SWAP4 PUSH0 PUSH2 0x147F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x15EB JUMP JUMPDEST POP POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x27 DUP3 PUSH1 0xA0 SWAP4 MLOAD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420616C6C6F636174696F6E2062656C6F77206D696E696D756D207468 PUSH1 0x60 DUP3 ADD MSTORE PUSH7 0x1C995CDA1BDB19 PUSH1 0xCA SHL PUSH1 0x80 DUP3 ADD MSTORE LOG2 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x16A1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP2 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT PUSH2 0x16AF JUMPI POP POP PUSH0 SWAP1 JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0xE70 JUMPI SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x16CE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID CALLDATASIZE 0xE6 SWAP1 0xC5 0xF8 0xD LOG3 0xF9 0xDA LT 0xE9 JUMPI DELEGATECALL 0x2F 0xAC DUP10 0xE3 REVERT 0xE7 PUSH19 0x861FFE24E95169AEDDA4E8BF09E7E318D9FDE6 CREATE 0xE5 0xCB 0xB2 COINBASE DUP11 POP 0x24 TLOAD KECCAK256 PUSH4 0xCE96946E 0x27 GT 0xC3 DUP15 SWAP13 0x2B BALANCE 0x27 0xE9 0xB3 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEF SELFDESTRUCT PUSH29 0x1CEAF82489345F71C2EC2F33C9D010E0AAEFF1225D4E8DE70D53200164 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "781:15344:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15825:53;781:15344;;;;;:::i;:::-;15825:53;;;;;;:::i;:::-;781:15344;16032:28;781:15344;15967:19;781:15344;;5173:26;781:15344;;;;15967:19;;;:::i;:::-;781:15344;16032:28;;:::i;:::-;16089:27;;;781:15344;;;;;;;5159:40;;781:15344;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;781:15344:2;;;;2627:22:0;;2623:91;;781:15344:2;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;3052:40:0;781:15344:2;3052:40:0;;781:15344:2;2623:91:0;781:15344:2;;;;;2672:31:0;;;;;;;;781:15344:2;2672:31:0;781:15344:2;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;:::i;:::-;15246:23;;;:::i;:::-;781:15344;;;;;;;;;;11841:14;781:15344;;;;;10983:6;10965:15;781:15344;;;;;15337:28;781:15344;;;;15337:28;;:::i;:::-;781:15344;;15389:8;781:15344;15389:8;781:15344;;15388:9;:31;;;;781:15344;;;;;;;;;;;;;;;;;;;;15388:31;15401:18;;;;-1:-1:-1;15388:31:2;;781:15344;;;;;;;2674:1;781:15344;;;:::i;:::-;1500:62:0;;;:::i;:::-;2624:40:2;781:15344;2633:8;781:15344;2633:8;781:15344;;2632:9;2624:40;:::i;:::-;2674:1;:::i;:::-;781:15344;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;-1:-1:-1;;;;;781:15344:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;996:36;781:15344;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;-1:-1:-1;;;;;781:15344:2;;:::i;:::-;;;;11841:14;781:15344;;;;;10983:6;10965:15;781:15344;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;1314:32;781:15344;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;14376:29;1500:62:0;781:15344:2;1500:62:0;;;:::i;:::-;14341:20:2;781:15344;;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;14376:29;781:15344;;;;;;;-1:-1:-1;;781:15344:2;;;;1500:62:0;;:::i;:::-;781:15344:2;13913:25;781:15344;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;781:15344:2;12098:17;;781:15344;;12265:49;781:15344;;12175:26;781:15344;;;;;;;;12175:26;781:15344;;;;;;;;;;;;12265:49;781:15344;;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;781:15344:2;;:::i;:::-;;;;1398:69;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;1619:28;781:15344;1619:28;781:15344;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;781:15344:2;14095:60;14103:32;;;14095:60;:::i;:::-;-1:-1:-1;;;;;781:15344:2;;14165:44;781:15344;;;14165:44;781:15344;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;781:15344:2;;;;12460:56;12468:28;;;12460:56;:::i;:::-;12546:13;781:15344;;-1:-1:-1;;;;;781:15344:2;;;;;;;12546:13;781:15344;12609:47;781:15344;;;12609:47;781:15344;;12671:47;781:15344;12671:47;;781:15344;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;781:15344:2;;;;1038:28;781:15344;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;1500:62:0;;:::i;:::-;781:15344:2;;;-1:-1:-1;;;;;;781:15344:2;;;;-1:-1:-1;;;;;781:15344:2;3052:40:0;781:15344:2;;3052:40:0;781:15344:2;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13422:37;781:15344;13422:37;;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;;;;2469:92;7367:758;781:15344;;;;;;;;;:::i;:::-;2497:10;;781:15344;;;;;;;;;;2477:56;;;;;781:15344;2469:92;;:::i;:::-;2624:40;781:15344;2633:8;781:15344;2633:8;781:15344;;2632:9;2624:40;:::i;:::-;781:15344;;7367:758;;:::i;2477:56::-;781:15344;;;;;2497:10;2512:21;2477:56;;;781:15344;;;;;;;-1:-1:-1;;781:15344:2;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;781:15344:2;;12865:57;12873:29;;;12865:57;:::i;:::-;781:15344;;;;;;;;;;;;;;;;;;;;;13067:4;781:15344;;;;;;;;13086:35;781:15344;13086:35;;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;1527:44;781:15344;;;;;;;;;;;;;;2674:1;781:15344;;;;:::i;:::-;2497:10;;;;;781:15344;;;;;;;;;;2477:56;;;;781:15344;2469:92;;;:::i;:::-;2624:40;781:15344;2633:8;781:15344;2633:8;781:15344;;2632:9;2624:40;:::i;:::-;2674:1;:::i;:::-;781:15344;;;;;;;;;;;;2477:56;-1:-1:-1;781:15344:2;;-1:-1:-1;;;;;781:15344:2;2497:10;2512:21;2477:56;;781:15344;;;;;;;;;;;;;2571:1;781:15344;;;;:::i;:::-;2497:10;;781:15344;;;;;;;;;;2477:56;;;;781:15344;2469:92;;;:::i;:::-;781:15344;;2571:1;;:::i;2477:56::-;-1:-1:-1;781:15344:2;;-1:-1:-1;;;;;781:15344:2;2497:10;2512:21;2477:56;;781:15344;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;10983:6;10965:15;781:15344;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;-1:-1:-1;;;;;781:15344:2;;:::i;:::-;;;;1226:50;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;;;;5173:26;781:15344;;-1:-1:-1;5159:40:2;781:15344;;;;;;;;;;;;;;;;;;;13731:25;781:15344;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;781:15344:2;;13631:46;13639:18;;;13631:46;:::i;:::-;781:15344;;;13687:15;781:15344;;;;;;;;;;;13731:25;781:15344;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;781:15344:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;781:15344:2;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;781:15344:2;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;781:15344:2;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;;;;14553:427;781:15344;14683:8;781:15344;14683:8;781:15344;;14679:75;;14792:28;;;:::i;:::-;14834:18;14830:91;;14947:4;781:15344;;;;;;:::i;:::-;;;;-1:-1:-1;;;781:15344:2;;;;14553:427;:::o;14830:91::-;-1:-1:-1;781:15344:2;;;;;;:::i;:::-;;;;;;;;;14868:42;:::o;14679:75::-;14707:36;;-1:-1:-1;781:15344:2;;;;;;:::i;:::-;;;;-1:-1:-1;;;781:15344:2;;;;14707:36;:::o;781:15344::-;;;;:::o;:::-;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;10167:604;;10983:6;10965:15;781:15344;10344:21;;;;:::i;:::-;781:15344;;;;;;;;;;;10395:14;781:15344;;;;;;;;;;;;;;;;10447:18;;;;;:::i;:::-;:31;;;781:15344;10526:18;;;;-1:-1:-1;;;;;;;;;;;10526:18:2;781:15344;10526:18;;:::i;:::-;781:15344;;;;10395:14;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;10563:48;10632:4;10625:11;:::o;10443:322::-;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;-1:-1:-1;;;;;;;;;;;10672:56:2;781:15344;;;;10672:56;;;;781:15344;10742:12;:::o;781:15344::-;;;;:::o;:::-;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;:::o;5650:1367::-;;;5932:51;5650:1367;5932:51;;;:::i;:::-;781:15344;;;;;;;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;5998:46;;781:15344;;5998:46;781:15344;;5173:26;781:15344;;;;5159:40;;;6118:172;;781:15344;6383:19;;;;:::i;:::-;781:15344;10965:15;6523:21;10983:6;10965:15;781:15344;6523:21;;:::i;:::-;781:15344;;;6574:14;781:15344;;;;;;;;;;;;;;6626:26;;;;;:::i;:::-;:38;6622:169;;6871:26;781:15344;6871:26;;;-1:-1:-1;;;;;;;;;;;6871:26:2;;:::i;:::-;781:15344;;;;6574:14;781:15344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;6921:50;6989:4;6981:29;5650:1367;:::o;6622:169::-;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;;;-1:-1:-1;;;;;;;;;;;6685:64:2;781:15344;;6685:64;781:15344;6763:17;781:15344;6763:17;:::o;6118:172::-;781:15344;;-1:-1:-1;;;;;;;;;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;6178:70;781:15344;6262:17;781:15344;6262:17;:::o;781:15344::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;781:15344:2;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;4342:522::-;4506:6;781:15344;;;-1:-1:-1;;;4506:66:2;;-1:-1:-1;;;;;781:15344:2;;;4506:66;;;781:15344;;;;;;;;;;;;;;;4506:66;;781:15344;;;;;;;;;;;;;;;:::i;:::-;4506:66;;;;-1:-1:-1;;4506:66:2;;;4342:522;-1:-1:-1;4502:356:2;;;;;:::i;:::-;;;;;-1:-1:-1;4839:8:2;:::o;4502:356::-;4643:124;;:::i;:::-;;;-1:-1:-1;4839:8:2;:::o;4643:124::-;-1:-1:-1;4748:8:2;:::o;4506:66::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;781:15344;;;;;;;;;;;;4506:66;;;;;;;-1:-1:-1;4506:66:2;;7367:758;;7658:53;7367:758;7658:53;;;:::i;:::-;781:15344;;;;;;;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;;7726:48;;781:15344;;7726:48;781:15344;;5173:26;781:15344;;;;5159:40;7848:178;;-1:-1:-1;;;;;;;;;;;781:15344:2;5173:26;781:15344;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;8049:48;8114:4;7367:758;:::o;7848:178::-;-1:-1:-1;;;;;;;;;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;7908:81;781:15344;8003:12;:::o;11069:191::-;-1:-1:-1;;;;;781:15344:2;-1:-1:-1;781:15344:2;;;11170:15;781:15344;;;;;;11208:13;;;;11069:191;:::o;11208:45::-;781:15344;11236:17;781:15344;11069:191;:::o;8424:1447::-;;8660:51;8424:1447;8660:51;;;:::i;:::-;781:15344;;;;;;;;;;;;;-1:-1:-1;;;;;781:15344:2;;;;;;;;;8726:46;;781:15344;;8726:46;781:15344;;5173:26;781:15344;;;;5159:40;;;8846:172;;9099:19;781:15344;9099:19;781:15344;9099:19;;;:::i;:::-;781:15344;;9182:10;781:15344;;;;;;;;;9182:41;;;;;;781:15344;;;;;;9182:41;781:15344;9182:41;;;;;;;781:15344;;9182:41;;;8424:1447;-1:-1:-1;9178:687:2;;-1:-1:-1;;;;;;;;;;;9178:687:2;;;;:::i;:::-;;;;;;781:15344;;;;;;;;;;;;;;;;;;;;;9758:70;781:15344;9842:12;:::o;9178:687::-;9551:181;;:::i;:::-;;;;9178:687;;;9551:181;781:15344;9652:41;781:15344;;;;9652:41;;-1:-1:-1;;;9652:41:2;;;781:15344;;;;;;;;;;;;;:::i;:::-;;;9652:41;;;;;;;;;:::i;:::-;781:15344;;;;;;;;;;;;;;;:::i;9178:687::-;9260:280;;;;;;;781:15344;;;;-1:-1:-1;;;;;;;;;;;781:15344:2;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;9295:56;9182:10;9369:11;:::o;9260:280::-;781:15344;;;;-1:-1:-1;;;;;;;;;;;781:15344:2;;;;;;;;;;;;;;;;;;9424:71;781:15344;9513:12;:::o;9182:41::-;;;;;;;;;;;;;;;;;:::i;:::-;;;781:15344;;;;;;;;;;;;9182:41;;;;;;;;;8846:172;781:15344;;-1:-1:-1;;;;;;;;;;;781:15344:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;781:15344:2;;;;8906:75;781:15344;8995:12;:::o;11333:306::-;781:15344;;;;;;;-1:-1:-1;781:15344:2;11484:14;781:15344;;;-1:-1:-1;781:15344:2;10983:6;10965:15;781:15344;-1:-1:-1;781:15344:2;;;11541:23;781:15344;-1:-1:-1;781:15344:2;;11541:23;;:::i;:::-;11590:42;:18;;;;;:42;;-1:-1:-1;11333:306:2;:::o;11590:42::-;781:15344;;;;;;;11333:306;:::o;1796:162:0:-;1710:6;781:15344:2;-1:-1:-1;;;;;781:15344:2;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;781:15344:2;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;781:15344:2;;;1901:40:0"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1196000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authorizeContract(address)": "30232",
								"authorizeMint(address,uint256,bytes)": "infinite",
								"authorizeSimple(address,uint256)": "infinite",
								"authorizeTransfer(address,address,uint256,bytes)": "infinite",
								"authorizedContracts(address)": "3016",
								"canUserOperate(address,uint256)": "infinite",
								"deauthorizeContract(address)": "30224",
								"defaultDailyLimit()": "2791",
								"getCurrentDay()": "252",
								"getKernelRecommendation(address,uint256,bytes)": "infinite",
								"getRemainingDailyLimit(address)": "7566",
								"getTodayUsage(address)": "3031",
								"getUserDailyLimit(address)": "4880",
								"getUserStatus(address)": "infinite",
								"isAllocationAcceptable(uint8)": "2337",
								"isPaused()": "2699",
								"kernel()": "2856",
								"kernelAddress()": "2570",
								"minimumAllocationThreshold()": "2423",
								"mintWithKernel(address,uint256,bytes)": "infinite",
								"owner()": "2635",
								"previewKernelRecommendation(address,uint256,bytes)": "infinite",
								"renounceOwnership()": "28315",
								"setDefaultDailyLimit(uint256)": "24883",
								"setKernelAddress(address)": "52740",
								"setMinimumAllocationThreshold(uint8)": "28356",
								"setPause(bool)": "28113",
								"setStudyToken(address)": "27067",
								"setUserDailyLimit(address,uint256)": "26020",
								"studyToken()": "2658",
								"transferOwnership(address)": "28854",
								"userDailyLimits(address)": "2479",
								"userDailyUsage(address,uint256)": "2917"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP8",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1569,
									"end": 1571,
									"name": "PUSH",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "FFFF"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1569,
									"end": 1571,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1569,
									"end": 1571,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3398,
									"end": 3430,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 3398,
									"end": 3430,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3398,
									"end": 3430,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3474,
									"end": 3502,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3474,
									"end": 3502,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3474,
									"end": 3502,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3672,
									"end": 3702,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3672,
									"end": 3702,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3712,
									"end": 3759,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3712,
									"end": 3759,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3769,
									"end": 3807,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3874,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3929,
									"end": 3961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3929,
									"end": 3961,
									"name": "PUSH",
									"source": 2,
									"value": "8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3929,
									"end": 3961,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3929,
									"end": 3961,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "496E76616C6964206B65726E656C206164647265737300000000000000000000"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B71"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 781,
									"end": 16125,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 781,
									"end": 16125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7efff7c1ceaf82489345f71c2ec2f33c9d010e0aaeff1225d4e8de70d53200164736f6c63430008180033",
									".code": [
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "177C49A7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "17A08CA6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "207CBFA2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "360CF54A"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3E6968B6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "41196FAF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4AEA318E"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "59FE2DA4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "612B5332"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "67561D93"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "6DFFCD00"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "6E861C0E"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "73173A35"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "77865F91"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "88616538"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A7481B5B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "B09A8A04"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "B187BD26"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "B6FA284D"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "B8DB8CA8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "BEBBCFE6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "BEDB86FB"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "C76B0888"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "D3893B47"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "D4AAE0C4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "D5B9221B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "D8817CD4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "EA0D5DCD"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "EC37D259"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "F64D2190"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 15825,
											"end": 15878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 15967,
											"end": 15986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16060,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 16032,
											"end": 16060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16060,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 16032,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16089,
											"end": 16116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16089,
											"end": 16116,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16089,
											"end": 16116,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 15246,
											"end": 15269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11841,
											"end": 11855,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15337,
											"end": 15365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15337,
											"end": 15365,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 15337,
											"end": 15365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15389,
											"end": 15397,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15389,
											"end": 15397,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15388,
											"end": 15397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15419,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15401,
											"end": 15419,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 15388,
											"end": 15419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2624,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2674,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11841,
											"end": 11855,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1346,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14376,
											"end": 14405,
											"name": "PUSH",
											"source": 2,
											"value": "EF37DF9624F797913E7585C7F7B5D004BA6704BE3C64B0561C157728CCC86985"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14361,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF00"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14376,
											"end": 14405,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 13913,
											"end": 13938,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12098,
											"end": 12115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12115,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12265,
											"end": 12314,
											"name": "PUSH",
											"source": 2,
											"value": "2DCD482F94838C55DB1E931FA73DC7ACD9B385D4A501A9B5A6210F8AE89A372B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12175,
											"end": 12201,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12175,
											"end": 12201,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12265,
											"end": 12314,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "5468726573686F6C64206D757374206265203C3D203235350000000000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1467,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14103,
											"end": 14135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14103,
											"end": 14135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14103,
											"end": 14135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 14095,
											"end": 14155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14155,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14095,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14165,
											"end": 14209,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14165,
											"end": 14209,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12468,
											"end": 12496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12460,
											"end": 12516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12460,
											"end": 12516,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12460,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12546,
											"end": 12559,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12546,
											"end": 12559,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12656,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12609,
											"end": 12656,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12671,
											"end": 12718,
											"name": "PUSH",
											"source": 2,
											"value": "3CAB297D17E50B1FAB60FC2A2B1117F96C766E15CAC2988ECB7EC1ABB578CFC"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12671,
											"end": 12718,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13422,
											"end": 13459,
											"name": "PUSH",
											"source": 2,
											"value": "54142B7CB3CEAA9E564243CE4CC2303723C842A1144192DE6B3C594F68B16A9A"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13422,
											"end": 13459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13422,
											"end": 13459,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "461BCD"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "436F6E7472616374206E6F7420617574686F72697A6564000000000000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2469,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2624,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7367,
											"end": 8125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12873,
											"end": 12902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12873,
											"end": 12902,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12873,
											"end": 12902,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 12865,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12922,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12865,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13067,
											"end": 13071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13086,
											"end": 13121,
											"name": "PUSH",
											"source": 2,
											"value": "8983A1F3C3CB45C24C8226B5B805E3B6EB49686530B808534B2A920129EFF651"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13086,
											"end": 13121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13086,
											"end": 13121,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "461BCD"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "436F6E747261637420616C726561647920617574686F72697A65640000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1527,
											"end": 1571,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2469,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2624,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2624,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2674,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2469,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 2469,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2571,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2477,
											"end": 2533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13731,
											"end": 13756,
											"name": "PUSH",
											"source": 2,
											"value": "C1395320BC4A9778ACF4621C40F54FDDE0FAFA6177D8012972FCA4EC8F7CFA36"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13631,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13631,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 13631,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13631,
											"end": 13677,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 13631,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13687,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13731,
											"end": 13756,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14553,
											"end": 14980,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 14553,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14683,
											"end": 14691,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14683,
											"end": 14691,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14679,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 14679,
											"end": 14754,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14792,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 14792,
											"end": 14820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14792,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14792,
											"end": 14820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14792,
											"end": 14820,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 14792,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14834,
											"end": 14852,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 14830,
											"end": 14921,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14947,
											"end": 14951,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DC195C985D1A5BDB88185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14553,
											"end": 14980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14553,
											"end": 14980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 14921,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 14830,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E74206461696C79206C696D69740000000000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14868,
											"end": 14910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14868,
											"end": 14910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14679,
											"end": 14754,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 14679,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DBDB9D1C9858DD081A5CC81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420617574686F72697A656420636F6E7472616374000000000000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10771,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 10167,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10344,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 10344,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10409,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10447,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 10447,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10478,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 10447,
											"end": 10478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "929DBB561B9D63C85F276CF30AB68486B85D32850E15665292944ECEB9D2CA1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10526,
											"end": 10544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10395,
											"end": 10409,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6D2DAE0D8CA82EAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10563,
											"end": 10611,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10636,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10625,
											"end": 10636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10625,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10443,
											"end": 10765,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 10443,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11185A5B1E481B1A5B5A5D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 10728,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DBDB9D1C9858DD081A5CC81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5932,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5932,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 2,
											"value": "3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6118,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6118,
											"end": 6290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 6383,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 6383,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6523,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 6523,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6626,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6626,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6664,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6622,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6622,
											"end": 6791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "929DBB561B9D63C85F276CF30AB68486B85D32850E15665292944ECEB9D2CA1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6871,
											"end": 6897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6921,
											"end": 6971,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6981,
											"end": 7010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 7017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6622,
											"end": 6791,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6622,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11185A5B1E481B1A5B5A5D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6749,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6763,
											"end": 6780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6118,
											"end": 6290,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6118,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "416C6C6F636174696F6E2062656C6F77206D696E696D756D207468726573686F"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6248,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 6279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4864,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4512,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74B9E5B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4864,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 4342,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4502,
											"end": 4858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 4502,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4643,
											"end": 4767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 4643,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4506,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 4506,
											"end": 4572,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7658,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 7658,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7774,
											"name": "PUSH",
											"source": 2,
											"value": "3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A"
										},
										{
											"begin": 7726,
											"end": 7774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7774,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 7848,
											"end": 8026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "929DBB561B9D63C85F276CF30AB68486B85D32850E15665292944ECEB9D2CA1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8049,
											"end": 8097,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8118,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7367,
											"end": 8125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 8026,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 7848,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657220616C6C6F636174696F6E2062656C6F77206D696E696D75"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B481D1A1C995CDA1BDB19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7908,
											"end": 7989,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8003,
											"end": 8015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11260,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11069,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11170,
											"end": 11185,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11208,
											"end": 11253,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 11208,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11253,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "3C283D7E03A97A156E197B47F06233E89E2566B40CE1603619839627E0EA827A"
										},
										{
											"begin": 8726,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8772,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5199,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8846,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 8846,
											"end": 9018,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 9099,
											"end": 9118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9192,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4D248487"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 8424,
											"end": 9871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 9178,
											"end": 9865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4D696E74206661696C65643A20556E6B6E6F776E206572726F72000000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9758,
											"end": 9828,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9842,
											"end": 9854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9842,
											"end": 9854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 9551,
											"end": 9732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 9551,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "2D"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B4B73A103330B4B632B21D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9652,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 9652,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 781,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9178,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "929DBB561B9D63C85F276CF30AB68486B85D32850E15665292944ECEB9D2CA1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191A5C9958DD135A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9295,
											"end": 9351,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9192,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9369,
											"end": 9380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9369,
											"end": 9380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 9260,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4D696E74206661696C65643A2072657475726E65642066616C73650000000000"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9495,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9513,
											"end": 9525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9182,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9182,
											"end": 9223,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8846,
											"end": 9018,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 8846,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "4D696E7420616C6C6F636174696F6E2062656C6F77206D696E696D756D207468"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C995CDA1BDB19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 8981,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 9007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11333,
											"end": 11639,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11333,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11484,
											"end": 11498,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11541,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11564,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 11541,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11333,
											"end": 11639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11333,
											"end": 11639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11590,
											"end": 11632,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 11590,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11333,
											"end": 11639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11333,
											"end": 11639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 16125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									],
									".data": {
										"4658CF08A262E480393DABBA07386CA79693A9006E5771833F0BFF835A390A33": "36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf",
										"929DBB561B9D63C85F276CF30AB68486B85D32850E15665292944ECEB9D2CA1D": "09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/StudyTokenAuthority.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authorizeContract(address)": "67561d93",
							"authorizeMint(address,uint256,bytes)": "4aea318e",
							"authorizeSimple(address,uint256)": "41196faf",
							"authorizeTransfer(address,address,uint256,bytes)": "6dffcd00",
							"authorizedContracts(address)": "d5b9221b",
							"canUserOperate(address,uint256)": "207cbfa2",
							"deauthorizeContract(address)": "6e861c0e",
							"defaultDailyLimit()": "c76b0888",
							"getCurrentDay()": "3e6968b6",
							"getKernelRecommendation(address,uint256,bytes)": "612b5332",
							"getRemainingDailyLimit(address)": "ec37d259",
							"getTodayUsage(address)": "d3893b47",
							"getUserDailyLimit(address)": "77865f91",
							"getUserStatus(address)": "ea0d5dcd",
							"isAllocationAcceptable(uint8)": "17a08ca6",
							"isPaused()": "b187bd26",
							"kernel()": "d4aae0c4",
							"kernelAddress()": "73173a35",
							"minimumAllocationThreshold()": "59fe2da4",
							"mintWithKernel(address,uint256,bytes)": "d8817cd4",
							"owner()": "8da5cb5b",
							"previewKernelRecommendation(address,uint256,bytes)": "f64d2190",
							"renounceOwnership()": "715018a6",
							"setDefaultDailyLimit(uint256)": "bebbcfe6",
							"setKernelAddress(address)": "88616538",
							"setMinimumAllocationThreshold(uint8)": "b8db8ca8",
							"setPause(bool)": "bedb86fb",
							"setStudyToken(address)": "b09a8a04",
							"setUserDailyLimit(address,uint256)": "177c49a7",
							"studyToken()": "a7481b5b",
							"transferOwnership(address)": "f2fde38b",
							"userDailyLimits(address)": "360cf54a",
							"userDailyUsage(address,uint256)": "b6fa284d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_studyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_kernelAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultDailyLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractDeauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldKernel\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newKernel\",\"type\":\"address\"}],\"name\":\"KernelAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"allocation\",\"type\":\"uint8\"}],\"name\":\"KernelAllocationResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldThreshold\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newThreshold\",\"type\":\"uint8\"}],\"name\":\"MinimumThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"TokenOperationApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"TokenOperationDenied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"UserLimitSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"authorizeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"authorizeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"adjustedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"authorizeSimple\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"authorizeTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"canUserOperate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canOperate\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"deauthorizeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"getKernelRecommendation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRemainingDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTodayUsage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingToday\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canOperate\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"allocation\",\"type\":\"uint8\"}],\"name\":\"isAllocationAcceptable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract ITokenAllocationKernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernelAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumAllocationThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"mintWithKernel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"additionalData\",\"type\":\"bytes\"}],\"name\":\"previewKernelRecommendation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"allocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"meetsThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"adjustedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withinDailyLimit\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setDefaultDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kernelAddress\",\"type\":\"address\"}],\"name\":\"setKernelAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_threshold\",\"type\":\"uint8\"}],\"name\":\"setMinimumAllocationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studyTokenAddress\",\"type\":\"address\"}],\"name\":\"setStudyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setUserDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"studyToken\",\"outputs\":[{\"internalType\":\"contract IStudyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDailyLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDailyUsage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Refined Token Authority for StudyDAO with direct kernel integration Works with Kernel ID 1593 for token allocation recommendations\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeContract(address)\":{\"details\":\"Authorize a contract\"},\"authorizeMint(address,uint256,bytes)\":{\"details\":\"Authorize a token mint operation with kernel verification\",\"params\":{\"additionalData\":\"Additional data for kernel decision\",\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to mint tokens to\"},\"returns\":{\"adjustedAmount\":\"The adjusted amount based on kernel recommendation\",\"success\":\"True if operation is authorized\"}},\"authorizeSimple(address,uint256)\":{\"details\":\"Simple authorization without kernel (for compatibility/emergency)\",\"params\":{\"amount\":\"Amount to authorize\",\"to\":\"Address to authorize for\"},\"returns\":{\"_0\":\"bool True if authorized\"}},\"authorizeTransfer(address,address,uint256,bytes)\":{\"details\":\"Authorize a token transfer operation with kernel verification\",\"params\":{\"additionalData\":\"Additional data for kernel decision\",\"amount\":\"Amount of tokens to transfer\",\"from\":\"Address sending tokens\",\"to\":\"Address receiving tokens\"},\"returns\":{\"_0\":\"bool True if transfer is authorized\"}},\"canUserOperate(address,uint256)\":{\"details\":\"Check if user can perform operation with given amount\"},\"constructor\":{\"details\":\"Constructor initializing StudyDAO token authority\",\"params\":{\"_defaultDailyLimit\":\"Default daily limit for users\",\"_kernelAddress\":\"Address of the Token Allocation Kernel (1593)\",\"_studyTokenAddress\":\"Address of the StudyToken contract\",\"initialOwner\":\"Owner of the contract\"}},\"deauthorizeContract(address)\":{\"details\":\"Deauthorize a contract\"},\"getCurrentDay()\":{\"details\":\"Get the current day number\"},\"getKernelRecommendation(address,uint256,bytes)\":{\"details\":\"Get recommendation from kernel with error handling\",\"params\":{\"additionalData\":\"Any additional data for the kernel\",\"amount\":\"Requested token amount\",\"user\":\"Address requesting tokens\"},\"returns\":{\"_0\":\"allocation Recommended allocation (0-255), 0 if error\"}},\"getRemainingDailyLimit(address)\":{\"details\":\"Get a user's remaining daily limit\"},\"getTodayUsage(address)\":{\"details\":\"Get a user's used amount for today\"},\"getUserDailyLimit(address)\":{\"details\":\"Get a user's effective daily limit\"},\"getUserStatus(address)\":{\"details\":\"Get user's complete status\"},\"isAllocationAcceptable(uint8)\":{\"details\":\"Check if allocation meets minimum threshold\",\"params\":{\"allocation\":\"The allocation score from kernel (0-255)\"},\"returns\":{\"_0\":\"bool True if allocation is acceptable\"}},\"mintWithKernel(address,uint256,bytes)\":{\"details\":\"Direct mint function with kernel verification (owner only)\",\"params\":{\"additionalData\":\"Additional data for kernel decision\",\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to mint tokens to\"},\"returns\":{\"_0\":\"bool True if mint was successful\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewKernelRecommendation(address,uint256,bytes)\":{\"details\":\"Preview what would happen with a kernel call (without executing)\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultDailyLimit(uint256)\":{\"details\":\"Set default daily limit for all users\"},\"setKernelAddress(address)\":{\"details\":\"Update kernel address\"},\"setMinimumAllocationThreshold(uint8)\":{\"details\":\"Set the minimum allocation threshold\"},\"setPause(bool)\":{\"details\":\"Emergency pause/unpause\"},\"setStudyToken(address)\":{\"details\":\"Set StudyToken contract address\"},\"setUserDailyLimit(address,uint256)\":{\"details\":\"Set daily token limit for a specific user\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StudyTokenAuthority\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StudyTokenAuthority.sol\":\"StudyTokenAuthority\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StudyTokenAuthority.sol\":{\"keccak256\":\"0x5c7e3382dbd4d9a6b515997913fc34634ac5c8692ee8b6b415f373b698e0449d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a21d04505d36c2627601ba8f93bde58082cf478c36a3b2d3925949485fad8491\",\"dweb:/ipfs/QmdhMStKDMA9h8niTCkqmWkzqpXMNs8TUXpuLTE9z3cKKA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 210,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "studyToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IStudyToken)191"
							},
							{
								"astId": 213,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "kernel",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ITokenAllocationKernel)204"
							},
							{
								"astId": 215,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "kernelAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 219,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "authorizedContracts",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 223,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "userDailyLimits",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 225,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "defaultDailyLimit",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "userDailyUsage",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 234,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "minimumAllocationThreshold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							},
							{
								"astId": 237,
								"contract": "contracts/StudyTokenAuthority.sol:StudyTokenAuthority",
								"label": "isPaused",
								"offset": 1,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IStudyToken)191": {
								"encoding": "inplace",
								"label": "contract IStudyToken",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenAllocationKernel)204": {
								"encoding": "inplace",
								"label": "contract ITokenAllocationKernel",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/StudyTokenAuthority.sol:210:9:\n    |\n210 |         address to,\n    |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7435,
					"file": "contracts/StudyTokenAuthority.sol",
					"start": 7425
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/StudyTokenAuthority.sol": {
				"ast": {
					"absolutePath": "contracts/StudyTokenAuthority.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"IStudyToken": [
							191
						],
						"ITokenAllocationKernel": [
							204
						],
						"Ownable": [
							147
						],
						"StudyTokenAuthority": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1257,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStudyToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "112:71:2",
								"text": " @title IStudyToken\n @dev Interface for StudyToken contract"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191
							],
							"name": "IStudyToken",
							"nameLocation": "194:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9a49090e",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintReward",
									"nameLocation": "221:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "240:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "252:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "244:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:28:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "278:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:6:2"
									},
									"scope": 191,
									"src": "212:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "184:102:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenAllocationKernel",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 192,
								"nodeType": "StructuredDocumentation",
								"src": "288:100:2",
								"text": " @title ITokenAllocationKernel\n @dev Interface for Kernel 1593 - Token Allocation Kernel"
							},
							"fullyImplemented": false,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "ITokenAllocationKernel",
							"nameLocation": "399:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "74b9e5b1",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecommendedTokenAllocation",
									"nameLocation": "437:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "484:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "476:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "506:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "498:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "546:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "531:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "531:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:100:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "590:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 200,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "590:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:7:2"
									},
									"scope": 204,
									"src": "428:169:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "389:210:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 206,
										"name": "Ownable",
										"nameLocations": [
											"813:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "813:7:2"
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "813:7:2"
								}
							],
							"canonicalName": "StudyTokenAuthority",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "601:179:2",
								"text": " @title StudyTokenAuthority\n @dev Refined Token Authority for StudyDAO with direct kernel integration\n Works with Kernel ID 1593 for token allocation recommendations"
							},
							"fullyImplemented": true,
							"id": 1256,
							"linearizedBaseContracts": [
								1256,
								147,
								177
							],
							"name": "StudyTokenAuthority",
							"nameLocation": "790:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a7481b5b",
									"id": 210,
									"mutability": "mutable",
									"name": "studyToken",
									"nameLocation": "942:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "923:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IStudyToken_$191",
										"typeString": "contract IStudyToken"
									},
									"typeName": {
										"id": 209,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 208,
											"name": "IStudyToken",
											"nameLocations": [
												"923:11:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 191,
											"src": "923:11:2"
										},
										"referencedDeclaration": 191,
										"src": "923:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStudyToken_$191",
											"typeString": "contract IStudyToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4aae0c4",
									"id": 213,
									"mutability": "mutable",
									"name": "kernel",
									"nameLocation": "1026:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "996:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
										"typeString": "contract ITokenAllocationKernel"
									},
									"typeName": {
										"id": 212,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 211,
											"name": "ITokenAllocationKernel",
											"nameLocations": [
												"996:22:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 204,
											"src": "996:22:2"
										},
										"referencedDeclaration": 204,
										"src": "996:22:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
											"typeString": "contract ITokenAllocationKernel"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73173a35",
									"id": 215,
									"mutability": "mutable",
									"name": "kernelAddress",
									"nameLocation": "1053:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1038:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 214,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1038:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5b9221b",
									"id": 219,
									"mutability": "mutable",
									"name": "authorizedContracts",
									"nameLocation": "1154:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1122:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 218,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1130:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1122:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 217,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1141:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "360cf54a",
									"id": 223,
									"mutability": "mutable",
									"name": "userDailyLimits",
									"nameLocation": "1261:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1226:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 222,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1234:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1226:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 221,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1245:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c76b0888",
									"id": 225,
									"mutability": "mutable",
									"name": "defaultDailyLimit",
									"nameLocation": "1329:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1314:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1314:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6fa284d",
									"id": 231,
									"mutability": "mutable",
									"name": "userDailyUsage",
									"nameLocation": "1453:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1398:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 230,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1406:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1398:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 229,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 227,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1425:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1417:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1436:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "59fe2da4",
									"id": 234,
									"mutability": "mutable",
									"name": "minimumAllocationThreshold",
									"nameLocation": "1540:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1527:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 232,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1527:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1569:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b187bd26",
									"id": 237,
									"mutability": "mutable",
									"name": "isPaused",
									"nameLocation": "1631:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1619:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 235,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1619:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1642:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8983a1f3c3cb45c24c8226b5b805e3b6eb49686530b808534b2a920129eff651",
									"id": 241,
									"name": "ContractAuthorized",
									"nameLocation": "1709:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1744:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1728:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:33:2"
									},
									"src": "1703:58:2"
								},
								{
									"anonymous": false,
									"eventSelector": "54142b7cb3ceaa9e564243ce4cc2303723c842a1144192de6b3c594f68b16a9a",
									"id": 245,
									"name": "ContractDeauthorized",
									"nameLocation": "1772:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1809:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1793:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:33:2"
									},
									"src": "1766:60:2"
								},
								{
									"anonymous": false,
									"eventSelector": "c1395320bc4a9778acf4621c40f54fdde0fafa6177d8012972fca4ec8f7cfa36",
									"id": 251,
									"name": "UserLimitSet",
									"nameLocation": "1837:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1866:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1850:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "1880:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1872:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1849:37:2"
									},
									"src": "1831:56:2"
								},
								{
									"anonymous": false,
									"eventSelector": "09e7e318d9fde6f0e5cbb2418a50245c2063ce96946e2711c38e9c2b3127e9b3",
									"id": 259,
									"name": "TokenOperationApproved",
									"nameLocation": "1898:22:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1921:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1943:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "1966:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1959:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:56:2"
									},
									"src": "1892:85:2"
								},
								{
									"anonymous": false,
									"eventSelector": "36e690c5f80da3f9da10e957f42fac89e3fde772861ffe24e95169aedda4e8bf",
									"id": 267,
									"name": "TokenOperationDenied",
									"nameLocation": "1988:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2009:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2039:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2031:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2054:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2047:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2047:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:53:2"
									},
									"src": "1982:80:2"
								},
								{
									"anonymous": false,
									"eventSelector": "3c283d7e03a97a156e197b47f06233e89e2566b40ce1603619839627e0ea827a",
									"id": 275,
									"name": "KernelAllocationResult",
									"nameLocation": "2073:22:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2096:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "2126:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2118:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "2149:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 272,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2143:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:65:2"
									},
									"src": "2067:94:2"
								},
								{
									"anonymous": false,
									"eventSelector": "2dcd482f94838c55db1e931fa73dc7acd9b385d4a501a9b5a6210f8ae89a372b",
									"id": 281,
									"name": "MinimumThresholdUpdated",
									"nameLocation": "2172:23:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldThreshold",
												"nameLocation": "2202:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2196:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 276,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2196:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "newThreshold",
												"nameLocation": "2222:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2216:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2216:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:40:2"
									},
									"src": "2166:70:2"
								},
								{
									"anonymous": false,
									"eventSelector": "03cab297d17e50b1fab60fc2a2b1117f96c766e15cac2988ecb7ec1abb578cfc",
									"id": 287,
									"name": "KernelAddressUpdated",
									"nameLocation": "2247:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldKernel",
												"nameLocation": "2284:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2268:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": true,
												"mutability": "mutable",
												"name": "newKernel",
												"nameLocation": "2311:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2295:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:54:2"
									},
									"src": "2241:81:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ef37df9624f797913e7585c7f7b5d004ba6704be3c64b0561c157728ccc86985",
									"id": 291,
									"name": "PauseStatusChanged",
									"nameLocation": "2333:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "2357:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2352:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2352:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:15:2"
									},
									"src": "2327:40:2"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2459:120:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 294,
																	"name": "authorizedContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2477:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"expression": {
																		"id": 295,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2497:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2501:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2497:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2477:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 298,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2512:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2516:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2512:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 300,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2526:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2526:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2512:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2477:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420636f6e7472616374",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d2fd1b6bdca20c1872df67e2a23ca50aeba94633d5c0697c1a0bad0400d2bb",
																"typeString": "literal_string \"Not authorized contract\""
															},
															"value": "Not authorized contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d2fd1b6bdca20c1872df67e2a23ca50aeba94633d5c0697c1a0bad0400d2bb",
																"typeString": "literal_string \"Not authorized contract\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2469:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2469:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2469:92:2"
											},
											{
												"id": 307,
												"nodeType": "PlaceholderStatement",
												"src": "2571:1:2"
											}
										]
									},
									"id": 309,
									"name": "onlyAuthorizedContract",
									"nameLocation": "2434:22:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:2:2"
									},
									"src": "2425:154:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2614:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2632:9:2",
															"subExpression": {
																"id": 312,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2633:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320706175736564",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															},
															"value": "Contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2624:40:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "2674:1:2"
											}
										]
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "2598:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:2"
									},
									"src": "2589:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2728:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "2746:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2762:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2754:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2754:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2754:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2746:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2766:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2738:46:2"
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "2794:1:2"
											}
										]
									},
									"id": 335,
									"name": "validAddress",
									"nameLocation": "2701:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2722:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2714:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:14:2"
									},
									"src": "2692:110:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3380:588:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "3398:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3428:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3420:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 352,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3420:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3420:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3398:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3390:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3390:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "3390:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 361,
																"name": "_kernelAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "3474:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3500:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3492:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 362,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3492:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3492:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3474:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206b65726e656c2061646472657373",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3504:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa31690636eecdf6a8addfaaed4acb3c3cae4fcdd39bff3ce89533e677ae55d0",
																"typeString": "literal_string \"Invalid kernel address\""
															},
															"value": "Invalid kernel address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa31690636eecdf6a8addfaaed4acb3c3cae4fcdd39bff3ce89533e677ae55d0",
																"typeString": "literal_string \"Invalid kernel address\""
															}
														],
														"id": 360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3466:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3466:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "3466:63:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "3547:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3571:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3563:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3563:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3563:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3547:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3575:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3539:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3539:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "3539:60:2"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "studyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3618:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStudyToken_$191",
															"typeString": "contract IStudyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 382,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "3643:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 381,
															"name": "IStudyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3631:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStudyToken_$191_$",
																"typeString": "type(contract IStudyToken)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3631:31:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStudyToken_$191",
															"typeString": "contract IStudyToken"
														}
													},
													"src": "3618:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStudyToken_$191",
														"typeString": "contract IStudyToken"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3618:44:2"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "kernelAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3672:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "_kernelAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "3688:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3672:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "3672:30:2"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "kernel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3712:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
															"typeString": "contract ITokenAllocationKernel"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 392,
																"name": "_kernelAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "3744:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 391,
															"name": "ITokenAllocationKernel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3721:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenAllocationKernel_$204_$",
																"typeString": "type(contract ITokenAllocationKernel)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3721:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
															"typeString": "contract ITokenAllocationKernel"
														}
													},
													"src": "3712:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
														"typeString": "contract ITokenAllocationKernel"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "3712:47:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "3769:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "_defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3789:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3769:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "3769:38:2"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 400,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3874:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "3894:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3874:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3910:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3874:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3874:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 407,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "3948:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 406,
														"name": "ContractAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3929:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3929:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "EmitStatement",
												"src": "3924:37:2"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2858:328:2",
										"text": " @dev Constructor initializing StudyDAO token authority\n @param initialOwner Owner of the contract\n @param _studyTokenAddress Address of the StudyToken contract\n @param _kernelAddress Address of the Token Allocation Kernel (1593)\n @param _defaultDailyLimit Default daily limit for users"
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 347,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "3361:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 348,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 346,
												"name": "Ownable",
												"nameLocations": [
													"3353:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3353:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3220:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3212:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_studyTokenAddress",
												"nameLocation": "3250:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3242:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_kernelAddress",
												"nameLocation": "3287:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3279:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_defaultDailyLimit",
												"nameLocation": "3319:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3311:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:141:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3380:0:2"
									},
									"scope": 1256,
									"src": "3191:777:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4492:372:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 434,
															"nodeType": "Block",
															"src": "4600:42:2",
															"statements": [
																{
																	"expression": {
																		"id": 432,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "4621:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"functionReturnParameters": 422,
																	"id": 433,
																	"nodeType": "Return",
																	"src": "4614:17:2"
																}
															]
														},
														"errorName": "",
														"id": 435,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 431,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 430,
																	"mutability": "mutable",
																	"name": "allocation",
																	"nameLocation": "4588:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 435,
																	"src": "4582:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 429,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4582:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "4581:18:2"
														},
														"src": "4573:69:2"
													},
													{
														"block": {
															"id": 441,
															"nodeType": "Block",
															"src": "4670:97:2",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4755:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 422,
																	"id": 440,
																	"nodeType": "Return",
																	"src": "4748:8:2"
																}
															]
														},
														"errorName": "Error",
														"id": 442,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 438,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 437,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 442,
																	"src": "4655:13:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "4655:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "4654:15:2"
														},
														"src": "4643:124:2"
													},
													{
														"block": {
															"id": 445,
															"nodeType": "Block",
															"src": "4774:84:2",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4846:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 422,
																	"id": 444,
																	"nodeType": "Return",
																	"src": "4839:8:2"
																}
															]
														},
														"errorName": "",
														"id": 446,
														"nodeType": "TryCatchClause",
														"src": "4768:90:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 425,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4543:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4549:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 427,
															"name": "additionalData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4557:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 423,
															"name": "kernel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4506:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
																"typeString": "contract ITokenAllocationKernel"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4513:29:2",
														"memberName": "getRecommendedTokenAllocation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "4506:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
															"typeString": "function (address,uint256,bytes memory) view external returns (uint8)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4506:66:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 447,
												"nodeType": "TryStatement",
												"src": "4502:356:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "4041:296:2",
										"text": " @dev Get recommendation from kernel with error handling\n @param user Address requesting tokens\n @param amount Requested token amount\n @param additionalData Any additional data for the kernel\n @return allocation Recommended allocation (0-255), 0 if error"
									},
									"functionSelector": "612b5332",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKernelRecommendation",
									"nameLocation": "4351:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4392:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4384:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4414:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4406:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "4443:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4430:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4430:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4374:89:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4485:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 420,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4485:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:7:2"
									},
									"scope": 1256,
									"src": "4342:522:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "5142:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 457,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "5159:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 458,
														"name": "minimumAllocationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "5173:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5159:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 460,
												"nodeType": "Return",
												"src": "5152:47:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4874:186:2",
										"text": " @dev Check if allocation meets minimum threshold\n @param allocation The allocation score from kernel (0-255)\n @return bool True if allocation is acceptable"
									},
									"functionSelector": "17a08ca6",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllocationAcceptable",
									"nameLocation": "5074:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "5103:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5097:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 451,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5097:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:18:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5136:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5136:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:6:2"
									},
									"scope": 1256,
									"src": "5065:141:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5857:1160:2",
										"statements": [
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "5919:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "5913:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 480,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5913:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 483,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5960:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 485,
															"name": "additionalData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5968:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 482,
														"name": "getKernelRecommendation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "5932:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
															"typeString": "function (address,uint256,bytes memory) view returns (uint8)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5932:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5913:70:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6021:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "6025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 491,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6033:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 488,
														"name": "KernelAllocationResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "5998:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint256,uint8)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "EmitStatement",
												"src": "5993:51:2"
											},
											{
												"condition": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6122:35:2",
													"subExpression": {
														"arguments": [
															{
																"id": 495,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "6146:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 494,
															"name": "isAllocationAcceptable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6123:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_bool_$",
																"typeString": "function (uint8) view returns (bool)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6123:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "IfStatement",
												"src": "6118:172:2",
												"trueBody": {
													"id": 508,
													"nodeType": "Block",
													"src": "6159:131:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "6199:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 500,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "6203:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "416c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f6c64",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6211:36:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c2b352da4c90a57f39b868d92510f8828cd490f37a46ad56a531f1421719ac38",
																			"typeString": "literal_string \"Allocation below minimum threshold\""
																		},
																		"value": "Allocation below minimum threshold"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c2b352da4c90a57f39b868d92510f8828cd490f37a46ad56a531f1421719ac38",
																			"typeString": "literal_string \"Allocation below minimum threshold\""
																		}
																	],
																	"id": 498,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "6178:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6178:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "EmitStatement",
															"src": "6173:75:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6270:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6277:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6269:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 479,
															"id": 507,
															"nodeType": "Return",
															"src": "6262:17:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "adjustedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "6365:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 511,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "6383:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 512,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "6392:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6383:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 514,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6382:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "323535",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6406:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "255"
														},
														"src": "6382:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6365:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "6365:44:2"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "6466:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "6458:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6458:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 521,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "6478:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6478:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6458:35:2"
											},
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "userLimit",
														"nameLocation": "6511:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "6503:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 527,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6541:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 526,
														"name": "getUserDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "6523:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6523:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6503:41:2"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "usedToday",
														"nameLocation": "6562:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "6554:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6554:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 532,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6574:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 534,
														"indexExpression": {
															"id": 533,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6589:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6574:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 536,
													"indexExpression": {
														"id": 535,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6593:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6574:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6554:49:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 538,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6626:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 539,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6638:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6626:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 541,
														"name": "userLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "6655:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6626:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "6622:169:2",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "6666:125:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "6706:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 545,
																		"name": "adjustedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6710:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "4461696c79206c696d6974206578636565646564",
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6726:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9bd082070ed48a1e99c071ec57b5f5993b2d28da31c806020b82e5de524c8f1c",
																			"typeString": "literal_string \"Daily limit exceeded\""
																		},
																		"value": "Daily limit exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9bd082070ed48a1e99c071ec57b5f5993b2d28da31c806020b82e5de524c8f1c",
																			"typeString": "literal_string \"Daily limit exceeded\""
																		}
																	],
																	"id": 543,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "6685:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6685:64:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "EmitStatement",
															"src": "6680:69:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6771:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6778:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6770:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 479,
															"id": 552,
															"nodeType": "Return",
															"src": "6763:17:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 555,
																"name": "userDailyUsage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6839:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 558,
															"indexExpression": {
																"id": 556,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6854:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6839:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 559,
														"indexExpression": {
															"id": 557,
															"name": "dayNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6858:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6839:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 560,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6871:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 561,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6883:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6871:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6839:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "6839:58:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 566,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6944:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6948:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "6d696e74",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6964:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																"typeString": "literal_string \"mint\""
															},
															"value": "mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																"typeString": "literal_string \"mint\""
															}
														],
														"id": 565,
														"name": "TokenOperationApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6921:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "6916:55:2"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6989:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 572,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6995:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 573,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6988:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 479,
												"id": 574,
												"nodeType": "Return",
												"src": "6981:29:2"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "5274:371:2",
										"text": " @dev Authorize a token mint operation with kernel verification\n @param to Address to mint tokens to\n @param amount Amount of tokens to mint\n @param additionalData Additional data for kernel decision\n @return success True if operation is authorized\n @return adjustedAmount The adjusted amount based on kernel recommendation"
									},
									"functionSelector": "4aea318e",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 471,
												"name": "onlyAuthorizedContract",
												"nameLocations": [
													"5769:22:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 309,
												"src": "5769:22:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5769:24:2"
										},
										{
											"arguments": [],
											"id": 474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 473,
												"name": "whenNotPaused",
												"nameLocations": [
													"5794:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5794:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5794:15:2"
										}
									],
									"name": "authorizeMint",
									"nameLocation": "5659:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5710:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5702:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "5739:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5726:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:87:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5824:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5819:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "adjustedAmount",
												"nameLocation": "5841:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5833:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5818:38:2"
									},
									"scope": 1256,
									"src": "5650:1367:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "7568:557:2",
										"statements": [
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "7645:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 630,
														"src": "7639:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 594,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "7639:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "7682:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 599,
															"name": "additionalData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "7696:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "getKernelRecommendation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "7658:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
															"typeString": "function (address,uint256,bytes memory) view returns (uint8)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7658:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7639:72:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 603,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "7749:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7755:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 605,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "7763:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 602,
														"name": "KernelAllocationResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "7726:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint256,uint8)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7726:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "EmitStatement",
												"src": "7721:53:2"
											},
											{
												"condition": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7852:35:2",
													"subExpression": {
														"arguments": [
															{
																"id": 609,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "7876:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 608,
															"name": "isAllocationAcceptable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7853:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_bool_$",
																"typeString": "function (uint8) view returns (bool)"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7853:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "IfStatement",
												"src": "7848:178:2",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "7889:137:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "7929:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 614,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "7935:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657220616c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f6c64",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7943:45:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b0e3e68326095a55e54f21150c4ffa28a7510509a6bbedf8bf87c2447ec7def4",
																			"typeString": "literal_string \"Transfer allocation below minimum threshold\""
																		},
																		"value": "Transfer allocation below minimum threshold"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b0e3e68326095a55e54f21150c4ffa28a7510509a6bbedf8bf87c2447ec7def4",
																			"typeString": "literal_string \"Transfer allocation below minimum threshold\""
																		}
																	],
																	"id": 612,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "7908:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7908:81:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 617,
															"nodeType": "EmitStatement",
															"src": "7903:86:2"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8010:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 593,
															"id": 619,
															"nodeType": "Return",
															"src": "8003:12:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 623,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8072:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "8078:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "7472616e73666572",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8086:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
																"typeString": "literal_string \"transfer\""
															},
															"value": "transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_b483afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
																"typeString": "literal_string \"transfer\""
															}
														],
														"id": 622,
														"name": "TokenOperationApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "8049:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8049:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "EmitStatement",
												"src": "8044:53:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8114:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 593,
												"id": 629,
												"nodeType": "Return",
												"src": "8107:11:2"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "7027:335:2",
										"text": " @dev Authorize a token transfer operation with kernel verification\n @param from Address sending tokens\n @param to Address receiving tokens\n @param amount Amount of tokens to transfer\n @param additionalData Additional data for kernel decision\n @return bool True if transfer is authorized"
									},
									"functionSelector": "6dffcd00",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 587,
												"name": "onlyAuthorizedContract",
												"nameLocations": [
													"7512:22:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 309,
												"src": "7512:22:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7512:24:2"
										},
										{
											"arguments": [],
											"id": 590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 589,
												"name": "whenNotPaused",
												"nameLocations": [
													"7537:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "7537:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7537:15:2"
										}
									],
									"name": "authorizeTransfer",
									"nameLocation": "7376:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7411:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "7403:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7433:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "7425:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7453:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "7445:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "7482:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "7469:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7469:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7393:109:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "7562:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7562:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7561:6:2"
									},
									"scope": 1256,
									"src": "7367:758:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "8585:1286:2",
										"statements": [
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "8647:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "8641:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 647,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8641:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"id": 650,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "8684:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "8688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "additionalData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "8696:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 649,
														"name": "getKernelRecommendation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "8660:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
															"typeString": "function (address,uint256,bytes memory) view returns (uint8)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8660:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8641:70:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "8749:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "8753:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 658,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "8761:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 655,
														"name": "KernelAllocationResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "8726:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint256,uint8)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8726:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "EmitStatement",
												"src": "8721:51:2"
											},
											{
												"condition": {
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8850:35:2",
													"subExpression": {
														"arguments": [
															{
																"id": 662,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "8874:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 661,
															"name": "isAllocationAcceptable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8851:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_bool_$",
																"typeString": "function (uint8) view returns (bool)"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8851:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "8846:172:2",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "8887:131:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 666,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "8927:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 667,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "8931:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "4d696e7420616c6c6f636174696f6e2062656c6f77206d696e696d756d207468726573686f6c64",
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8939:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3b31aaa139c6086d8fdb9363d9dd6d588c9d0246bfbf325fb00353cb6011db9",
																			"typeString": "literal_string \"Mint allocation below minimum threshold\""
																		},
																		"value": "Mint allocation below minimum threshold"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3b31aaa139c6086d8fdb9363d9dd6d588c9d0246bfbf325fb00353cb6011db9",
																			"typeString": "literal_string \"Mint allocation below minimum threshold\""
																		}
																	],
																	"id": 665,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "8906:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8906:75:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 670,
															"nodeType": "EmitStatement",
															"src": "8901:80:2"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9002:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 646,
															"id": 672,
															"nodeType": "Return",
															"src": "8995:12:2"
														}
													]
												}
											},
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "adjustedAmount",
														"nameLocation": "9081:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "9073:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 677,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "9099:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 678,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "9108:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9099:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 680,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9098:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "323535",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9122:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "9098:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9073:52:2"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 712,
															"nodeType": "Block",
															"src": "9246:304:2",
															"statements": [
																{
																	"condition": {
																		"id": 692,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "9264:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 710,
																		"nodeType": "Block",
																		"src": "9401:139:2",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 703,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 634,
																							"src": "9445:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 704,
																							"name": "adjustedAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 676,
																							"src": "9449:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"hexValue": "4d696e74206661696c65643a2072657475726e65642066616c7365",
																							"id": 705,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9465:29:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_d66e1ae95467395fa9cfc4a8cef02f5ffe28e143cf5413c1938f058c626aec77",
																								"typeString": "literal_string \"Mint failed: returned false\""
																							},
																							"value": "Mint failed: returned false"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_d66e1ae95467395fa9cfc4a8cef02f5ffe28e143cf5413c1938f058c626aec77",
																								"typeString": "literal_string \"Mint failed: returned false\""
																							}
																						],
																						"id": 702,
																						"name": "TokenOperationDenied",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 267,
																						"src": "9424:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (address,uint256,string memory)"
																						}
																					},
																					"id": 706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9424:71:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 707,
																				"nodeType": "EmitStatement",
																				"src": "9419:76:2"
																			},
																			{
																				"expression": {
																					"hexValue": "66616c7365",
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9520:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				"functionReturnParameters": 646,
																				"id": 709,
																				"nodeType": "Return",
																				"src": "9513:12:2"
																			}
																		]
																	},
																	"id": 711,
																	"nodeType": "IfStatement",
																	"src": "9260:280:2",
																	"trueBody": {
																		"id": 701,
																		"nodeType": "Block",
																		"src": "9272:123:2",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 694,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 634,
																							"src": "9318:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 695,
																							"name": "adjustedAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 676,
																							"src": "9322:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"hexValue": "6469726563744d696e74",
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9338:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f2098c5f1783e8fae0a6a4a9ad6465d9a028773827ef610b1d6c938a8d58d2d7",
																								"typeString": "literal_string \"directMint\""
																							},
																							"value": "directMint"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_f2098c5f1783e8fae0a6a4a9ad6465d9a028773827ef610b1d6c938a8d58d2d7",
																								"typeString": "literal_string \"directMint\""
																							}
																						],
																						"id": 693,
																						"name": "TokenOperationApproved",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 259,
																						"src": "9295:22:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (address,uint256,string memory)"
																						}
																					},
																					"id": 697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9295:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 698,
																				"nodeType": "EmitStatement",
																				"src": "9290:61:2"
																			},
																			{
																				"expression": {
																					"hexValue": "74727565",
																					"id": 699,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9376:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"functionReturnParameters": 646,
																				"id": 700,
																				"nodeType": "Return",
																				"src": "9369:11:2"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 713,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 691,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 690,
																	"mutability": "mutable",
																	"name": "result",
																	"nameLocation": "9238:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 713,
																	"src": "9233:11:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9233:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "9232:13:2"
														},
														"src": "9224:326:2"
													},
													{
														"block": {
															"id": 732,
															"nodeType": "Block",
															"src": "9585:147:2",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 718,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 634,
																				"src": "9625:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 719,
																				"name": "adjustedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "9629:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "4d696e74206661696c65643a20",
																								"id": 724,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9669:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_828b1ceac6282d5991265989ddb1f80cbf5a4d8d2340eaefb7814d217d028738",
																									"typeString": "literal_string \"Mint failed: \""
																								},
																								"value": "Mint failed: "
																							},
																							{
																								"id": 725,
																								"name": "reason",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 715,
																								"src": "9686:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_828b1ceac6282d5991265989ddb1f80cbf5a4d8d2340eaefb7814d217d028738",
																									"typeString": "literal_string \"Mint failed: \""
																								},
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"expression": {
																								"id": 722,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "9652:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "9656:12:2",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "9652:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9652:41:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9645:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 720,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "9645:6:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9645:49:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 717,
																			"name": "TokenOperationDenied",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 267,
																			"src": "9604:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (address,uint256,string memory)"
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9604:91:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 729,
																	"nodeType": "EmitStatement",
																	"src": "9599:96:2"
																},
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9716:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 646,
																	"id": 731,
																	"nodeType": "Return",
																	"src": "9709:12:2"
																}
															]
														},
														"errorName": "Error",
														"id": 733,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 716,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 715,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "9577:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 733,
																	"src": "9563:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "9563:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "9562:22:2"
														},
														"src": "9551:181:2"
													},
													{
														"block": {
															"id": 742,
															"nodeType": "Block",
															"src": "9739:126:2",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 735,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 634,
																				"src": "9779:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 736,
																				"name": "adjustedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "9783:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "4d696e74206661696c65643a20556e6b6e6f776e206572726f72",
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9799:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_f1d20705202d3542cad0a2b70b68d2afc8299abdb166db6be6bfbb8ce7c85790",
																					"typeString": "literal_string \"Mint failed: Unknown error\""
																				},
																				"value": "Mint failed: Unknown error"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_f1d20705202d3542cad0a2b70b68d2afc8299abdb166db6be6bfbb8ce7c85790",
																					"typeString": "literal_string \"Mint failed: Unknown error\""
																				}
																			],
																			"id": 734,
																			"name": "TokenOperationDenied",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 267,
																			"src": "9758:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (address,uint256,string memory)"
																			}
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9758:70:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 739,
																	"nodeType": "EmitStatement",
																	"src": "9753:75:2"
																},
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9849:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 646,
																	"id": 741,
																	"nodeType": "Return",
																	"src": "9842:12:2"
																}
															]
														},
														"errorName": "",
														"id": 743,
														"nodeType": "TryCatchClause",
														"src": "9733:132:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 686,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "9204:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "9208:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 684,
															"name": "studyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "9182:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStudyToken_$191",
																"typeString": "contract IStudyToken"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9193:10:2",
														"memberName": "mintReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "9182:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:41:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "TryStatement",
												"src": "9178:687:2"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "8135:284:2",
										"text": " @dev Direct mint function with kernel verification (owner only)\n @param to Address to mint tokens to\n @param amount Amount of tokens to mint\n @param additionalData Additional data for kernel decision\n @return bool True if mint was successful"
									},
									"functionSelector": "d8817cd4",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyOwner",
												"nameLocations": [
													"8544:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8544:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8544:9:2"
										},
										{
											"arguments": [],
											"id": 643,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 642,
												"name": "whenNotPaused",
												"nameLocations": [
													"8554:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "8554:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8554:15:2"
										}
									],
									"name": "mintWithKernel",
									"nameLocation": "8433:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8465:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "8457:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8457:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8485:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "8477:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "8514:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "8501:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8501:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8447:87:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "8579:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8579:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:6:2"
									},
									"scope": 1256,
									"src": "8424:1447:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "10269:502:2",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "10287:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "10279:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "10299:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10299:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10279:35:2"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "userLimit",
														"nameLocation": "10332:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "10324:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10324:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10362:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 765,
														"name": "getUserDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "10344:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10344:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10324:41:2"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "usedToday",
														"nameLocation": "10383:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "10375:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10375:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 771,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "10395:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 773,
														"indexExpression": {
															"id": 772,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10410:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10395:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 775,
													"indexExpression": {
														"id": 774,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "10414:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10395:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10375:49:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10447:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 778,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "10459:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10447:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 780,
														"name": "userLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "10469:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10447:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "10653:112:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 802,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "10693:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "10697:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "4461696c79206c696d6974206578636565646564",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10705:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9bd082070ed48a1e99c071ec57b5f5993b2d28da31c806020b82e5de524c8f1c",
																			"typeString": "literal_string \"Daily limit exceeded\""
																		},
																		"value": "Daily limit exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9bd082070ed48a1e99c071ec57b5f5993b2d28da31c806020b82e5de524c8f1c",
																			"typeString": "literal_string \"Daily limit exceeded\""
																		}
																	],
																	"id": 801,
																	"name": "TokenOperationDenied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "10672:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10672:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 806,
															"nodeType": "EmitStatement",
															"src": "10667:61:2"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10749:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 757,
															"id": 808,
															"nodeType": "Return",
															"src": "10742:12:2"
														}
													]
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "10443:322:2",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "10480:167:2",
													"statements": [
														{
															"expression": {
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 782,
																			"name": "userDailyUsage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 231,
																			"src": "10494:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 785,
																		"indexExpression": {
																			"id": 783,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "10509:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10494:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 786,
																	"indexExpression": {
																		"id": 784,
																		"name": "dayNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "10513:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10494:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 787,
																		"name": "usedToday",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "10526:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 788,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "10538:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10526:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10494:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "10494:50:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "10586:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 794,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "10590:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "73696d706c6541757468",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10598:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8c44835ec084e2fe116e27bce7ef83bc7f2dc671d0bad1847b44c2b01d1d6bfc",
																			"typeString": "literal_string \"simpleAuth\""
																		},
																		"value": "simpleAuth"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8c44835ec084e2fe116e27bce7ef83bc7f2dc671d0bad1847b44c2b01d1d6bfc",
																			"typeString": "literal_string \"simpleAuth\""
																		}
																	],
																	"id": 792,
																	"name": "TokenOperationApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10563:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,string memory)"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10563:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 797,
															"nodeType": "EmitStatement",
															"src": "10558:53:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10632:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 757,
															"id": 799,
															"nodeType": "Return",
															"src": "10625:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "9951:211:2",
										"text": " @dev Simple authorization without kernel (for compatibility/emergency)\n @param to Address to authorize for\n @param amount Amount to authorize\n @return bool True if authorized"
									},
									"functionSelector": "41196faf",
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 753,
												"name": "onlyAuthorizedContract",
												"nameLocations": [
													"10229:22:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 309,
												"src": "10229:22:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10229:24:2"
										}
									],
									"name": "authorizeSimple",
									"nameLocation": "10176:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "10192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10212:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "10204:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:28:2"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "10263:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10263:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:6:2"
									},
									"scope": 1256,
									"src": "10167:604:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "10948:48:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 818,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10965:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10971:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10965:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10983:6:2",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "10965:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 822,
												"nodeType": "Return",
												"src": "10958:31:2"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "10838:50:2",
										"text": " @dev Get the current day number"
									},
									"functionSelector": "3e6968b6",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentDay",
									"nameLocation": "10902:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10915:2:2"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "10939:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10938:9:2"
									},
									"scope": 1256,
									"src": "10893:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "11140:120:2",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "userLimit",
														"nameLocation": "11158:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "11150:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"baseExpression": {
														"id": 834,
														"name": "userDailyLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "11170:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 836,
													"indexExpression": {
														"id": 835,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "11186:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11170:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11150:41:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 838,
															"name": "userLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "11208:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11208:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 842,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "11236:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11208:45:2",
													"trueExpression": {
														"id": 841,
														"name": "userLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "11224:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 831,
												"id": 844,
												"nodeType": "Return",
												"src": "11201:52:2"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "11006:58:2",
										"text": " @dev Get a user's effective daily limit"
									},
									"functionSelector": "77865f91",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDailyLimit",
									"nameLocation": "11078:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11104:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "11096:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11096:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11095:14:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "11131:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11131:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11130:9:2"
									},
									"scope": 1256,
									"src": "11069:191:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "11409:230:2",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "11427:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "11419:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 856,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "11439:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11439:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11419:35:2"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "usedToday",
														"nameLocation": "11472:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "11464:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11464:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 861,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "11484:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 863,
														"indexExpression": {
															"id": 862,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11499:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11484:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 865,
													"indexExpression": {
														"id": 864,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "11505:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11484:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11464:51:2"
											},
											{
												"assignments": [
													868
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"mutability": "mutable",
														"name": "limit",
														"nameLocation": "11533:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "11525:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 867,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11525:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 870,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11559:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 869,
														"name": "getUserDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "11541:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11541:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11525:39:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "11590:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 874,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11603:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11590:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 877,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11615:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 878,
															"name": "usedToday",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "11623:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11615:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11590:42:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11611:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 853,
												"id": 881,
												"nodeType": "Return",
												"src": "11583:49:2"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "11270:58:2",
										"text": " @dev Get a user's remaining daily limit"
									},
									"functionSelector": "ec37d259",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingDailyLimit",
									"nameLocation": "11342:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11373:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11365:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11365:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11364:14:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "11400:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11399:9:2"
									},
									"scope": 1256,
									"src": "11333:306:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11779:100:2",
										"statements": [
											{
												"assignments": [
													892
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "dayNumber",
														"nameLocation": "11797:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "11789:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 891,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11789:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 893,
														"name": "getCurrentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "11809:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11809:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11789:35:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 896,
															"name": "userDailyUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "11841:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 898,
														"indexExpression": {
															"id": 897,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "11856:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11841:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 900,
													"indexExpression": {
														"id": 899,
														"name": "dayNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "11862:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11841:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 901,
												"nodeType": "Return",
												"src": "11834:38:2"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "11649:58:2",
										"text": " @dev Get a user's used amount for today"
									},
									"functionSelector": "d3893b47",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTodayUsage",
									"nameLocation": "11721:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11743:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11735:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:14:2"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11770:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:9:2"
									},
									"scope": 1256,
									"src": "11712:167:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "12080:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 912,
																"name": "_threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "12098:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323535",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "12098:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468726573686f6c64206d757374206265203c3d20323535",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12117:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2838c9b5a292974ac568a2b4e1967da513d1f6efbe028957e28afca6693a89d8",
																"typeString": "literal_string \"Threshold must be <= 255\""
															},
															"value": "Threshold must be <= 255"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2838c9b5a292974ac568a2b4e1967da513d1f6efbe028957e28afca6693a89d8",
																"typeString": "literal_string \"Threshold must be <= 255\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12090:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12090:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "12090:54:2"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "oldThreshold",
														"nameLocation": "12160:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "12154:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 918,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12154:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"id": 920,
													"name": "minimumAllocationThreshold",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "12175:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12154:47:2"
											},
											{
												"expression": {
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 922,
														"name": "minimumAllocationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "12211:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 923,
														"name": "_threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12240:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "12211:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "12211:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 927,
															"name": "oldThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "12289:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 928,
															"name": "_threshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12303:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 926,
														"name": "MinimumThresholdUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "12265:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
															"typeString": "function (uint8,uint8)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12265:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "EmitStatement",
												"src": "12260:54:2"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11939:60:2",
										"text": " @dev Set the minimum allocation threshold"
									},
									"functionSelector": "b8db8ca8",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 908,
												"name": "onlyOwner",
												"nameLocations": [
													"12070:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "12070:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12070:9:2"
										}
									],
									"name": "setMinimumAllocationThreshold",
									"nameLocation": "12013:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_threshold",
												"nameLocation": "12049:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "12043:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 905,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12043:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12042:18:2"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12080:0:2"
									},
									"scope": 1256,
									"src": "12004:317:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "12450:275:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "_kernelAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "12468:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12494:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12486:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12486:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12486:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12468:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12498:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12460:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "12460:56:2"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "oldKernel",
														"nameLocation": "12534:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "12526:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 950,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12526:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"id": 952,
													"name": "kernelAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "12546:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12526:33:2"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 954,
														"name": "kernelAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "12569:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 955,
														"name": "_kernelAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "12585:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12569:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "12569:30:2"
											},
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 958,
														"name": "kernel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "12609:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
															"typeString": "contract ITokenAllocationKernel"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 960,
																"name": "_kernelAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "12641:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 959,
															"name": "ITokenAllocationKernel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "12618:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenAllocationKernel_$204_$",
																"typeString": "type(contract ITokenAllocationKernel)"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12618:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
															"typeString": "contract ITokenAllocationKernel"
														}
													},
													"src": "12609:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenAllocationKernel_$204",
														"typeString": "contract ITokenAllocationKernel"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "12609:47:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 965,
															"name": "oldKernel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "12692:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "_kernelAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12703:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 964,
														"name": "KernelAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "12671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12671:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "EmitStatement",
												"src": "12666:52:2"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "12331:45:2",
										"text": " @dev Update kernel address"
									},
									"functionSelector": "88616538",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 938,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 937,
												"name": "onlyOwner",
												"nameLocations": [
													"12440:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "12440:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12440:9:2"
										}
									],
									"name": "setKernelAddress",
									"nameLocation": "12390:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_kernelAddress",
												"nameLocation": "12415:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "12407:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12406:24:2"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12450:0:2"
									},
									"scope": 1256,
									"src": "12381:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "12855:273:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "12873:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12900:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12892:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12892:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12892:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12873:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12904:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12865:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12865:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "12865:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12940:37:2",
															"subExpression": {
																"baseExpression": {
																	"id": 989,
																	"name": "authorizedContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12941:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 991,
																"indexExpression": {
																	"id": 990,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "12961:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12941:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420616c726561647920617574686f72697a6564",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12979:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610",
																"typeString": "literal_string \"Contract already authorized\""
															},
															"value": "Contract already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74e7f6520574a344a1f78c9de155390cac2c80bfb003917f990401b6467aa610",
																"typeString": "literal_string \"Contract already authorized\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12932:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12932:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "12932:77:2"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 996,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "13028:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 997,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "13048:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13028:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13067:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13028:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "13028:43:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1003,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "13105:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "ContractAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "13086:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13086:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "13081:40:2"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "12735:44:2",
										"text": " @dev Authorize a contract"
									},
									"functionSelector": "67561d93",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 975,
												"name": "onlyOwner",
												"nameLocations": [
													"12845:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "12845:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "12845:9:2"
										}
									],
									"name": "authorizeContract",
									"nameLocation": "12793:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "12819:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "12811:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12810:25:2"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12855:0:2"
									},
									"scope": 1256,
									"src": "12784:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "13262:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1016,
																"name": "authorizedContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "13280:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1018,
															"indexExpression": {
																"id": 1017,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "13300:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13280:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617574686f72697a6564",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13318:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a",
																"typeString": "literal_string \"Contract not authorized\""
															},
															"value": "Contract not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c4945e6b3610d383f734579b5988e80e465f94d13969c86a446ea85a32f996a",
																"typeString": "literal_string \"Contract not authorized\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13272:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13272:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "13272:72:2"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1022,
															"name": "authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "13363:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1024,
														"indexExpression": {
															"id": 1023,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "13383:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13363:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13402:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13363:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "13363:44:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1029,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "13443:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1028,
														"name": "ContractDeauthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "13422:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13422:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "EmitStatement",
												"src": "13417:42:2"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "13138:46:2",
										"text": " @dev Deauthorize a contract"
									},
									"functionSelector": "6e861c0e",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1012,
												"name": "onlyOwner",
												"nameLocations": [
													"13252:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "13252:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13252:9:2"
										}
									],
									"name": "deauthorizeContract",
									"nameLocation": "13198:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "13226:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "13218:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13217:25:2"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13262:0:2"
									},
									"scope": 1256,
									"src": "13189:277:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "13621:142:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "13639:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1045,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13639:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13659:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13631:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13631:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "13631:46:2"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1053,
															"name": "userDailyLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "13687:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1055,
														"indexExpression": {
															"id": 1054,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "13703:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13687:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "13711:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13687:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "13687:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1060,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "13744:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "13750:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "UserLimitSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "13731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13731:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "13726:30:2"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "13476:65:2",
										"text": " @dev Set daily token limit for a specific user"
									},
									"functionSelector": "177c49a7",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "onlyOwner",
												"nameLocations": [
													"13611:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "13611:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13611:9:2"
										}
									],
									"name": "setUserDailyLimit",
									"nameLocation": "13555:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "13581:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "13573:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "13595:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "13587:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13587:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13572:29:2"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13621:0:2"
									},
									"scope": 1256,
									"src": "13546:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13903:42:2",
										"statements": [
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "defaultDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "13913:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1074,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "13933:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13913:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13913:25:2"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "13773:61:2",
										"text": " @dev Set default daily limit for all users"
									},
									"functionSelector": "bebbcfe6",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1070,
												"name": "onlyOwner",
												"nameLocations": [
													"13893:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "13893:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "13893:9:2"
										}
									],
									"name": "setDefaultDailyLimit",
									"nameLocation": "13848:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "13877:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13868:15:2"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13903:0:2"
									},
									"scope": 1256,
									"src": "13839:106:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "14085:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "14103:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14133:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14125:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14125:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14125:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14103:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14137:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14095:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "14095:60:2"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1096,
														"name": "studyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "14165:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStudyToken_$191",
															"typeString": "contract IStudyToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1098,
																"name": "_studyTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "14190:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1097,
															"name": "IStudyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "14178:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IStudyToken_$191_$",
																"typeString": "type(contract IStudyToken)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14178:31:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStudyToken_$191",
															"typeString": "contract IStudyToken"
														}
													},
													"src": "14165:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStudyToken_$191",
														"typeString": "contract IStudyToken"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "14165:44:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13955:55:2",
										"text": " @dev Set StudyToken contract address"
									},
									"functionSelector": "b09a8a04",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1083,
												"name": "onlyOwner",
												"nameLocations": [
													"14075:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14075:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "14075:9:2"
										}
									],
									"name": "setStudyToken",
									"nameLocation": "14024:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "_studyTokenAddress",
												"nameLocation": "14046:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "14038:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14038:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14037:28:2"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14085:0:2"
									},
									"scope": 1256,
									"src": "14015:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "14331:81:2",
										"statements": [
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1111,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "14341:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "_isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "14352:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14341:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "14341:20:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1116,
															"name": "_isPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "14395:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1115,
														"name": "PauseStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "14376:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14376:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "14371:34:2"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "14226:47:2",
										"text": " @dev Emergency pause/unpause"
									},
									"functionSelector": "bedb86fb",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1108,
												"name": "onlyOwner",
												"nameLocations": [
													"14321:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14321:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "14321:9:2"
										}
									],
									"name": "setPause",
									"nameLocation": "14287:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_isPaused",
												"nameLocation": "14301:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "14296:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14296:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14295:16:2"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14331:0:2"
									},
									"scope": 1256,
									"src": "14278:134:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "14669:311:2",
										"statements": [
											{
												"condition": {
													"id": 1132,
													"name": "isPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 237,
													"src": "14683:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1138,
												"nodeType": "IfStatement",
												"src": "14679:75:2",
												"trueBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "14693:61:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14715:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "436f6e747261637420697320706175736564",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14722:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																			"typeString": "literal_string \"Contract is paused\""
																		},
																		"value": "Contract is paused"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14714:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_$",
																	"typeString": "tuple(bool,literal_string \"Contract is paused\")"
																}
															},
															"functionReturnParameters": 1131,
															"id": 1136,
															"nodeType": "Return",
															"src": "14707:36:2"
														}
													]
												}
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "14780:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "14772:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14772:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "14815:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "getRemainingDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "14792:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14792:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14772:48:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1145,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "14834:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1146,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "14846:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14834:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "14830:91:2",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "14854:67:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14876:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206461696c79206c696d6974",
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14883:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d09fefa22f2f2d1f92004d35b614806bda43542a76f67f461c9efb6eba6d41ac",
																			"typeString": "literal_string \"Insufficient daily limit\""
																		},
																		"value": "Insufficient daily limit"
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14875:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_d09fefa22f2f2d1f92004d35b614806bda43542a76f67f461c9efb6eba6d41ac_$",
																	"typeString": "tuple(bool,literal_string \"Insufficient daily limit\")"
																}
															},
															"functionReturnParameters": 1131,
															"id": 1151,
															"nodeType": "Return",
															"src": "14868:42:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14947:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "4f7065726174696f6e20616c6c6f776564",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14953:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef60fde1fb3cbc75d51a6e9ea214c5882ce14c099755e0aece1cb9acefd9d0ae",
																"typeString": "literal_string \"Operation allowed\""
															},
															"value": "Operation allowed"
														}
													],
													"id": 1156,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14946:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_ef60fde1fb3cbc75d51a6e9ea214c5882ce14c099755e0aece1cb9acefd9d0ae_$",
														"typeString": "tuple(bool,literal_string \"Operation allowed\")"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1157,
												"nodeType": "Return",
												"src": "14939:34:2"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "14471:77:2",
										"text": " @dev Check if user can perform operation with given amount"
									},
									"functionSelector": "207cbfa2",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canUserOperate",
									"nameLocation": "14562:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14585:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "14577:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14577:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14599:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "14591:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14576:30:2"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "canOperate",
												"nameLocation": "14635:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "14630:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "14661:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "14647:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14647:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14629:39:2"
									},
									"scope": 1256,
									"src": "14553:427:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "15223:203:2",
										"statements": [
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "15233:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1175,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "15264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1174,
															"name": "getUserDailyLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "15246:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15246:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15233:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "15233:36:2"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "usedToday",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15279:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1181,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "15305:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1180,
															"name": "getTodayUsage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "15291:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15291:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15279:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "15279:31:2"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "remainingToday",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15320:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1187,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "15360:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1186,
															"name": "getRemainingDailyLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "15337:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15337:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15320:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "15320:45:2"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "canOperate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "15375:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15388:9:2",
															"subExpression": {
																"id": 1192,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "15389:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "remainingToday",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "15401:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15418:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15401:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15388:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15375:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "15375:44:2"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "14990:50:2",
										"text": " @dev Get user's complete status"
									},
									"functionSelector": "ea0d5dcd",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStatus",
									"nameLocation": "15054:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15076:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "15068:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15068:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15067:14:2"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "dailyLimit",
												"nameLocation": "15122:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "15114:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15114:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "usedToday",
												"nameLocation": "15150:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "15142:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15142:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "remainingToday",
												"nameLocation": "15177:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "15169:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "canOperate",
												"nameLocation": "15206:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "15201:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:118:2"
									},
									"scope": 1256,
									"src": "15045:381:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "15802:321:2",
										"statements": [
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15812:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1221,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "15849:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "15855:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1223,
																"name": "additionalData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "15863:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1220,
															"name": "getKernelRecommendation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "15825:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
																"typeString": "function (address,uint256,bytes memory) view returns (uint8)"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15825:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "15812:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "15812:66:2"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "meetsThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "15888:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1229,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "15928:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1228,
															"name": "isAllocationAcceptable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "15905:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_bool_$",
																"typeString": "function (uint8) view returns (bool)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15905:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15888:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "15888:51:2"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "adjustedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "15949:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1234,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "15967:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1235,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "15976:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "15967:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1237,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15966:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "323535",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15990:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "255"
														},
														"src": "15966:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15949:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "15949:44:2"
											},
											{
												"assignments": [
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "16020:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "16012:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"id": 1245,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "16055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1244,
														"name": "getRemainingDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "16032:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16032:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16012:48:2"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "withinDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "16070:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1249,
															"name": "adjustedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "16089:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1250,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "16107:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16089:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16070:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "16070:46:2"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "15436:88:2",
										"text": " @dev Preview what would happen with a kernel call (without executing)"
									},
									"functionSelector": "f64d2190",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewKernelRecommendation",
									"nameLocation": "15538:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15583:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15575:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15575:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15605:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15597:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "additionalData",
												"nameLocation": "15634:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15621:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15621:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15565:89:2"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "15693:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15687:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1210,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15687:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "meetsThreshold",
												"nameLocation": "15718:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15713:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15713:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "adjustedAmount",
												"nameLocation": "15750:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15742:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "withinDailyLimit",
												"nameLocation": "15779:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "15774:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15774:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15677:124:2"
									},
									"scope": 1256,
									"src": "15529:594:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "781:15344:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								241,
								245,
								251,
								259,
								267,
								275,
								281,
								287,
								291
							]
						}
					],
					"src": "32:16093:2"
				},
				"id": 2
			}
		}
	}
}